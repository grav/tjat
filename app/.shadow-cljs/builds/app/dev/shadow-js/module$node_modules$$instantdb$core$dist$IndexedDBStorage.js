["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@instantdb/core/dist/IndexedDBStorage.js"],"~:js","shadow$provide.module$node_modules$$instantdb$core$dist$IndexedDBStorage = function(global, require, module, exports) {\n  var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function(resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  class IndexedDBStorage {\n    constructor(dbName) {\n      this.dbName = dbName;\n      this._storeName = \"kv\";\n      this._dbPromise = this._init();\n    }\n    _init() {\n      return new Promise((resolve, reject) => {\n        const request = indexedDB.open(this.dbName, 1);\n        request.onerror = event => {\n          reject(event);\n        };\n        request.onsuccess = event => {\n          resolve(event.target.result);\n        };\n        request.onupgradeneeded = event => {\n          event.target.result.createObjectStore(this._storeName);\n        };\n      });\n    }\n    getItem(k) {\n      return __awaiter(this, void 0, void 0, function*() {\n        const db = yield this._dbPromise;\n        return new Promise((resolve, reject) => {\n          const request = db.transaction([this._storeName], \"readonly\").objectStore(this._storeName).get(k);\n          request.onerror = event => {\n            reject(event);\n          };\n          request.onsuccess = _event => {\n            request.result ? resolve(request.result) : resolve(null);\n          };\n        });\n      });\n    }\n    setItem(k, v) {\n      return __awaiter(this, void 0, void 0, function*() {\n        const db = yield this._dbPromise;\n        return new Promise((resolve, reject) => {\n          const request = db.transaction([this._storeName], \"readwrite\").objectStore(this._storeName).put(v, k);\n          request.onerror = event => {\n            reject(event);\n          };\n          request.onsuccess = _event => {\n            resolve();\n          };\n        });\n      });\n    }\n  }\n  exports.default = IndexedDBStorage;\n};\n","~:source","shadow$provide[\"module$node_modules$$instantdb$core$dist$IndexedDBStorage\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass IndexedDBStorage {\n    constructor(dbName) {\n        this.dbName = dbName;\n        this._storeName = 'kv';\n        this._dbPromise = this._init();\n    }\n    _init() {\n        return new Promise((resolve, reject) => {\n            const request = indexedDB.open(this.dbName, 1);\n            request.onerror = (event) => {\n                reject(event);\n            };\n            request.onsuccess = (event) => {\n                resolve(event.target.result);\n            };\n            request.onupgradeneeded = (event) => {\n                const db = event.target.result;\n                db.createObjectStore(this._storeName);\n            };\n        });\n    }\n    getItem(k) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const db = yield this._dbPromise;\n            return new Promise((resolve, reject) => {\n                const transaction = db.transaction([this._storeName], 'readonly');\n                const objectStore = transaction.objectStore(this._storeName);\n                const request = objectStore.get(k);\n                request.onerror = (event) => {\n                    reject(event);\n                };\n                request.onsuccess = (_event) => {\n                    if (request.result) {\n                        resolve(request.result);\n                    }\n                    else {\n                        resolve(null);\n                    }\n                };\n            });\n        });\n    }\n    setItem(k, v) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const db = yield this._dbPromise;\n            return new Promise((resolve, reject) => {\n                const transaction = db.transaction([this._storeName], 'readwrite');\n                const objectStore = transaction.objectStore(this._storeName);\n                const request = objectStore.put(v, k);\n                request.onerror = (event) => {\n                    reject(event);\n                };\n                request.onsuccess = (_event) => {\n                    resolve();\n                };\n            });\n        });\n    }\n}\nexports.default = IndexedDBStorage;\n//# sourceMappingURL=IndexedDBStorage.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["onerror","onsuccess","__esModule","value","onupgradeneeded","_dbPromise","dbName","default","_storeName"]],"~:compiled-at",1756239699970,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$instantdb$core$dist$IndexedDBStorage.js\",\n\"lineCount\":81,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@instantdb/core/dist/IndexedDBStorage.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$instantdb$core$dist$IndexedDBStorage\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\n    return new (P || (P = Promise))(function (resolve, reject) {\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\n        function rejected(value) { try { step(generator[\\\"throw\\\"](value)); } catch (e) { reject(e); } }\\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\n    });\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nclass IndexedDBStorage {\\n    constructor(dbName) {\\n        this.dbName = dbName;\\n        this._storeName = 'kv';\\n        this._dbPromise = this._init();\\n    }\\n    _init() {\\n        return new Promise((resolve, reject) => {\\n            const request = indexedDB.open(this.dbName, 1);\\n            request.onerror = (event) => {\\n                reject(event);\\n            };\\n            request.onsuccess = (event) => {\\n                resolve(event.target.result);\\n            };\\n            request.onupgradeneeded = (event) => {\\n                const db = event.target.result;\\n                db.createObjectStore(this._storeName);\\n            };\\n        });\\n    }\\n    getItem(k) {\\n        return __awaiter(this, void 0, void 0, function* () {\\n            const db = yield this._dbPromise;\\n            return new Promise((resolve, reject) => {\\n                const transaction = db.transaction([this._storeName], 'readonly');\\n                const objectStore = transaction.objectStore(this._storeName);\\n                const request = objectStore.get(k);\\n                request.onerror = (event) => {\\n                    reject(event);\\n                };\\n                request.onsuccess = (_event) => {\\n                    if (request.result) {\\n                        resolve(request.result);\\n                    }\\n                    else {\\n                        resolve(null);\\n                    }\\n                };\\n            });\\n        });\\n    }\\n    setItem(k, v) {\\n        return __awaiter(this, void 0, void 0, function* () {\\n            const db = yield this._dbPromise;\\n            return new Promise((resolve, reject) => {\\n                const transaction = db.transaction([this._storeName], 'readwrite');\\n                const objectStore = transaction.objectStore(this._storeName);\\n                const request = objectStore.put(v, k);\\n                request.onerror = (event) => {\\n                    reject(event);\\n                };\\n                request.onsuccess = (_event) => {\\n                    resolve();\\n                };\\n            });\\n        });\\n    }\\n}\\nexports.default = IndexedDBStorage;\\n//# sourceMappingURL=IndexedDBStorage.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__awaiter\",\"thisArg\",\"_arguments\",\"P\",\"generator\",\"adopt\",\"value\",\"resolve\",\"Promise\",\"reject\",\"fulfilled\",\"step\",\"next\",\"e\",\"rejected\",\"result\",\"done\",\"then\",\"apply\",\"Object\",\"defineProperty\",\"IndexedDBStorage\",\"constructor\",\"dbName\",\"_storeName\",\"_dbPromise\",\"_init\",\"request\",\"indexedDB\",\"open\",\"onerror\",\"event\",\"request.onerror\",\"onsuccess\",\"request.onsuccess\",\"target\",\"onupgradeneeded\",\"request.onupgradeneeded\",\"createObjectStore\",\"getItem\",\"k\",\"db\",\"transaction\",\"objectStore\",\"get\",\"_event\",\"setItem\",\"v\",\"put\",\"default\"]\n}\n"]