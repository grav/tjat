["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/uuid/dist/commonjs-browser/v1.js"],"~:js","shadow$provide.module$node_modules$uuid$dist$commonjs_browser$v1 = function(global, require, module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.default = void 0;\n  var _rng = function(obj) {\n    return obj && obj.__esModule ? obj : {default:obj};\n  }(require(\"module$node_modules$uuid$dist$commonjs_browser$rng\")), _stringify = require(\"module$node_modules$uuid$dist$commonjs_browser$stringify\");\n  let _nodeId, _clockseq, _lastMSecs = 0, _lastNSecs = 0;\n  exports.default = function(options, buf, offset) {\n    offset = buf && offset || 0;\n    const b = buf || Array(16);\n    options = options || {};\n    let node = options.node || _nodeId;\n    var clockseq = void 0 !== options.clockseq ? options.clockseq : _clockseq;\n    if (null == node || null == clockseq) {\n      var seedBytes = options.random || (options.rng || _rng.default)();\n      null == node && (node = _nodeId = [seedBytes[0] | 1, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]]);\n      null == clockseq && (clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 16383);\n    }\n    seedBytes = void 0 !== options.msecs ? options.msecs : Date.now();\n    let nsecs = void 0 !== options.nsecs ? options.nsecs : _lastNSecs + 1;\n    const dt = seedBytes - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n    0 > dt && void 0 === options.clockseq && (clockseq = clockseq + 1 & 16383);\n    (0 > dt || seedBytes > _lastMSecs) && void 0 === options.nsecs && (nsecs = 0);\n    if (10000 <= nsecs) {\n      throw Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n    }\n    _lastMSecs = seedBytes;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n    seedBytes += 12219292800000;\n    options = (10000 * (seedBytes & 268435455) + nsecs) % 4294967296;\n    b[offset++] = options >>> 24 & 255;\n    b[offset++] = options >>> 16 & 255;\n    b[offset++] = options >>> 8 & 255;\n    b[offset++] = options & 255;\n    options = seedBytes / 4294967296 * 10000 & 268435455;\n    b[offset++] = options >>> 8 & 255;\n    b[offset++] = options & 255;\n    b[offset++] = options >>> 24 & 15 | 16;\n    b[offset++] = options >>> 16 & 255;\n    b[offset++] = clockseq >>> 8 | 128;\n    b[offset++] = clockseq & 255;\n    for (clockseq = 0; 6 > clockseq; ++clockseq) {\n      b[offset + clockseq] = node[clockseq];\n    }\n    return buf || (0,_stringify.unsafeStringify)(b);\n  };\n};\n","~:source","shadow$provide[\"module$node_modules$uuid$dist$commonjs_browser$v1\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\n\nvar _default = v1;\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$uuid$dist$commonjs_browser$rng","~$shadow.js","~$module$node_modules$uuid$dist$commonjs_browser$stringify"]],"~:properties",["^5",["__esModule","value","default"]],"~:compiled-at",1756239699949,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$uuid$dist$commonjs_browser$v1.js\",\n\"lineCount\":49,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/uuid/dist/commonjs-browser/v1.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$uuid$dist$commonjs_browser$v1\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _rng = _interopRequireDefault(require(\\\"./rng.js\\\"));\\n\\nvar _stringify = require(\\\"./stringify.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// **`v1()` - Generate time-based UUID**\\n//\\n// Inspired by https://github.com/LiosK/UUID.js\\n// and http://docs.python.org/library/uuid.html\\nlet _nodeId;\\n\\nlet _clockseq; // Previous uuid creation time\\n\\n\\nlet _lastMSecs = 0;\\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\\n\\nfunction v1(options, buf, offset) {\\n  let i = buf && offset || 0;\\n  const b = buf || new Array(16);\\n  options = options || {};\\n  let node = options.node || _nodeId;\\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\\n  // specified.  We do this lazily to minimize issues related to insufficient\\n  // system entropy.  See #189\\n\\n  if (node == null || clockseq == null) {\\n    const seedBytes = options.random || (options.rng || _rng.default)();\\n\\n    if (node == null) {\\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\\n    }\\n\\n    if (clockseq == null) {\\n      // Per 4.2.2, randomize (14 bit) clockseq\\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\\n    }\\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\\n\\n\\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\\n  // cycle to simulate higher resolution clock\\n\\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\\n\\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\\n\\n  if (dt < 0 && options.clockseq === undefined) {\\n    clockseq = clockseq + 1 & 0x3fff;\\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\\n  // time interval\\n\\n\\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\\n    nsecs = 0;\\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\\n\\n\\n  if (nsecs >= 10000) {\\n    throw new Error(\\\"uuid.v1(): Can't create more than 10M uuids/sec\\\");\\n  }\\n\\n  _lastMSecs = msecs;\\n  _lastNSecs = nsecs;\\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\\n\\n  msecs += 12219292800000; // `time_low`\\n\\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\\n  b[i++] = tl >>> 24 & 0xff;\\n  b[i++] = tl >>> 16 & 0xff;\\n  b[i++] = tl >>> 8 & 0xff;\\n  b[i++] = tl & 0xff; // `time_mid`\\n\\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\\n  b[i++] = tmh >>> 8 & 0xff;\\n  b[i++] = tmh & 0xff; // `time_high_and_version`\\n\\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\\n\\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\\n\\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\\n\\n  b[i++] = clockseq & 0xff; // `node`\\n\\n  for (let n = 0; n < 6; ++n) {\\n    b[i + n] = node[n];\\n  }\\n\\n  return buf || (0, _stringify.unsafeStringify)(b);\\n}\\n\\nvar _default = v1;\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"default\",\"_rng\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"_stringify\",\"_nodeId\",\"_clockseq\",\"_lastMSecs\",\"_lastNSecs\",\"v1\",\"options\",\"buf\",\"offset\",\"i\",\"b\",\"Array\",\"node\",\"clockseq\",\"undefined\",\"seedBytes\",\"random\",\"rng\",\"msecs\",\"Date\",\"now\",\"nsecs\",\"dt\",\"Error\",\"tl\",\"tmh\",\"n\",\"unsafeStringify\"]\n}\n"]