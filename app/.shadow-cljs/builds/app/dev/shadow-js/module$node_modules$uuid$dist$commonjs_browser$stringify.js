["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/uuid/dist/commonjs-browser/stringify.js"],"~:js","shadow$provide.module$node_modules$uuid$dist$commonjs_browser$stringify = function(global, require, module, exports) {\n  function unsafeStringify(arr, offset = 0) {\n    return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n  }\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.default = void 0;\n  exports.unsafeStringify = unsafeStringify;\n  var _validate = function(obj) {\n    return obj && obj.__esModule ? obj : {default:obj};\n  }(require(\"module$node_modules$uuid$dist$commonjs_browser$validate\"));\n  const byteToHex = [];\n  for (global = 0; 256 > global; ++global) {\n    byteToHex.push((global + 256).toString(16).slice(1));\n  }\n  exports.default = function(arr, offset = 0) {\n    arr = unsafeStringify(arr, offset);\n    if (!(0,_validate.default)(arr)) {\n      throw TypeError(\"Stringified UUID is invalid\");\n    }\n    return arr;\n  };\n};\n","~:source","shadow$provide[\"module$node_modules$uuid$dist$commonjs_browser$stringify\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$uuid$dist$commonjs_browser$validate","~$shadow.js"]],"~:properties",["^5",["__esModule","unsafeStringify","value","default"]],"~:compiled-at",1756239699948,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$uuid$dist$commonjs_browser$stringify.js\",\n\"lineCount\":23,\n\"mappings\":\"AAAAA,cAAA,CAAA,wDAAA,GAA6E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAuBrHC,UAASA,gBAAe,CAACC,GAAD,EAAMC,MAAA,GAAS,CAAf,CAAkB;AAGxC,WAAOC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,CAAb,CAAV,CAAP,GAAoCC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,CAAb,CAAV,CAApC,GAAiEC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,CAAb,CAAV,CAAjE,GAA8FC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,CAAb,CAAV,CAA9F,GAA2H,GAA3H,GAAiIC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,CAAb,CAAV,CAAjI,GAA8JC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,CAAb,CAAV,CAA9J,GAA2L,GAA3L,GAAiMC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,CAAb,CAAV,CAAjM,GAA8NC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,CAAb,CAAV,CAA9N,GAA2P,GAA3P,GAAiQC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,CAAb,CAAV,CAAjQ,GAA8RC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,CAAb,CAAV,CAA9R,GAA2T,GAA3T,GAAiUC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,EAAb,CAAV,CAAjU,GAA+VC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,EAAb,CAAV,CAA/V,GAA6XC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,EAAb,CAAV,CAA7X,GAA2ZC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,EAAb,CAAV,CAA3Z,GAAybC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,EAAb,CAAV,CAAzb,GAAudC,SAAA,CAAUF,GAAA,CAAIC,MAAJ,GAAa,EAAb,CAAV,CAAvd;AAHwC;AApB1CE,QAAOC,CAAAA,cAAP,CAAsBN,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAP,SAAQQ,CAAAA,OAAR,GAAkB,IAAK,EAAvB;AACAR,SAAQC,CAAAA,eAAR,GAA0BA,eAA1B;AAEA,MAAIQ,YAEJC,QAA+B,CAACC,GAAD,CAAM;AAAE,WAAOA,GAAA,IAAOA,GAAIC,CAAAA,UAAX,GAAwBD,GAAxB,GAA8B,CAAEH,QAASG,GAAX,CAArC;AAAF,GAFrB,CAAuBb,OAAA,CAAQ,yDAAR,CAAvB,CAAhB;AAQA,QAAMM,YAAY,EAAlB;AAEA,OAASS,MAAT,GAAa,CAAb,EAAoB,GAApB,GAAgBA,MAAhB,EAAyB,EAAEA,MAA3B;AACET,aAAUU,CAAAA,IAAV,CAA2BC,CAAXF,MAAWE,GAAP,GAAOA,EAAAA,QAAZ,CAAqB,EAArB,CAAyBC,CAAAA,KAAzB,CAA+B,CAA/B,CAAf,CAAA;AADF;AAyBAhB,SAAQQ,CAAAA,OAAR,GAfAS,QAAkB,CAACf,GAAD,EAAMC,MAAA,GAAS,CAAf,CAAkB;AAC5Be,OAAAA,GAAOjB,eAAA,CAAgBC,GAAhB,EAAqBC,MAArB,CAAPe;AAMN,QAAI,CAAC,GAAIT,SAAUD,CAAAA,OAAd,EAAuBU,GAAvB,CAAL;AACE,YAAMC,SAAA,CAAU,6BAAV,CAAN;AADF;AAIA,WAAOD,GAAP;AAXkC,GAepC;AA5CqH,CAArH;;\",\n\"sources\":[\"node_modules/uuid/dist/commonjs-browser/stringify.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$uuid$dist$commonjs_browser$stringify\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\nexports.unsafeStringify = unsafeStringify;\\n\\nvar _validate = _interopRequireDefault(require(\\\"./validate.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Convert array of 16 byte values to UUID string format of the form:\\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\\n */\\nconst byteToHex = [];\\n\\nfor (let i = 0; i < 256; ++i) {\\n  byteToHex.push((i + 0x100).toString(16).slice(1));\\n}\\n\\nfunction unsafeStringify(arr, offset = 0) {\\n  // Note: Be careful editing this code!  It's been tuned for performance\\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\\n}\\n\\nfunction stringify(arr, offset = 0) {\\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\\n  // of the following:\\n  // - One or more input array values don't map to a hex octet (leading to\\n  // \\\"undefined\\\" in the uuid)\\n  // - Invalid input values for the RFC `version` or `variant` fields\\n\\n  if (!(0, _validate.default)(uuid)) {\\n    throw TypeError('Stringified UUID is invalid');\\n  }\\n\\n  return uuid;\\n}\\n\\nvar _default = stringify;\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"unsafeStringify\",\"arr\",\"offset\",\"byteToHex\",\"Object\",\"defineProperty\",\"value\",\"default\",\"_validate\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"i\",\"push\",\"toString\",\"slice\",\"stringify\",\"uuid\",\"TypeError\"]\n}\n"]