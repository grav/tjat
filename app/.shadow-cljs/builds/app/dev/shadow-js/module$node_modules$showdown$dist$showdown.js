["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/showdown/dist/showdown.js"],"~:js","shadow$provide.module$node_modules$showdown$dist$showdown = function(global, require, module, exports) {\n  (function() {\n    function getDefaultOpts(simple) {\n      var defaultOptions = {omitExtraWLInCodeBlocks:{defaultValue:!1, describe:\"Omit the default extra whiteline added to code blocks\", type:\"boolean\"}, noHeaderId:{defaultValue:!1, describe:\"Turn on/off generated header id\", type:\"boolean\"}, prefixHeaderId:{defaultValue:!1, describe:\"Add a prefix to the generated header ids. Passing a string will prefix that string to the header id. Setting to true will add a generic 'section-' prefix\", type:\"string\"}, rawPrefixHeaderId:{defaultValue:!1, describe:'Setting this option to true will prevent showdown from modifying the prefix. This might result in malformed IDs (if, for instance, the \" char is used in the prefix)', \n      type:\"boolean\"}, ghCompatibleHeaderId:{defaultValue:!1, describe:\"Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)\", type:\"boolean\"}, rawHeaderId:{defaultValue:!1, describe:\"Remove only spaces, ' and \\\" from generated header ids (including prefixes), replacing them with dashes (-). WARNING: This might result in malformed ids\", type:\"boolean\"}, headerLevelStart:{defaultValue:!1, describe:\"The header blocks level start\", \n      type:\"integer\"}, parseImgDimensions:{defaultValue:!1, describe:\"Turn on/off image dimension parsing\", type:\"boolean\"}, simplifiedAutoLink:{defaultValue:!1, describe:\"Turn on/off GFM autolink style\", type:\"boolean\"}, excludeTrailingPunctuationFromURLs:{defaultValue:!1, describe:\"Excludes trailing punctuation from links generated with autoLinking\", type:\"boolean\"}, literalMidWordUnderscores:{defaultValue:!1, describe:\"Parse midword underscores as literal underscores\", type:\"boolean\"}, literalMidWordAsterisks:{defaultValue:!1, \n      describe:\"Parse midword asterisks as literal asterisks\", type:\"boolean\"}, strikethrough:{defaultValue:!1, describe:\"Turn on/off strikethrough support\", type:\"boolean\"}, tables:{defaultValue:!1, describe:\"Turn on/off tables support\", type:\"boolean\"}, tablesHeaderId:{defaultValue:!1, describe:\"Add an id to table headers\", type:\"boolean\"}, ghCodeBlocks:{defaultValue:!0, describe:\"Turn on/off GFM fenced code blocks support\", type:\"boolean\"}, tasklists:{defaultValue:!1, describe:\"Turn on/off GFM tasklist support\", \n      type:\"boolean\"}, smoothLivePreview:{defaultValue:!1, describe:\"Prevents weird effects in live previews due to incomplete input\", type:\"boolean\"}, smartIndentationFix:{defaultValue:!1, describe:\"Tries to smartly fix indentation in es6 strings\", type:\"boolean\"}, disableForced4SpacesIndentedSublists:{defaultValue:!1, describe:\"Disables the requirement of indenting nested sublists by 4 spaces\", type:\"boolean\"}, simpleLineBreaks:{defaultValue:!1, describe:\"Parses simple line breaks as \\x3cbr\\x3e (GFM Style)\", \n      type:\"boolean\"}, requireSpaceBeforeHeadingText:{defaultValue:!1, describe:\"Makes adding a space between `#` and the header text mandatory (GFM Style)\", type:\"boolean\"}, ghMentions:{defaultValue:!1, describe:\"Enables github @mentions\", type:\"boolean\"}, ghMentionsLink:{defaultValue:\"https://github.com/{u}\", describe:\"Changes the link generated by @mentions. Only applies if ghMentions option is enabled.\", type:\"string\"}, encodeEmails:{defaultValue:!0, describe:\"Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities\", \n      type:\"boolean\"}, openLinksInNewWindow:{defaultValue:!1, describe:\"Open all links in new windows\", type:\"boolean\"}, backslashEscapesHTMLTags:{defaultValue:!1, describe:\"Support for HTML Tag escaping. ex: \\x3cdiv\\x3efoo\\x3c/div\\x3e\", type:\"boolean\"}, emoji:{defaultValue:!1, describe:\"Enable emoji support. Ex: `this is a :smile: emoji`\", type:\"boolean\"}, underline:{defaultValue:!1, describe:\"Enable support for underline. Syntax is double or triple underscores: `__underline word__`. With this option enabled, underscores no longer parses into `\\x3cem\\x3e` and `\\x3cstrong\\x3e`\", \n      type:\"boolean\"}, ellipsis:{defaultValue:!0, describe:\"Replaces three dots with the ellipsis unicode character\", type:\"boolean\"}, completeHTMLDocument:{defaultValue:!1, describe:\"Outputs a complete html document, including `\\x3chtml\\x3e`, `\\x3chead\\x3e` and `\\x3cbody\\x3e` tags\", type:\"boolean\"}, metadata:{defaultValue:!1, describe:\"Enable support for document metadata (defined at the top of the document between `«««` and `»»»` or between `---` and `---`).\", type:\"boolean\"}, splitAdjacentBlockquotes:{defaultValue:!1, \n      describe:\"Split adjacent blockquote blocks\", type:\"boolean\"}};\n      if (!1 === simple) {\n        return JSON.parse(JSON.stringify(defaultOptions));\n      }\n      simple = {};\n      for (var opt in defaultOptions) {\n        defaultOptions.hasOwnProperty(opt) && (simple[opt] = defaultOptions[opt].defaultValue);\n      }\n      return simple;\n    }\n    function validate(extension, name) {\n      name = name ? \"Error in \" + name + \" extension-\\x3e\" : \"Error in unnamed extension\";\n      var ret = {valid:!0, error:\"\"};\n      showdown.helper.isArray(extension) || (extension = [extension]);\n      for (var i = 0; i < extension.length; ++i) {\n        var baseMsg = name + \" sub-extension \" + i + \": \", ext = extension[i];\n        if (\"object\" !== typeof ext) {\n          ret.valid = !1;\n          ret.error = baseMsg + \"must be an object, but \" + typeof ext + \" given\";\n          break;\n        }\n        if (!showdown.helper.isString(ext.type)) {\n          ret.valid = !1;\n          ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + \" given\";\n          break;\n        }\n        var type = ext.type = ext.type.toLowerCase();\n        \"language\" === type && (type = ext.type = \"lang\");\n        \"html\" === type && (type = ext.type = \"output\");\n        if (\"lang\" !== type && \"output\" !== type && \"listener\" !== type) {\n          ret.valid = !1;\n          ret.error = baseMsg + \"type \" + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n          break;\n        }\n        if (\"listener\" === type) {\n          if (showdown.helper.isUndefined(ext.listeners)) {\n            ret.valid = !1;\n            ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n            break;\n          }\n        } else {\n          if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n            ret.valid = !1;\n            ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n            break;\n          }\n        }\n        if (ext.listeners) {\n          if (\"object\" !== typeof ext.listeners) {\n            ret.valid = !1;\n            ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + \" given\";\n            break;\n          }\n          for (var ln in ext.listeners) {\n            if (ext.listeners.hasOwnProperty(ln) && \"function\" !== typeof ext.listeners[ln]) {\n              return ret.valid = !1, ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln + \" must be a function but \" + typeof ext.listeners[ln] + \" given\", ret;\n            }\n          }\n        }\n        if (ext.filter) {\n          if (\"function\" !== typeof ext.filter) {\n            ret.valid = !1;\n            ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + \" given\";\n            break;\n          }\n        } else if (ext.regex) {\n          showdown.helper.isString(ext.regex) && (ext.regex = new RegExp(ext.regex, \"g\"));\n          if (!(ext.regex instanceof RegExp)) {\n            ret.valid = !1;\n            ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + \" given\";\n            break;\n          }\n          if (showdown.helper.isUndefined(ext.replace)) {\n            ret.valid = !1;\n            ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n            break;\n          }\n        }\n      }\n      return ret;\n    }\n    function escapeCharactersCallback(wholeMatch, m1) {\n      return \"¨E\" + m1.charCodeAt(0) + \"E\";\n    }\n    var showdown = {}, parsers = {}, extensions = {}, globalOptions = getDefaultOpts(!0), setFlavor = \"vanilla\", flavor = {github:{omitExtraWLInCodeBlocks:!0, simplifiedAutoLink:!0, excludeTrailingPunctuationFromURLs:!0, literalMidWordUnderscores:!0, strikethrough:!0, tables:!0, tablesHeaderId:!0, ghCodeBlocks:!0, tasklists:!0, disableForced4SpacesIndentedSublists:!0, simpleLineBreaks:!0, requireSpaceBeforeHeadingText:!0, ghCompatibleHeaderId:!0, ghMentions:!0, backslashEscapesHTMLTags:!0, emoji:!0, \n    splitAdjacentBlockquotes:!0}, original:{noHeaderId:!0, ghCodeBlocks:!1}, ghost:{omitExtraWLInCodeBlocks:!0, parseImgDimensions:!0, simplifiedAutoLink:!0, excludeTrailingPunctuationFromURLs:!0, literalMidWordUnderscores:!0, strikethrough:!0, tables:!0, tablesHeaderId:!0, ghCodeBlocks:!0, tasklists:!0, smoothLivePreview:!0, simpleLineBreaks:!0, requireSpaceBeforeHeadingText:!0, ghMentions:!1, encodeEmails:!0}, vanilla:getDefaultOpts(!0), allOn:function() {\n      var options = getDefaultOpts(!0), ret = {}, opt;\n      for (opt in options) {\n        options.hasOwnProperty(opt) && (ret[opt] = !0);\n      }\n      return ret;\n    }()};\n    showdown.helper = {};\n    showdown.extensions = {};\n    showdown.setOption = function(key, value) {\n      globalOptions[key] = value;\n      return this;\n    };\n    showdown.getOption = function(key) {\n      return globalOptions[key];\n    };\n    showdown.getOptions = function() {\n      return globalOptions;\n    };\n    showdown.resetOptions = function() {\n      globalOptions = getDefaultOpts(!0);\n    };\n    showdown.setFlavor = function(name) {\n      if (!flavor.hasOwnProperty(name)) {\n        throw Error(name + \" flavor was not found\");\n      }\n      showdown.resetOptions();\n      var preset = flavor[name];\n      setFlavor = name;\n      for (var option in preset) {\n        preset.hasOwnProperty(option) && (globalOptions[option] = preset[option]);\n      }\n    };\n    showdown.getFlavor = function() {\n      return setFlavor;\n    };\n    showdown.getFlavorOptions = function(name) {\n      if (flavor.hasOwnProperty(name)) {\n        return flavor[name];\n      }\n    };\n    showdown.getDefaultOptions = function(simple) {\n      return getDefaultOpts(simple);\n    };\n    showdown.subParser = function(name, func) {\n      if (showdown.helper.isString(name)) {\n        if (\"undefined\" !== typeof func) {\n          parsers[name] = func;\n        } else {\n          if (parsers.hasOwnProperty(name)) {\n            return parsers[name];\n          }\n          throw Error(\"SubParser named \" + name + \" not registered!\");\n        }\n      }\n    };\n    showdown.extension = function(name, ext) {\n      if (!showdown.helper.isString(name)) {\n        throw Error(\"Extension 'name' must be a string\");\n      }\n      name = showdown.helper.stdExtName(name);\n      if (showdown.helper.isUndefined(ext)) {\n        if (!extensions.hasOwnProperty(name)) {\n          throw Error(\"Extension named \" + name + \" is not registered!\");\n        }\n        return extensions[name];\n      }\n      \"function\" === typeof ext && (ext = ext());\n      showdown.helper.isArray(ext) || (ext = [ext]);\n      var validExtension = validate(ext, name);\n      if (validExtension.valid) {\n        extensions[name] = ext;\n      } else {\n        throw Error(validExtension.error);\n      }\n    };\n    showdown.getAllExtensions = function() {\n      return extensions;\n    };\n    showdown.removeExtension = function(name) {\n      delete extensions[name];\n    };\n    showdown.resetExtensions = function() {\n      extensions = {};\n    };\n    showdown.validateExtension = function(ext) {\n      ext = validate(ext, null);\n      return ext.valid ? !0 : (console.warn(ext.error), !1);\n    };\n    showdown.hasOwnProperty(\"helper\") || (showdown.helper = {});\n    showdown.helper.isString = function(a) {\n      return \"string\" === typeof a || a instanceof String;\n    };\n    showdown.helper.isFunction = function(a) {\n      var getType = {};\n      return a && \"[object Function]\" === getType.toString.call(a);\n    };\n    showdown.helper.isArray = function(a) {\n      return Array.isArray(a);\n    };\n    showdown.helper.isUndefined = function(value) {\n      return \"undefined\" === typeof value;\n    };\n    showdown.helper.forEach = function(obj, callback) {\n      if (showdown.helper.isUndefined(obj)) {\n        throw Error(\"obj param is required\");\n      }\n      if (showdown.helper.isUndefined(callback)) {\n        throw Error(\"callback param is required\");\n      }\n      if (!showdown.helper.isFunction(callback)) {\n        throw Error(\"callback param must be a function/closure\");\n      }\n      if (\"function\" === typeof obj.forEach) {\n        obj.forEach(callback);\n      } else if (showdown.helper.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n          callback(obj[i], i, obj);\n        }\n      } else if (\"object\" === typeof obj) {\n        for (i in obj) {\n          obj.hasOwnProperty(i) && callback(obj[i], i, obj);\n        }\n      } else {\n        throw Error(\"obj does not seem to be an array or an iterable object\");\n      }\n    };\n    showdown.helper.stdExtName = function(s) {\n      return s.replace(/[_?*+\\/\\\\.^-]/g, \"\").replace(/\\s/g, \"\").toLowerCase();\n    };\n    showdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n    showdown.helper.escapeCharacters = function(text, charsToEscape, afterBackslash) {\n      charsToEscape = \"([\" + charsToEscape.replace(/([\\[\\]\\\\])/g, \"\\\\$1\") + \"])\";\n      afterBackslash && (charsToEscape = \"\\\\\\\\\" + charsToEscape);\n      return text = text.replace(new RegExp(charsToEscape, \"g\"), escapeCharactersCallback);\n    };\n    showdown.helper.unescapeHTMLEntities = function(txt) {\n      return txt.replace(/&quot;/g, '\"').replace(/&lt;/g, \"\\x3c\").replace(/&gt;/g, \"\\x3e\").replace(/&amp;/g, \"\\x26\");\n    };\n    var rgxFindMatchPos = function(str, left, right, flags) {\n      var f = flags || \"\";\n      flags = -1 < f.indexOf(\"g\");\n      right = new RegExp(left + \"|\" + right, \"g\" + f.replace(/g/g, \"\"));\n      left = new RegExp(left, f.replace(/g/g, \"\"));\n      f = [];\n      var t, m;\n      do {\n        for (t = 0; m = right.exec(str);) {\n          if (left.test(m[0])) {\n            if (!t++) {\n              var s = right.lastIndex;\n              var start = s - m[0].length;\n            }\n          } else if (t && !--t) {\n            var end = m.index + m[0].length;\n            f.push({left:{start, end:s}, match:{start:s, end:m.index}, right:{start:m.index, end}, wholeMatch:{start, end}});\n            if (!flags) {\n              return f;\n            }\n          }\n        }\n      } while (t && (right.lastIndex = s));\n      return f;\n    };\n    showdown.helper.matchRecursiveRegExp = function(str, left, right, flags) {\n      left = rgxFindMatchPos(str, left, right, flags);\n      right = [];\n      for (flags = 0; flags < left.length; ++flags) {\n        right.push([str.slice(left[flags].wholeMatch.start, left[flags].wholeMatch.end), str.slice(left[flags].match.start, left[flags].match.end), str.slice(left[flags].left.start, left[flags].left.end), str.slice(left[flags].right.start, left[flags].right.end)]);\n      }\n      return right;\n    };\n    showdown.helper.replaceRecursiveRegExp = function(str, replacement, left, right, flags) {\n      if (!showdown.helper.isFunction(replacement)) {\n        var repStr = replacement;\n        replacement = function() {\n          return repStr;\n        };\n      }\n      left = rgxFindMatchPos(str, left, right, flags);\n      flags = str;\n      right = left.length;\n      if (0 < right) {\n        flags = [];\n        0 !== left[0].wholeMatch.start && flags.push(str.slice(0, left[0].wholeMatch.start));\n        for (var i = 0; i < right; ++i) {\n          flags.push(replacement(str.slice(left[i].wholeMatch.start, left[i].wholeMatch.end), str.slice(left[i].match.start, left[i].match.end), str.slice(left[i].left.start, left[i].left.end), str.slice(left[i].right.start, left[i].right.end))), i < right - 1 && flags.push(str.slice(left[i].wholeMatch.end, left[i + 1].wholeMatch.start));\n        }\n        left[right - 1].wholeMatch.end < str.length && flags.push(str.slice(left[right - 1].wholeMatch.end));\n        flags = flags.join(\"\");\n      }\n      return flags;\n    };\n    showdown.helper.regexIndexOf = function(str, regex, fromIndex) {\n      if (!showdown.helper.isString(str)) {\n        throw \"InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string\";\n      }\n      if (!1 === regex instanceof RegExp) {\n        throw \"InvalidArgumentError: second parameter of showdown.helper.regexIndexOf function must be an instance of RegExp\";\n      }\n      str = str.substring(fromIndex || 0).search(regex);\n      return 0 <= str ? str + (fromIndex || 0) : str;\n    };\n    showdown.helper.splitAtIndex = function(str, index) {\n      if (!showdown.helper.isString(str)) {\n        throw \"InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string\";\n      }\n      return [str.substring(0, index), str.substring(index)];\n    };\n    showdown.helper.encodeEmailAddress = function(mail) {\n      var encode = [function(ch) {\n        return \"\\x26#\" + ch.charCodeAt(0) + \";\";\n      }, function(ch) {\n        return \"\\x26#x\" + ch.charCodeAt(0).toString(16) + \";\";\n      }, function(ch) {\n        return ch;\n      }];\n      return mail = mail.replace(/./g, function(ch) {\n        if (\"@\" === ch) {\n          ch = encode[Math.floor(2 * Math.random())](ch);\n        } else {\n          var r = Math.random();\n          ch = 0.9 < r ? encode[2](ch) : 0.45 < r ? encode[1](ch) : encode[0](ch);\n        }\n        return ch;\n      });\n    };\n    showdown.helper.padEnd = function(str, targetLength, padString) {\n      targetLength >>= 0;\n      padString = String(padString || \" \");\n      if (str.length > targetLength) {\n        return String(str);\n      }\n      targetLength -= str.length;\n      targetLength > padString.length && (padString += padString.repeat(targetLength / padString.length));\n      return String(str) + padString.slice(0, targetLength);\n    };\n    \"undefined\" === typeof console && (console = {warn:function(msg) {\n      alert(msg);\n    }, log:function(msg) {\n      alert(msg);\n    }, error:function(msg) {\n      throw msg;\n    }});\n    showdown.helper.regexes = {asteriskDashAndColon:/([*_:~])/g};\n    showdown.helper.emojis = {\"+1\":\"\\ud83d\\udc4d\", \"-1\":\"\\ud83d\\udc4e\", 100:\"\\ud83d\\udcaf\", 1234:\"\\ud83d\\udd22\", \"1st_place_medal\":\"\\ud83e\\udd47\", \"2nd_place_medal\":\"\\ud83e\\udd48\", \"3rd_place_medal\":\"\\ud83e\\udd49\", \"8ball\":\"\\ud83c\\udfb1\", a:\"\\ud83c\\udd70️\", ab:\"\\ud83c\\udd8e\", abc:\"\\ud83d\\udd24\", abcd:\"\\ud83d\\udd21\", accept:\"\\ud83c\\ude51\", aerial_tramway:\"\\ud83d\\udea1\", airplane:\"✈️\", alarm_clock:\"⏰\", alembic:\"⚗️\", alien:\"\\ud83d\\udc7d\", ambulance:\"\\ud83d\\ude91\", amphora:\"\\ud83c\\udffa\", anchor:\"⚓️\", \n    angel:\"\\ud83d\\udc7c\", anger:\"\\ud83d\\udca2\", angry:\"\\ud83d\\ude20\", anguished:\"\\ud83d\\ude27\", ant:\"\\ud83d\\udc1c\", apple:\"\\ud83c\\udf4e\", aquarius:\"♒️\", aries:\"♈️\", arrow_backward:\"◀️\", arrow_double_down:\"⏬\", arrow_double_up:\"⏫\", arrow_down:\"⬇️\", arrow_down_small:\"\\ud83d\\udd3d\", arrow_forward:\"▶️\", arrow_heading_down:\"⤵️\", arrow_heading_up:\"⤴️\", arrow_left:\"⬅️\", arrow_lower_left:\"↙️\", arrow_lower_right:\"↘️\", arrow_right:\"➡️\", arrow_right_hook:\"↪️\", arrow_up:\"⬆️\", arrow_up_down:\"↕️\", arrow_up_small:\"\\ud83d\\udd3c\", \n    arrow_upper_left:\"↖️\", arrow_upper_right:\"↗️\", arrows_clockwise:\"\\ud83d\\udd03\", arrows_counterclockwise:\"\\ud83d\\udd04\", art:\"\\ud83c\\udfa8\", articulated_lorry:\"\\ud83d\\ude9b\", artificial_satellite:\"\\ud83d\\udef0\", astonished:\"\\ud83d\\ude32\", athletic_shoe:\"\\ud83d\\udc5f\", atm:\"\\ud83c\\udfe7\", atom_symbol:\"⚛️\", avocado:\"\\ud83e\\udd51\", b:\"\\ud83c\\udd71️\", baby:\"\\ud83d\\udc76\", baby_bottle:\"\\ud83c\\udf7c\", baby_chick:\"\\ud83d\\udc24\", baby_symbol:\"\\ud83d\\udebc\", back:\"\\ud83d\\udd19\", bacon:\"\\ud83e\\udd53\", badminton:\"\\ud83c\\udff8\", \n    baggage_claim:\"\\ud83d\\udec4\", baguette_bread:\"\\ud83e\\udd56\", balance_scale:\"⚖️\", balloon:\"\\ud83c\\udf88\", ballot_box:\"\\ud83d\\uddf3\", ballot_box_with_check:\"☑️\", bamboo:\"\\ud83c\\udf8d\", banana:\"\\ud83c\\udf4c\", bangbang:\"‼️\", bank:\"\\ud83c\\udfe6\", bar_chart:\"\\ud83d\\udcca\", barber:\"\\ud83d\\udc88\", baseball:\"⚾️\", basketball:\"\\ud83c\\udfc0\", basketball_man:\"⛹️\", basketball_woman:\"⛹️\\x26zwj;♀️\", bat:\"\\ud83e\\udd87\", bath:\"\\ud83d\\udec0\", bathtub:\"\\ud83d\\udec1\", battery:\"\\ud83d\\udd0b\", beach_umbrella:\"\\ud83c\\udfd6\", \n    bear:\"\\ud83d\\udc3b\", bed:\"\\ud83d\\udecf\", bee:\"\\ud83d\\udc1d\", beer:\"\\ud83c\\udf7a\", beers:\"\\ud83c\\udf7b\", beetle:\"\\ud83d\\udc1e\", beginner:\"\\ud83d\\udd30\", bell:\"\\ud83d\\udd14\", bellhop_bell:\"\\ud83d\\udece\", bento:\"\\ud83c\\udf71\", biking_man:\"\\ud83d\\udeb4\", bike:\"\\ud83d\\udeb2\", biking_woman:\"\\ud83d\\udeb4\\x26zwj;♀️\", bikini:\"\\ud83d\\udc59\", biohazard:\"☣️\", bird:\"\\ud83d\\udc26\", birthday:\"\\ud83c\\udf82\", black_circle:\"⚫️\", black_flag:\"\\ud83c\\udff4\", black_heart:\"\\ud83d\\udda4\", black_joker:\"\\ud83c\\udccf\", \n    black_large_square:\"⬛️\", black_medium_small_square:\"◾️\", black_medium_square:\"◼️\", black_nib:\"✒️\", black_small_square:\"▪️\", black_square_button:\"\\ud83d\\udd32\", blonde_man:\"\\ud83d\\udc71\", blonde_woman:\"\\ud83d\\udc71\\x26zwj;♀️\", blossom:\"\\ud83c\\udf3c\", blowfish:\"\\ud83d\\udc21\", blue_book:\"\\ud83d\\udcd8\", blue_car:\"\\ud83d\\ude99\", blue_heart:\"\\ud83d\\udc99\", blush:\"\\ud83d\\ude0a\", boar:\"\\ud83d\\udc17\", boat:\"⛵️\", bomb:\"\\ud83d\\udca3\", book:\"\\ud83d\\udcd6\", bookmark:\"\\ud83d\\udd16\", bookmark_tabs:\"\\ud83d\\udcd1\", \n    books:\"\\ud83d\\udcda\", boom:\"\\ud83d\\udca5\", boot:\"\\ud83d\\udc62\", bouquet:\"\\ud83d\\udc90\", bowing_man:\"\\ud83d\\ude47\", bow_and_arrow:\"\\ud83c\\udff9\", bowing_woman:\"\\ud83d\\ude47\\x26zwj;♀️\", bowling:\"\\ud83c\\udfb3\", boxing_glove:\"\\ud83e\\udd4a\", boy:\"\\ud83d\\udc66\", bread:\"\\ud83c\\udf5e\", bride_with_veil:\"\\ud83d\\udc70\", bridge_at_night:\"\\ud83c\\udf09\", briefcase:\"\\ud83d\\udcbc\", broken_heart:\"\\ud83d\\udc94\", bug:\"\\ud83d\\udc1b\", building_construction:\"\\ud83c\\udfd7\", bulb:\"\\ud83d\\udca1\", bullettrain_front:\"\\ud83d\\ude85\", \n    bullettrain_side:\"\\ud83d\\ude84\", burrito:\"\\ud83c\\udf2f\", bus:\"\\ud83d\\ude8c\", business_suit_levitating:\"\\ud83d\\udd74\", busstop:\"\\ud83d\\ude8f\", bust_in_silhouette:\"\\ud83d\\udc64\", busts_in_silhouette:\"\\ud83d\\udc65\", butterfly:\"\\ud83e\\udd8b\", cactus:\"\\ud83c\\udf35\", cake:\"\\ud83c\\udf70\", calendar:\"\\ud83d\\udcc6\", call_me_hand:\"\\ud83e\\udd19\", calling:\"\\ud83d\\udcf2\", camel:\"\\ud83d\\udc2b\", camera:\"\\ud83d\\udcf7\", camera_flash:\"\\ud83d\\udcf8\", camping:\"\\ud83c\\udfd5\", cancer:\"♋️\", candle:\"\\ud83d\\udd6f\", candy:\"\\ud83c\\udf6c\", \n    canoe:\"\\ud83d\\udef6\", capital_abcd:\"\\ud83d\\udd20\", capricorn:\"♑️\", car:\"\\ud83d\\ude97\", card_file_box:\"\\ud83d\\uddc3\", card_index:\"\\ud83d\\udcc7\", card_index_dividers:\"\\ud83d\\uddc2\", carousel_horse:\"\\ud83c\\udfa0\", carrot:\"\\ud83e\\udd55\", cat:\"\\ud83d\\udc31\", cat2:\"\\ud83d\\udc08\", cd:\"\\ud83d\\udcbf\", chains:\"⛓\", champagne:\"\\ud83c\\udf7e\", chart:\"\\ud83d\\udcb9\", chart_with_downwards_trend:\"\\ud83d\\udcc9\", chart_with_upwards_trend:\"\\ud83d\\udcc8\", checkered_flag:\"\\ud83c\\udfc1\", cheese:\"\\ud83e\\uddc0\", cherries:\"\\ud83c\\udf52\", \n    cherry_blossom:\"\\ud83c\\udf38\", chestnut:\"\\ud83c\\udf30\", chicken:\"\\ud83d\\udc14\", children_crossing:\"\\ud83d\\udeb8\", chipmunk:\"\\ud83d\\udc3f\", chocolate_bar:\"\\ud83c\\udf6b\", christmas_tree:\"\\ud83c\\udf84\", church:\"⛪️\", cinema:\"\\ud83c\\udfa6\", circus_tent:\"\\ud83c\\udfaa\", city_sunrise:\"\\ud83c\\udf07\", city_sunset:\"\\ud83c\\udf06\", cityscape:\"\\ud83c\\udfd9\", cl:\"\\ud83c\\udd91\", clamp:\"\\ud83d\\udddc\", clap:\"\\ud83d\\udc4f\", clapper:\"\\ud83c\\udfac\", classical_building:\"\\ud83c\\udfdb\", clinking_glasses:\"\\ud83e\\udd42\", \n    clipboard:\"\\ud83d\\udccb\", clock1:\"\\ud83d\\udd50\", clock10:\"\\ud83d\\udd59\", clock1030:\"\\ud83d\\udd65\", clock11:\"\\ud83d\\udd5a\", clock1130:\"\\ud83d\\udd66\", clock12:\"\\ud83d\\udd5b\", clock1230:\"\\ud83d\\udd67\", clock130:\"\\ud83d\\udd5c\", clock2:\"\\ud83d\\udd51\", clock230:\"\\ud83d\\udd5d\", clock3:\"\\ud83d\\udd52\", clock330:\"\\ud83d\\udd5e\", clock4:\"\\ud83d\\udd53\", clock430:\"\\ud83d\\udd5f\", clock5:\"\\ud83d\\udd54\", clock530:\"\\ud83d\\udd60\", clock6:\"\\ud83d\\udd55\", clock630:\"\\ud83d\\udd61\", clock7:\"\\ud83d\\udd56\", clock730:\"\\ud83d\\udd62\", \n    clock8:\"\\ud83d\\udd57\", clock830:\"\\ud83d\\udd63\", clock9:\"\\ud83d\\udd58\", clock930:\"\\ud83d\\udd64\", closed_book:\"\\ud83d\\udcd5\", closed_lock_with_key:\"\\ud83d\\udd10\", closed_umbrella:\"\\ud83c\\udf02\", cloud:\"☁️\", cloud_with_lightning:\"\\ud83c\\udf29\", cloud_with_lightning_and_rain:\"⛈\", cloud_with_rain:\"\\ud83c\\udf27\", cloud_with_snow:\"\\ud83c\\udf28\", clown_face:\"\\ud83e\\udd21\", clubs:\"♣️\", cocktail:\"\\ud83c\\udf78\", coffee:\"☕️\", coffin:\"⚰️\", cold_sweat:\"\\ud83d\\ude30\", comet:\"☄️\", computer:\"\\ud83d\\udcbb\", computer_mouse:\"\\ud83d\\uddb1\", \n    confetti_ball:\"\\ud83c\\udf8a\", confounded:\"\\ud83d\\ude16\", confused:\"\\ud83d\\ude15\", congratulations:\"㊗️\", construction:\"\\ud83d\\udea7\", construction_worker_man:\"\\ud83d\\udc77\", construction_worker_woman:\"\\ud83d\\udc77\\x26zwj;♀️\", control_knobs:\"\\ud83c\\udf9b\", convenience_store:\"\\ud83c\\udfea\", cookie:\"\\ud83c\\udf6a\", cool:\"\\ud83c\\udd92\", policeman:\"\\ud83d\\udc6e\", copyright:\"©️\", corn:\"\\ud83c\\udf3d\", couch_and_lamp:\"\\ud83d\\udecb\", couple:\"\\ud83d\\udc6b\", couple_with_heart_woman_man:\"\\ud83d\\udc91\", couple_with_heart_man_man:\"\\ud83d\\udc68\\x26zwj;❤️\\x26zwj;\\ud83d\\udc68\", \n    couple_with_heart_woman_woman:\"\\ud83d\\udc69\\x26zwj;❤️\\x26zwj;\\ud83d\\udc69\", couplekiss_man_man:\"\\ud83d\\udc68\\x26zwj;❤️\\x26zwj;\\ud83d\\udc8b\\x26zwj;\\ud83d\\udc68\", couplekiss_man_woman:\"\\ud83d\\udc8f\", couplekiss_woman_woman:\"\\ud83d\\udc69\\x26zwj;❤️\\x26zwj;\\ud83d\\udc8b\\x26zwj;\\ud83d\\udc69\", cow:\"\\ud83d\\udc2e\", cow2:\"\\ud83d\\udc04\", cowboy_hat_face:\"\\ud83e\\udd20\", crab:\"\\ud83e\\udd80\", crayon:\"\\ud83d\\udd8d\", credit_card:\"\\ud83d\\udcb3\", crescent_moon:\"\\ud83c\\udf19\", cricket:\"\\ud83c\\udfcf\", crocodile:\"\\ud83d\\udc0a\", \n    croissant:\"\\ud83e\\udd50\", crossed_fingers:\"\\ud83e\\udd1e\", crossed_flags:\"\\ud83c\\udf8c\", crossed_swords:\"⚔️\", crown:\"\\ud83d\\udc51\", cry:\"\\ud83d\\ude22\", crying_cat_face:\"\\ud83d\\ude3f\", crystal_ball:\"\\ud83d\\udd2e\", cucumber:\"\\ud83e\\udd52\", cupid:\"\\ud83d\\udc98\", curly_loop:\"➰\", currency_exchange:\"\\ud83d\\udcb1\", curry:\"\\ud83c\\udf5b\", custard:\"\\ud83c\\udf6e\", customs:\"\\ud83d\\udec3\", cyclone:\"\\ud83c\\udf00\", dagger:\"\\ud83d\\udde1\", dancer:\"\\ud83d\\udc83\", dancing_women:\"\\ud83d\\udc6f\", dancing_men:\"\\ud83d\\udc6f\\x26zwj;♂️\", \n    dango:\"\\ud83c\\udf61\", dark_sunglasses:\"\\ud83d\\udd76\", dart:\"\\ud83c\\udfaf\", dash:\"\\ud83d\\udca8\", date:\"\\ud83d\\udcc5\", deciduous_tree:\"\\ud83c\\udf33\", deer:\"\\ud83e\\udd8c\", department_store:\"\\ud83c\\udfec\", derelict_house:\"\\ud83c\\udfda\", desert:\"\\ud83c\\udfdc\", desert_island:\"\\ud83c\\udfdd\", desktop_computer:\"\\ud83d\\udda5\", male_detective:\"\\ud83d\\udd75️\", diamond_shape_with_a_dot_inside:\"\\ud83d\\udca0\", diamonds:\"♦️\", disappointed:\"\\ud83d\\ude1e\", disappointed_relieved:\"\\ud83d\\ude25\", dizzy:\"\\ud83d\\udcab\", \n    dizzy_face:\"\\ud83d\\ude35\", do_not_litter:\"\\ud83d\\udeaf\", dog:\"\\ud83d\\udc36\", dog2:\"\\ud83d\\udc15\", dollar:\"\\ud83d\\udcb5\", dolls:\"\\ud83c\\udf8e\", dolphin:\"\\ud83d\\udc2c\", door:\"\\ud83d\\udeaa\", doughnut:\"\\ud83c\\udf69\", dove:\"\\ud83d\\udd4a\", dragon:\"\\ud83d\\udc09\", dragon_face:\"\\ud83d\\udc32\", dress:\"\\ud83d\\udc57\", dromedary_camel:\"\\ud83d\\udc2a\", drooling_face:\"\\ud83e\\udd24\", droplet:\"\\ud83d\\udca7\", drum:\"\\ud83e\\udd41\", duck:\"\\ud83e\\udd86\", dvd:\"\\ud83d\\udcc0\", \"e-mail\":\"\\ud83d\\udce7\", eagle:\"\\ud83e\\udd85\", \n    ear:\"\\ud83d\\udc42\", ear_of_rice:\"\\ud83c\\udf3e\", earth_africa:\"\\ud83c\\udf0d\", earth_americas:\"\\ud83c\\udf0e\", earth_asia:\"\\ud83c\\udf0f\", egg:\"\\ud83e\\udd5a\", eggplant:\"\\ud83c\\udf46\", eight_pointed_black_star:\"✴️\", eight_spoked_asterisk:\"✳️\", electric_plug:\"\\ud83d\\udd0c\", elephant:\"\\ud83d\\udc18\", email:\"✉️\", end:\"\\ud83d\\udd1a\", envelope_with_arrow:\"\\ud83d\\udce9\", euro:\"\\ud83d\\udcb6\", european_castle:\"\\ud83c\\udff0\", european_post_office:\"\\ud83c\\udfe4\", evergreen_tree:\"\\ud83c\\udf32\", exclamation:\"❗️\", \n    expressionless:\"\\ud83d\\ude11\", eye:\"\\ud83d\\udc41\", eye_speech_bubble:\"\\ud83d\\udc41\\x26zwj;\\ud83d\\udde8\", eyeglasses:\"\\ud83d\\udc53\", eyes:\"\\ud83d\\udc40\", face_with_head_bandage:\"\\ud83e\\udd15\", face_with_thermometer:\"\\ud83e\\udd12\", fist_oncoming:\"\\ud83d\\udc4a\", factory:\"\\ud83c\\udfed\", fallen_leaf:\"\\ud83c\\udf42\", family_man_woman_boy:\"\\ud83d\\udc6a\", family_man_boy:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc66\", family_man_boy_boy:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc66\\x26zwj;\\ud83d\\udc66\", family_man_girl:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc67\", \n    family_man_girl_boy:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc67\\x26zwj;\\ud83d\\udc66\", family_man_girl_girl:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc67\\x26zwj;\\ud83d\\udc67\", family_man_man_boy:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc68\\x26zwj;\\ud83d\\udc66\", family_man_man_boy_boy:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc68\\x26zwj;\\ud83d\\udc66\\x26zwj;\\ud83d\\udc66\", family_man_man_girl:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc68\\x26zwj;\\ud83d\\udc67\", family_man_man_girl_boy:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc68\\x26zwj;\\ud83d\\udc67\\x26zwj;\\ud83d\\udc66\", \n    family_man_man_girl_girl:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc68\\x26zwj;\\ud83d\\udc67\\x26zwj;\\ud83d\\udc67\", family_man_woman_boy_boy:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc69\\x26zwj;\\ud83d\\udc66\\x26zwj;\\ud83d\\udc66\", family_man_woman_girl:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc69\\x26zwj;\\ud83d\\udc67\", family_man_woman_girl_boy:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc69\\x26zwj;\\ud83d\\udc67\\x26zwj;\\ud83d\\udc66\", family_man_woman_girl_girl:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udc69\\x26zwj;\\ud83d\\udc67\\x26zwj;\\ud83d\\udc67\", family_woman_boy:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udc66\", \n    family_woman_boy_boy:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udc66\\x26zwj;\\ud83d\\udc66\", family_woman_girl:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udc67\", family_woman_girl_boy:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udc67\\x26zwj;\\ud83d\\udc66\", family_woman_girl_girl:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udc67\\x26zwj;\\ud83d\\udc67\", family_woman_woman_boy:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udc69\\x26zwj;\\ud83d\\udc66\", family_woman_woman_boy_boy:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udc69\\x26zwj;\\ud83d\\udc66\\x26zwj;\\ud83d\\udc66\", family_woman_woman_girl:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udc69\\x26zwj;\\ud83d\\udc67\", \n    family_woman_woman_girl_boy:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udc69\\x26zwj;\\ud83d\\udc67\\x26zwj;\\ud83d\\udc66\", family_woman_woman_girl_girl:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udc69\\x26zwj;\\ud83d\\udc67\\x26zwj;\\ud83d\\udc67\", fast_forward:\"⏩\", fax:\"\\ud83d\\udce0\", fearful:\"\\ud83d\\ude28\", feet:\"\\ud83d\\udc3e\", female_detective:\"\\ud83d\\udd75️\\x26zwj;♀️\", ferris_wheel:\"\\ud83c\\udfa1\", ferry:\"⛴\", field_hockey:\"\\ud83c\\udfd1\", file_cabinet:\"\\ud83d\\uddc4\", file_folder:\"\\ud83d\\udcc1\", film_projector:\"\\ud83d\\udcfd\", film_strip:\"\\ud83c\\udf9e\", \n    fire:\"\\ud83d\\udd25\", fire_engine:\"\\ud83d\\ude92\", fireworks:\"\\ud83c\\udf86\", first_quarter_moon:\"\\ud83c\\udf13\", first_quarter_moon_with_face:\"\\ud83c\\udf1b\", fish:\"\\ud83d\\udc1f\", fish_cake:\"\\ud83c\\udf65\", fishing_pole_and_fish:\"\\ud83c\\udfa3\", fist_raised:\"✊\", fist_left:\"\\ud83e\\udd1b\", fist_right:\"\\ud83e\\udd1c\", flags:\"\\ud83c\\udf8f\", flashlight:\"\\ud83d\\udd26\", fleur_de_lis:\"⚜️\", flight_arrival:\"\\ud83d\\udeec\", flight_departure:\"\\ud83d\\udeeb\", floppy_disk:\"\\ud83d\\udcbe\", flower_playing_cards:\"\\ud83c\\udfb4\", \n    flushed:\"\\ud83d\\ude33\", fog:\"\\ud83c\\udf2b\", foggy:\"\\ud83c\\udf01\", football:\"\\ud83c\\udfc8\", footprints:\"\\ud83d\\udc63\", fork_and_knife:\"\\ud83c\\udf74\", fountain:\"⛲️\", fountain_pen:\"\\ud83d\\udd8b\", four_leaf_clover:\"\\ud83c\\udf40\", fox_face:\"\\ud83e\\udd8a\", framed_picture:\"\\ud83d\\uddbc\", free:\"\\ud83c\\udd93\", fried_egg:\"\\ud83c\\udf73\", fried_shrimp:\"\\ud83c\\udf64\", fries:\"\\ud83c\\udf5f\", frog:\"\\ud83d\\udc38\", frowning:\"\\ud83d\\ude26\", frowning_face:\"☹️\", frowning_man:\"\\ud83d\\ude4d\\x26zwj;♂️\", frowning_woman:\"\\ud83d\\ude4d\", \n    middle_finger:\"\\ud83d\\udd95\", fuelpump:\"⛽️\", full_moon:\"\\ud83c\\udf15\", full_moon_with_face:\"\\ud83c\\udf1d\", funeral_urn:\"⚱️\", game_die:\"\\ud83c\\udfb2\", gear:\"⚙️\", gem:\"\\ud83d\\udc8e\", gemini:\"♊️\", ghost:\"\\ud83d\\udc7b\", gift:\"\\ud83c\\udf81\", gift_heart:\"\\ud83d\\udc9d\", girl:\"\\ud83d\\udc67\", globe_with_meridians:\"\\ud83c\\udf10\", goal_net:\"\\ud83e\\udd45\", goat:\"\\ud83d\\udc10\", golf:\"⛳️\", golfing_man:\"\\ud83c\\udfcc️\", golfing_woman:\"\\ud83c\\udfcc️\\x26zwj;♀️\", gorilla:\"\\ud83e\\udd8d\", grapes:\"\\ud83c\\udf47\", green_apple:\"\\ud83c\\udf4f\", \n    green_book:\"\\ud83d\\udcd7\", green_heart:\"\\ud83d\\udc9a\", green_salad:\"\\ud83e\\udd57\", grey_exclamation:\"❕\", grey_question:\"❔\", grimacing:\"\\ud83d\\ude2c\", grin:\"\\ud83d\\ude01\", grinning:\"\\ud83d\\ude00\", guardsman:\"\\ud83d\\udc82\", guardswoman:\"\\ud83d\\udc82\\x26zwj;♀️\", guitar:\"\\ud83c\\udfb8\", gun:\"\\ud83d\\udd2b\", haircut_woman:\"\\ud83d\\udc87\", haircut_man:\"\\ud83d\\udc87\\x26zwj;♂️\", hamburger:\"\\ud83c\\udf54\", hammer:\"\\ud83d\\udd28\", hammer_and_pick:\"⚒\", hammer_and_wrench:\"\\ud83d\\udee0\", hamster:\"\\ud83d\\udc39\", \n    hand:\"✋\", handbag:\"\\ud83d\\udc5c\", handshake:\"\\ud83e\\udd1d\", hankey:\"\\ud83d\\udca9\", hatched_chick:\"\\ud83d\\udc25\", hatching_chick:\"\\ud83d\\udc23\", headphones:\"\\ud83c\\udfa7\", hear_no_evil:\"\\ud83d\\ude49\", heart:\"❤️\", heart_decoration:\"\\ud83d\\udc9f\", heart_eyes:\"\\ud83d\\ude0d\", heart_eyes_cat:\"\\ud83d\\ude3b\", heartbeat:\"\\ud83d\\udc93\", heartpulse:\"\\ud83d\\udc97\", hearts:\"♥️\", heavy_check_mark:\"✔️\", heavy_division_sign:\"➗\", heavy_dollar_sign:\"\\ud83d\\udcb2\", heavy_heart_exclamation:\"❣️\", heavy_minus_sign:\"➖\", \n    heavy_multiplication_x:\"✖️\", heavy_plus_sign:\"➕\", helicopter:\"\\ud83d\\ude81\", herb:\"\\ud83c\\udf3f\", hibiscus:\"\\ud83c\\udf3a\", high_brightness:\"\\ud83d\\udd06\", high_heel:\"\\ud83d\\udc60\", hocho:\"\\ud83d\\udd2a\", hole:\"\\ud83d\\udd73\", honey_pot:\"\\ud83c\\udf6f\", horse:\"\\ud83d\\udc34\", horse_racing:\"\\ud83c\\udfc7\", hospital:\"\\ud83c\\udfe5\", hot_pepper:\"\\ud83c\\udf36\", hotdog:\"\\ud83c\\udf2d\", hotel:\"\\ud83c\\udfe8\", hotsprings:\"♨️\", hourglass:\"⌛️\", hourglass_flowing_sand:\"⏳\", house:\"\\ud83c\\udfe0\", house_with_garden:\"\\ud83c\\udfe1\", \n    houses:\"\\ud83c\\udfd8\", hugs:\"\\ud83e\\udd17\", hushed:\"\\ud83d\\ude2f\", ice_cream:\"\\ud83c\\udf68\", ice_hockey:\"\\ud83c\\udfd2\", ice_skate:\"⛸\", icecream:\"\\ud83c\\udf66\", id:\"\\ud83c\\udd94\", ideograph_advantage:\"\\ud83c\\ude50\", imp:\"\\ud83d\\udc7f\", inbox_tray:\"\\ud83d\\udce5\", incoming_envelope:\"\\ud83d\\udce8\", tipping_hand_woman:\"\\ud83d\\udc81\", information_source:\"ℹ️\", innocent:\"\\ud83d\\ude07\", interrobang:\"⁉️\", iphone:\"\\ud83d\\udcf1\", izakaya_lantern:\"\\ud83c\\udfee\", jack_o_lantern:\"\\ud83c\\udf83\", japan:\"\\ud83d\\uddfe\", \n    japanese_castle:\"\\ud83c\\udfef\", japanese_goblin:\"\\ud83d\\udc7a\", japanese_ogre:\"\\ud83d\\udc79\", jeans:\"\\ud83d\\udc56\", joy:\"\\ud83d\\ude02\", joy_cat:\"\\ud83d\\ude39\", joystick:\"\\ud83d\\udd79\", kaaba:\"\\ud83d\\udd4b\", key:\"\\ud83d\\udd11\", keyboard:\"⌨️\", keycap_ten:\"\\ud83d\\udd1f\", kick_scooter:\"\\ud83d\\udef4\", kimono:\"\\ud83d\\udc58\", kiss:\"\\ud83d\\udc8b\", kissing:\"\\ud83d\\ude17\", kissing_cat:\"\\ud83d\\ude3d\", kissing_closed_eyes:\"\\ud83d\\ude1a\", kissing_heart:\"\\ud83d\\ude18\", kissing_smiling_eyes:\"\\ud83d\\ude19\", \n    kiwi_fruit:\"\\ud83e\\udd5d\", koala:\"\\ud83d\\udc28\", koko:\"\\ud83c\\ude01\", label:\"\\ud83c\\udff7\", large_blue_circle:\"\\ud83d\\udd35\", large_blue_diamond:\"\\ud83d\\udd37\", large_orange_diamond:\"\\ud83d\\udd36\", last_quarter_moon:\"\\ud83c\\udf17\", last_quarter_moon_with_face:\"\\ud83c\\udf1c\", latin_cross:\"✝️\", laughing:\"\\ud83d\\ude06\", leaves:\"\\ud83c\\udf43\", ledger:\"\\ud83d\\udcd2\", left_luggage:\"\\ud83d\\udec5\", left_right_arrow:\"↔️\", leftwards_arrow_with_hook:\"↩️\", lemon:\"\\ud83c\\udf4b\", leo:\"♌️\", leopard:\"\\ud83d\\udc06\", \n    level_slider:\"\\ud83c\\udf9a\", libra:\"♎️\", light_rail:\"\\ud83d\\ude88\", link:\"\\ud83d\\udd17\", lion:\"\\ud83e\\udd81\", lips:\"\\ud83d\\udc44\", lipstick:\"\\ud83d\\udc84\", lizard:\"\\ud83e\\udd8e\", lock:\"\\ud83d\\udd12\", lock_with_ink_pen:\"\\ud83d\\udd0f\", lollipop:\"\\ud83c\\udf6d\", loop:\"➿\", loud_sound:\"\\ud83d\\udd0a\", loudspeaker:\"\\ud83d\\udce2\", love_hotel:\"\\ud83c\\udfe9\", love_letter:\"\\ud83d\\udc8c\", low_brightness:\"\\ud83d\\udd05\", lying_face:\"\\ud83e\\udd25\", m:\"Ⓜ️\", mag:\"\\ud83d\\udd0d\", mag_right:\"\\ud83d\\udd0e\", mahjong:\"\\ud83c\\udc04️\", \n    mailbox:\"\\ud83d\\udceb\", mailbox_closed:\"\\ud83d\\udcea\", mailbox_with_mail:\"\\ud83d\\udcec\", mailbox_with_no_mail:\"\\ud83d\\udced\", man:\"\\ud83d\\udc68\", man_artist:\"\\ud83d\\udc68\\x26zwj;\\ud83c\\udfa8\", man_astronaut:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\ude80\", man_cartwheeling:\"\\ud83e\\udd38\\x26zwj;♂️\", man_cook:\"\\ud83d\\udc68\\x26zwj;\\ud83c\\udf73\", man_dancing:\"\\ud83d\\udd7a\", man_facepalming:\"\\ud83e\\udd26\\x26zwj;♂️\", man_factory_worker:\"\\ud83d\\udc68\\x26zwj;\\ud83c\\udfed\", man_farmer:\"\\ud83d\\udc68\\x26zwj;\\ud83c\\udf3e\", \n    man_firefighter:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\ude92\", man_health_worker:\"\\ud83d\\udc68\\x26zwj;⚕️\", man_in_tuxedo:\"\\ud83e\\udd35\", man_judge:\"\\ud83d\\udc68\\x26zwj;⚖️\", man_juggling:\"\\ud83e\\udd39\\x26zwj;♂️\", man_mechanic:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udd27\", man_office_worker:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udcbc\", man_pilot:\"\\ud83d\\udc68\\x26zwj;✈️\", man_playing_handball:\"\\ud83e\\udd3e\\x26zwj;♂️\", man_playing_water_polo:\"\\ud83e\\udd3d\\x26zwj;♂️\", man_scientist:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udd2c\", man_shrugging:\"\\ud83e\\udd37\\x26zwj;♂️\", \n    man_singer:\"\\ud83d\\udc68\\x26zwj;\\ud83c\\udfa4\", man_student:\"\\ud83d\\udc68\\x26zwj;\\ud83c\\udf93\", man_teacher:\"\\ud83d\\udc68\\x26zwj;\\ud83c\\udfeb\", man_technologist:\"\\ud83d\\udc68\\x26zwj;\\ud83d\\udcbb\", man_with_gua_pi_mao:\"\\ud83d\\udc72\", man_with_turban:\"\\ud83d\\udc73\", tangerine:\"\\ud83c\\udf4a\", mans_shoe:\"\\ud83d\\udc5e\", mantelpiece_clock:\"\\ud83d\\udd70\", maple_leaf:\"\\ud83c\\udf41\", martial_arts_uniform:\"\\ud83e\\udd4b\", mask:\"\\ud83d\\ude37\", massage_woman:\"\\ud83d\\udc86\", massage_man:\"\\ud83d\\udc86\\x26zwj;♂️\", \n    meat_on_bone:\"\\ud83c\\udf56\", medal_military:\"\\ud83c\\udf96\", medal_sports:\"\\ud83c\\udfc5\", mega:\"\\ud83d\\udce3\", melon:\"\\ud83c\\udf48\", memo:\"\\ud83d\\udcdd\", men_wrestling:\"\\ud83e\\udd3c\\x26zwj;♂️\", menorah:\"\\ud83d\\udd4e\", mens:\"\\ud83d\\udeb9\", metal:\"\\ud83e\\udd18\", metro:\"\\ud83d\\ude87\", microphone:\"\\ud83c\\udfa4\", microscope:\"\\ud83d\\udd2c\", milk_glass:\"\\ud83e\\udd5b\", milky_way:\"\\ud83c\\udf0c\", minibus:\"\\ud83d\\ude90\", minidisc:\"\\ud83d\\udcbd\", mobile_phone_off:\"\\ud83d\\udcf4\", money_mouth_face:\"\\ud83e\\udd11\", \n    money_with_wings:\"\\ud83d\\udcb8\", moneybag:\"\\ud83d\\udcb0\", monkey:\"\\ud83d\\udc12\", monkey_face:\"\\ud83d\\udc35\", monorail:\"\\ud83d\\ude9d\", moon:\"\\ud83c\\udf14\", mortar_board:\"\\ud83c\\udf93\", mosque:\"\\ud83d\\udd4c\", motor_boat:\"\\ud83d\\udee5\", motor_scooter:\"\\ud83d\\udef5\", motorcycle:\"\\ud83c\\udfcd\", motorway:\"\\ud83d\\udee3\", mount_fuji:\"\\ud83d\\uddfb\", mountain:\"⛰\", mountain_biking_man:\"\\ud83d\\udeb5\", mountain_biking_woman:\"\\ud83d\\udeb5\\x26zwj;♀️\", mountain_cableway:\"\\ud83d\\udea0\", mountain_railway:\"\\ud83d\\ude9e\", \n    mountain_snow:\"\\ud83c\\udfd4\", mouse:\"\\ud83d\\udc2d\", mouse2:\"\\ud83d\\udc01\", movie_camera:\"\\ud83c\\udfa5\", moyai:\"\\ud83d\\uddff\", mrs_claus:\"\\ud83e\\udd36\", muscle:\"\\ud83d\\udcaa\", mushroom:\"\\ud83c\\udf44\", musical_keyboard:\"\\ud83c\\udfb9\", musical_note:\"\\ud83c\\udfb5\", musical_score:\"\\ud83c\\udfbc\", mute:\"\\ud83d\\udd07\", nail_care:\"\\ud83d\\udc85\", name_badge:\"\\ud83d\\udcdb\", national_park:\"\\ud83c\\udfde\", nauseated_face:\"\\ud83e\\udd22\", necktie:\"\\ud83d\\udc54\", negative_squared_cross_mark:\"❎\", nerd_face:\"\\ud83e\\udd13\", \n    neutral_face:\"\\ud83d\\ude10\", \"new\":\"\\ud83c\\udd95\", new_moon:\"\\ud83c\\udf11\", new_moon_with_face:\"\\ud83c\\udf1a\", newspaper:\"\\ud83d\\udcf0\", newspaper_roll:\"\\ud83d\\uddde\", next_track_button:\"⏭\", ng:\"\\ud83c\\udd96\", no_good_man:\"\\ud83d\\ude45\\x26zwj;♂️\", no_good_woman:\"\\ud83d\\ude45\", night_with_stars:\"\\ud83c\\udf03\", no_bell:\"\\ud83d\\udd15\", no_bicycles:\"\\ud83d\\udeb3\", no_entry:\"⛔️\", no_entry_sign:\"\\ud83d\\udeab\", no_mobile_phones:\"\\ud83d\\udcf5\", no_mouth:\"\\ud83d\\ude36\", no_pedestrians:\"\\ud83d\\udeb7\", \n    no_smoking:\"\\ud83d\\udead\", \"non-potable_water\":\"\\ud83d\\udeb1\", nose:\"\\ud83d\\udc43\", notebook:\"\\ud83d\\udcd3\", notebook_with_decorative_cover:\"\\ud83d\\udcd4\", notes:\"\\ud83c\\udfb6\", nut_and_bolt:\"\\ud83d\\udd29\", o:\"⭕️\", o2:\"\\ud83c\\udd7e️\", ocean:\"\\ud83c\\udf0a\", octopus:\"\\ud83d\\udc19\", oden:\"\\ud83c\\udf62\", office:\"\\ud83c\\udfe2\", oil_drum:\"\\ud83d\\udee2\", ok:\"\\ud83c\\udd97\", ok_hand:\"\\ud83d\\udc4c\", ok_man:\"\\ud83d\\ude46\\x26zwj;♂️\", ok_woman:\"\\ud83d\\ude46\", old_key:\"\\ud83d\\udddd\", older_man:\"\\ud83d\\udc74\", \n    older_woman:\"\\ud83d\\udc75\", om:\"\\ud83d\\udd49\", on:\"\\ud83d\\udd1b\", oncoming_automobile:\"\\ud83d\\ude98\", oncoming_bus:\"\\ud83d\\ude8d\", oncoming_police_car:\"\\ud83d\\ude94\", oncoming_taxi:\"\\ud83d\\ude96\", open_file_folder:\"\\ud83d\\udcc2\", open_hands:\"\\ud83d\\udc50\", open_mouth:\"\\ud83d\\ude2e\", open_umbrella:\"☂️\", ophiuchus:\"⛎\", orange_book:\"\\ud83d\\udcd9\", orthodox_cross:\"☦️\", outbox_tray:\"\\ud83d\\udce4\", owl:\"\\ud83e\\udd89\", ox:\"\\ud83d\\udc02\", \"package\":\"\\ud83d\\udce6\", page_facing_up:\"\\ud83d\\udcc4\", page_with_curl:\"\\ud83d\\udcc3\", \n    pager:\"\\ud83d\\udcdf\", paintbrush:\"\\ud83d\\udd8c\", palm_tree:\"\\ud83c\\udf34\", pancakes:\"\\ud83e\\udd5e\", panda_face:\"\\ud83d\\udc3c\", paperclip:\"\\ud83d\\udcce\", paperclips:\"\\ud83d\\udd87\", parasol_on_ground:\"⛱\", parking:\"\\ud83c\\udd7f️\", part_alternation_mark:\"〽️\", partly_sunny:\"⛅️\", passenger_ship:\"\\ud83d\\udef3\", passport_control:\"\\ud83d\\udec2\", pause_button:\"⏸\", peace_symbol:\"☮️\", peach:\"\\ud83c\\udf51\", peanuts:\"\\ud83e\\udd5c\", pear:\"\\ud83c\\udf50\", pen:\"\\ud83d\\udd8a\", pencil2:\"✏️\", penguin:\"\\ud83d\\udc27\", \n    pensive:\"\\ud83d\\ude14\", performing_arts:\"\\ud83c\\udfad\", persevere:\"\\ud83d\\ude23\", person_fencing:\"\\ud83e\\udd3a\", pouting_woman:\"\\ud83d\\ude4e\", phone:\"☎️\", pick:\"⛏\", pig:\"\\ud83d\\udc37\", pig2:\"\\ud83d\\udc16\", pig_nose:\"\\ud83d\\udc3d\", pill:\"\\ud83d\\udc8a\", pineapple:\"\\ud83c\\udf4d\", ping_pong:\"\\ud83c\\udfd3\", pisces:\"♓️\", pizza:\"\\ud83c\\udf55\", place_of_worship:\"\\ud83d\\uded0\", plate_with_cutlery:\"\\ud83c\\udf7d\", play_or_pause_button:\"⏯\", point_down:\"\\ud83d\\udc47\", point_left:\"\\ud83d\\udc48\", point_right:\"\\ud83d\\udc49\", \n    point_up:\"☝️\", point_up_2:\"\\ud83d\\udc46\", police_car:\"\\ud83d\\ude93\", policewoman:\"\\ud83d\\udc6e\\x26zwj;♀️\", poodle:\"\\ud83d\\udc29\", popcorn:\"\\ud83c\\udf7f\", post_office:\"\\ud83c\\udfe3\", postal_horn:\"\\ud83d\\udcef\", postbox:\"\\ud83d\\udcee\", potable_water:\"\\ud83d\\udeb0\", potato:\"\\ud83e\\udd54\", pouch:\"\\ud83d\\udc5d\", poultry_leg:\"\\ud83c\\udf57\", pound:\"\\ud83d\\udcb7\", rage:\"\\ud83d\\ude21\", pouting_cat:\"\\ud83d\\ude3e\", pouting_man:\"\\ud83d\\ude4e\\x26zwj;♂️\", pray:\"\\ud83d\\ude4f\", prayer_beads:\"\\ud83d\\udcff\", pregnant_woman:\"\\ud83e\\udd30\", \n    previous_track_button:\"⏮\", prince:\"\\ud83e\\udd34\", princess:\"\\ud83d\\udc78\", printer:\"\\ud83d\\udda8\", purple_heart:\"\\ud83d\\udc9c\", purse:\"\\ud83d\\udc5b\", pushpin:\"\\ud83d\\udccc\", put_litter_in_its_place:\"\\ud83d\\udeae\", question:\"❓\", rabbit:\"\\ud83d\\udc30\", rabbit2:\"\\ud83d\\udc07\", racehorse:\"\\ud83d\\udc0e\", racing_car:\"\\ud83c\\udfce\", radio:\"\\ud83d\\udcfb\", radio_button:\"\\ud83d\\udd18\", radioactive:\"☢️\", railway_car:\"\\ud83d\\ude83\", railway_track:\"\\ud83d\\udee4\", rainbow:\"\\ud83c\\udf08\", rainbow_flag:\"\\ud83c\\udff3️\\x26zwj;\\ud83c\\udf08\", \n    raised_back_of_hand:\"\\ud83e\\udd1a\", raised_hand_with_fingers_splayed:\"\\ud83d\\udd90\", raised_hands:\"\\ud83d\\ude4c\", raising_hand_woman:\"\\ud83d\\ude4b\", raising_hand_man:\"\\ud83d\\ude4b\\x26zwj;♂️\", ram:\"\\ud83d\\udc0f\", ramen:\"\\ud83c\\udf5c\", rat:\"\\ud83d\\udc00\", record_button:\"⏺\", recycle:\"♻️\", red_circle:\"\\ud83d\\udd34\", registered:\"®️\", relaxed:\"☺️\", relieved:\"\\ud83d\\ude0c\", reminder_ribbon:\"\\ud83c\\udf97\", repeat:\"\\ud83d\\udd01\", repeat_one:\"\\ud83d\\udd02\", rescue_worker_helmet:\"⛑\", restroom:\"\\ud83d\\udebb\", \n    revolving_hearts:\"\\ud83d\\udc9e\", rewind:\"⏪\", rhinoceros:\"\\ud83e\\udd8f\", ribbon:\"\\ud83c\\udf80\", rice:\"\\ud83c\\udf5a\", rice_ball:\"\\ud83c\\udf59\", rice_cracker:\"\\ud83c\\udf58\", rice_scene:\"\\ud83c\\udf91\", right_anger_bubble:\"\\ud83d\\uddef\", ring:\"\\ud83d\\udc8d\", robot:\"\\ud83e\\udd16\", rocket:\"\\ud83d\\ude80\", rofl:\"\\ud83e\\udd23\", roll_eyes:\"\\ud83d\\ude44\", roller_coaster:\"\\ud83c\\udfa2\", rooster:\"\\ud83d\\udc13\", rose:\"\\ud83c\\udf39\", rosette:\"\\ud83c\\udff5\", rotating_light:\"\\ud83d\\udea8\", round_pushpin:\"\\ud83d\\udccd\", \n    rowing_man:\"\\ud83d\\udea3\", rowing_woman:\"\\ud83d\\udea3\\x26zwj;♀️\", rugby_football:\"\\ud83c\\udfc9\", running_man:\"\\ud83c\\udfc3\", running_shirt_with_sash:\"\\ud83c\\udfbd\", running_woman:\"\\ud83c\\udfc3\\x26zwj;♀️\", sa:\"\\ud83c\\ude02️\", sagittarius:\"♐️\", sake:\"\\ud83c\\udf76\", sandal:\"\\ud83d\\udc61\", santa:\"\\ud83c\\udf85\", satellite:\"\\ud83d\\udce1\", saxophone:\"\\ud83c\\udfb7\", school:\"\\ud83c\\udfeb\", school_satchel:\"\\ud83c\\udf92\", scissors:\"✂️\", scorpion:\"\\ud83e\\udd82\", scorpius:\"♏️\", scream:\"\\ud83d\\ude31\", scream_cat:\"\\ud83d\\ude40\", \n    scroll:\"\\ud83d\\udcdc\", seat:\"\\ud83d\\udcba\", secret:\"㊙️\", see_no_evil:\"\\ud83d\\ude48\", seedling:\"\\ud83c\\udf31\", selfie:\"\\ud83e\\udd33\", shallow_pan_of_food:\"\\ud83e\\udd58\", shamrock:\"☘️\", shark:\"\\ud83e\\udd88\", shaved_ice:\"\\ud83c\\udf67\", sheep:\"\\ud83d\\udc11\", shell:\"\\ud83d\\udc1a\", shield:\"\\ud83d\\udee1\", shinto_shrine:\"⛩\", ship:\"\\ud83d\\udea2\", shirt:\"\\ud83d\\udc55\", shopping:\"\\ud83d\\udecd\", shopping_cart:\"\\ud83d\\uded2\", shower:\"\\ud83d\\udebf\", shrimp:\"\\ud83e\\udd90\", signal_strength:\"\\ud83d\\udcf6\", six_pointed_star:\"\\ud83d\\udd2f\", \n    ski:\"\\ud83c\\udfbf\", skier:\"⛷\", skull:\"\\ud83d\\udc80\", skull_and_crossbones:\"☠️\", sleeping:\"\\ud83d\\ude34\", sleeping_bed:\"\\ud83d\\udecc\", sleepy:\"\\ud83d\\ude2a\", slightly_frowning_face:\"\\ud83d\\ude41\", slightly_smiling_face:\"\\ud83d\\ude42\", slot_machine:\"\\ud83c\\udfb0\", small_airplane:\"\\ud83d\\udee9\", small_blue_diamond:\"\\ud83d\\udd39\", small_orange_diamond:\"\\ud83d\\udd38\", small_red_triangle:\"\\ud83d\\udd3a\", small_red_triangle_down:\"\\ud83d\\udd3b\", smile:\"\\ud83d\\ude04\", smile_cat:\"\\ud83d\\ude38\", smiley:\"\\ud83d\\ude03\", \n    smiley_cat:\"\\ud83d\\ude3a\", smiling_imp:\"\\ud83d\\ude08\", smirk:\"\\ud83d\\ude0f\", smirk_cat:\"\\ud83d\\ude3c\", smoking:\"\\ud83d\\udeac\", snail:\"\\ud83d\\udc0c\", snake:\"\\ud83d\\udc0d\", sneezing_face:\"\\ud83e\\udd27\", snowboarder:\"\\ud83c\\udfc2\", snowflake:\"❄️\", snowman:\"⛄️\", snowman_with_snow:\"☃️\", sob:\"\\ud83d\\ude2d\", soccer:\"⚽️\", soon:\"\\ud83d\\udd1c\", sos:\"\\ud83c\\udd98\", sound:\"\\ud83d\\udd09\", space_invader:\"\\ud83d\\udc7e\", spades:\"♠️\", spaghetti:\"\\ud83c\\udf5d\", sparkle:\"❇️\", sparkler:\"\\ud83c\\udf87\", sparkles:\"✨\", \n    sparkling_heart:\"\\ud83d\\udc96\", speak_no_evil:\"\\ud83d\\ude4a\", speaker:\"\\ud83d\\udd08\", speaking_head:\"\\ud83d\\udde3\", speech_balloon:\"\\ud83d\\udcac\", speedboat:\"\\ud83d\\udea4\", spider:\"\\ud83d\\udd77\", spider_web:\"\\ud83d\\udd78\", spiral_calendar:\"\\ud83d\\uddd3\", spiral_notepad:\"\\ud83d\\uddd2\", spoon:\"\\ud83e\\udd44\", squid:\"\\ud83e\\udd91\", stadium:\"\\ud83c\\udfdf\", star:\"⭐️\", star2:\"\\ud83c\\udf1f\", star_and_crescent:\"☪️\", star_of_david:\"✡️\", stars:\"\\ud83c\\udf20\", station:\"\\ud83d\\ude89\", statue_of_liberty:\"\\ud83d\\uddfd\", \n    steam_locomotive:\"\\ud83d\\ude82\", stew:\"\\ud83c\\udf72\", stop_button:\"⏹\", stop_sign:\"\\ud83d\\uded1\", stopwatch:\"⏱\", straight_ruler:\"\\ud83d\\udccf\", strawberry:\"\\ud83c\\udf53\", stuck_out_tongue:\"\\ud83d\\ude1b\", stuck_out_tongue_closed_eyes:\"\\ud83d\\ude1d\", stuck_out_tongue_winking_eye:\"\\ud83d\\ude1c\", studio_microphone:\"\\ud83c\\udf99\", stuffed_flatbread:\"\\ud83e\\udd59\", sun_behind_large_cloud:\"\\ud83c\\udf25\", sun_behind_rain_cloud:\"\\ud83c\\udf26\", sun_behind_small_cloud:\"\\ud83c\\udf24\", sun_with_face:\"\\ud83c\\udf1e\", \n    sunflower:\"\\ud83c\\udf3b\", sunglasses:\"\\ud83d\\ude0e\", sunny:\"☀️\", sunrise:\"\\ud83c\\udf05\", sunrise_over_mountains:\"\\ud83c\\udf04\", surfing_man:\"\\ud83c\\udfc4\", surfing_woman:\"\\ud83c\\udfc4\\x26zwj;♀️\", sushi:\"\\ud83c\\udf63\", suspension_railway:\"\\ud83d\\ude9f\", sweat:\"\\ud83d\\ude13\", sweat_drops:\"\\ud83d\\udca6\", sweat_smile:\"\\ud83d\\ude05\", sweet_potato:\"\\ud83c\\udf60\", swimming_man:\"\\ud83c\\udfca\", swimming_woman:\"\\ud83c\\udfca\\x26zwj;♀️\", symbols:\"\\ud83d\\udd23\", synagogue:\"\\ud83d\\udd4d\", syringe:\"\\ud83d\\udc89\", \n    taco:\"\\ud83c\\udf2e\", tada:\"\\ud83c\\udf89\", tanabata_tree:\"\\ud83c\\udf8b\", taurus:\"♉️\", taxi:\"\\ud83d\\ude95\", tea:\"\\ud83c\\udf75\", telephone_receiver:\"\\ud83d\\udcde\", telescope:\"\\ud83d\\udd2d\", tennis:\"\\ud83c\\udfbe\", tent:\"⛺️\", thermometer:\"\\ud83c\\udf21\", thinking:\"\\ud83e\\udd14\", thought_balloon:\"\\ud83d\\udcad\", ticket:\"\\ud83c\\udfab\", tickets:\"\\ud83c\\udf9f\", tiger:\"\\ud83d\\udc2f\", tiger2:\"\\ud83d\\udc05\", timer_clock:\"⏲\", tipping_hand_man:\"\\ud83d\\udc81\\x26zwj;♂️\", tired_face:\"\\ud83d\\ude2b\", tm:\"™️\", toilet:\"\\ud83d\\udebd\", \n    tokyo_tower:\"\\ud83d\\uddfc\", tomato:\"\\ud83c\\udf45\", tongue:\"\\ud83d\\udc45\", top:\"\\ud83d\\udd1d\", tophat:\"\\ud83c\\udfa9\", tornado:\"\\ud83c\\udf2a\", trackball:\"\\ud83d\\uddb2\", tractor:\"\\ud83d\\ude9c\", traffic_light:\"\\ud83d\\udea5\", train:\"\\ud83d\\ude8b\", train2:\"\\ud83d\\ude86\", tram:\"\\ud83d\\ude8a\", triangular_flag_on_post:\"\\ud83d\\udea9\", triangular_ruler:\"\\ud83d\\udcd0\", trident:\"\\ud83d\\udd31\", triumph:\"\\ud83d\\ude24\", trolleybus:\"\\ud83d\\ude8e\", trophy:\"\\ud83c\\udfc6\", tropical_drink:\"\\ud83c\\udf79\", tropical_fish:\"\\ud83d\\udc20\", \n    truck:\"\\ud83d\\ude9a\", trumpet:\"\\ud83c\\udfba\", tulip:\"\\ud83c\\udf37\", tumbler_glass:\"\\ud83e\\udd43\", turkey:\"\\ud83e\\udd83\", turtle:\"\\ud83d\\udc22\", tv:\"\\ud83d\\udcfa\", twisted_rightwards_arrows:\"\\ud83d\\udd00\", two_hearts:\"\\ud83d\\udc95\", two_men_holding_hands:\"\\ud83d\\udc6c\", two_women_holding_hands:\"\\ud83d\\udc6d\", u5272:\"\\ud83c\\ude39\", u5408:\"\\ud83c\\ude34\", u55b6:\"\\ud83c\\ude3a\", u6307:\"\\ud83c\\ude2f️\", u6708:\"\\ud83c\\ude37️\", u6709:\"\\ud83c\\ude36\", u6e80:\"\\ud83c\\ude35\", u7121:\"\\ud83c\\ude1a️\", u7533:\"\\ud83c\\ude38\", \n    u7981:\"\\ud83c\\ude32\", u7a7a:\"\\ud83c\\ude33\", umbrella:\"☔️\", unamused:\"\\ud83d\\ude12\", underage:\"\\ud83d\\udd1e\", unicorn:\"\\ud83e\\udd84\", unlock:\"\\ud83d\\udd13\", up:\"\\ud83c\\udd99\", upside_down_face:\"\\ud83d\\ude43\", v:\"✌️\", vertical_traffic_light:\"\\ud83d\\udea6\", vhs:\"\\ud83d\\udcfc\", vibration_mode:\"\\ud83d\\udcf3\", video_camera:\"\\ud83d\\udcf9\", video_game:\"\\ud83c\\udfae\", violin:\"\\ud83c\\udfbb\", virgo:\"♍️\", volcano:\"\\ud83c\\udf0b\", volleyball:\"\\ud83c\\udfd0\", vs:\"\\ud83c\\udd9a\", vulcan_salute:\"\\ud83d\\udd96\", \n    walking_man:\"\\ud83d\\udeb6\", walking_woman:\"\\ud83d\\udeb6\\x26zwj;♀️\", waning_crescent_moon:\"\\ud83c\\udf18\", waning_gibbous_moon:\"\\ud83c\\udf16\", warning:\"⚠️\", wastebasket:\"\\ud83d\\uddd1\", watch:\"⌚️\", water_buffalo:\"\\ud83d\\udc03\", watermelon:\"\\ud83c\\udf49\", wave:\"\\ud83d\\udc4b\", wavy_dash:\"〰️\", waxing_crescent_moon:\"\\ud83c\\udf12\", wc:\"\\ud83d\\udebe\", weary:\"\\ud83d\\ude29\", wedding:\"\\ud83d\\udc92\", weight_lifting_man:\"\\ud83c\\udfcb️\", weight_lifting_woman:\"\\ud83c\\udfcb️\\x26zwj;♀️\", whale:\"\\ud83d\\udc33\", \n    whale2:\"\\ud83d\\udc0b\", wheel_of_dharma:\"☸️\", wheelchair:\"♿️\", white_check_mark:\"✅\", white_circle:\"⚪️\", white_flag:\"\\ud83c\\udff3️\", white_flower:\"\\ud83d\\udcae\", white_large_square:\"⬜️\", white_medium_small_square:\"◽️\", white_medium_square:\"◻️\", white_small_square:\"▫️\", white_square_button:\"\\ud83d\\udd33\", wilted_flower:\"\\ud83e\\udd40\", wind_chime:\"\\ud83c\\udf90\", wind_face:\"\\ud83c\\udf2c\", wine_glass:\"\\ud83c\\udf77\", wink:\"\\ud83d\\ude09\", wolf:\"\\ud83d\\udc3a\", woman:\"\\ud83d\\udc69\", woman_artist:\"\\ud83d\\udc69\\x26zwj;\\ud83c\\udfa8\", \n    woman_astronaut:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\ude80\", woman_cartwheeling:\"\\ud83e\\udd38\\x26zwj;♀️\", woman_cook:\"\\ud83d\\udc69\\x26zwj;\\ud83c\\udf73\", woman_facepalming:\"\\ud83e\\udd26\\x26zwj;♀️\", woman_factory_worker:\"\\ud83d\\udc69\\x26zwj;\\ud83c\\udfed\", woman_farmer:\"\\ud83d\\udc69\\x26zwj;\\ud83c\\udf3e\", woman_firefighter:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\ude92\", woman_health_worker:\"\\ud83d\\udc69\\x26zwj;⚕️\", woman_judge:\"\\ud83d\\udc69\\x26zwj;⚖️\", woman_juggling:\"\\ud83e\\udd39\\x26zwj;♀️\", woman_mechanic:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udd27\", \n    woman_office_worker:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udcbc\", woman_pilot:\"\\ud83d\\udc69\\x26zwj;✈️\", woman_playing_handball:\"\\ud83e\\udd3e\\x26zwj;♀️\", woman_playing_water_polo:\"\\ud83e\\udd3d\\x26zwj;♀️\", woman_scientist:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udd2c\", woman_shrugging:\"\\ud83e\\udd37\\x26zwj;♀️\", woman_singer:\"\\ud83d\\udc69\\x26zwj;\\ud83c\\udfa4\", woman_student:\"\\ud83d\\udc69\\x26zwj;\\ud83c\\udf93\", woman_teacher:\"\\ud83d\\udc69\\x26zwj;\\ud83c\\udfeb\", woman_technologist:\"\\ud83d\\udc69\\x26zwj;\\ud83d\\udcbb\", woman_with_turban:\"\\ud83d\\udc73\\x26zwj;♀️\", \n    womans_clothes:\"\\ud83d\\udc5a\", womans_hat:\"\\ud83d\\udc52\", women_wrestling:\"\\ud83e\\udd3c\\x26zwj;♀️\", womens:\"\\ud83d\\udeba\", world_map:\"\\ud83d\\uddfa\", worried:\"\\ud83d\\ude1f\", wrench:\"\\ud83d\\udd27\", writing_hand:\"✍️\", x:\"❌\", yellow_heart:\"\\ud83d\\udc9b\", yen:\"\\ud83d\\udcb4\", yin_yang:\"☯️\", yum:\"\\ud83d\\ude0b\", zap:\"⚡️\", zipper_mouth_face:\"\\ud83e\\udd10\", zzz:\"\\ud83d\\udca4\", octocat:'\\x3cimg alt\\x3d\":octocat:\" height\\x3d\"20\" width\\x3d\"20\" align\\x3d\"absmiddle\" src\\x3d\"https://assets-cdn.github.com/images/icons/emoji/octocat.png\"\\x3e', \n    showdown:\"\\x3cspan style\\x3d\\\"font-family: 'Anonymous Pro', monospace; text-decoration: underline; text-decoration-style: dashed; text-decoration-color: #3e8b8a;text-underline-position: under;\\\"\\x3eS\\x3c/span\\x3e\"};\n    showdown.Converter = function(converterOptions) {\n      function _parseExtension(ext$jscomp$0, name) {\n        name = name || null;\n        if (showdown.helper.isString(ext$jscomp$0)) {\n          name = ext$jscomp$0 = showdown.helper.stdExtName(ext$jscomp$0);\n          if (showdown.extensions[ext$jscomp$0]) {\n            console.warn(\"DEPRECATION WARNING: \" + ext$jscomp$0 + \" is an old extension that uses a deprecated loading method.Please inform the developer that the extension should be updated!\");\n            var ext = showdown.extensions[ext$jscomp$0];\n            \"function\" === typeof ext && (ext = ext(new showdown.Converter()));\n            showdown.helper.isArray(ext) || (ext = [ext]);\n            ext$jscomp$0 = validate(ext, ext$jscomp$0);\n            if (!ext$jscomp$0.valid) {\n              throw Error(ext$jscomp$0.error);\n            }\n            for (ext$jscomp$0 = 0; ext$jscomp$0 < ext.length; ++ext$jscomp$0) {\n              switch(ext[ext$jscomp$0].type) {\n                case \"lang\":\n                  langExtensions.push(ext[ext$jscomp$0]);\n                  break;\n                case \"output\":\n                  outputModifiers.push(ext[ext$jscomp$0]);\n                  break;\n                default:\n                  throw Error(\"Extension loader error: Type unrecognized!!!\");\n              }\n            }\n            return;\n          }\n          if (showdown.helper.isUndefined(extensions[ext$jscomp$0])) {\n            throw Error('Extension \"' + ext$jscomp$0 + '\" could not be loaded. It was either not found or is not a valid extension.');\n          }\n          ext$jscomp$0 = extensions[ext$jscomp$0];\n        }\n        \"function\" === typeof ext$jscomp$0 && (ext$jscomp$0 = ext$jscomp$0());\n        showdown.helper.isArray(ext$jscomp$0) || (ext$jscomp$0 = [ext$jscomp$0]);\n        name = validate(ext$jscomp$0, name);\n        if (!name.valid) {\n          throw Error(name.error);\n        }\n        for (name = 0; name < ext$jscomp$0.length; ++name) {\n          switch(ext$jscomp$0[name].type) {\n            case \"lang\":\n              langExtensions.push(ext$jscomp$0[name]);\n              break;\n            case \"output\":\n              outputModifiers.push(ext$jscomp$0[name]);\n          }\n          if (ext$jscomp$0[name].hasOwnProperty(\"listeners\")) {\n            for (ext in ext$jscomp$0[name].listeners) {\n              ext$jscomp$0[name].listeners.hasOwnProperty(ext) && listen(ext, ext$jscomp$0[name].listeners[ext]);\n            }\n          }\n        }\n      }\n      function listen(name, callback) {\n        if (!showdown.helper.isString(name)) {\n          throw Error(\"Invalid argument in converter.listen() method: name must be a string, but \" + typeof name + \" given\");\n        }\n        if (\"function\" !== typeof callback) {\n          throw Error(\"Invalid argument in converter.listen() method: callback must be a function, but \" + typeof callback + \" given\");\n        }\n        listeners.hasOwnProperty(name) || (listeners[name] = []);\n        listeners[name].push(callback);\n      }\n      function rTrimInputText(text) {\n        var rsp = text.match(/^\\s*/)[0].length;\n        return text.replace(new RegExp(\"^\\\\s{0,\" + rsp + \"}\", \"gm\"), \"\");\n      }\n      var options = {}, langExtensions = [], outputModifiers = [], listeners = {}, setConvFlavor = setFlavor, metadata = {parsed:{}, raw:\"\", format:\"\"};\n      (function() {\n        converterOptions = converterOptions || {};\n        for (var gOpt in globalOptions) {\n          globalOptions.hasOwnProperty(gOpt) && (options[gOpt] = globalOptions[gOpt]);\n        }\n        if (\"object\" === typeof converterOptions) {\n          for (var opt in converterOptions) {\n            converterOptions.hasOwnProperty(opt) && (options[opt] = converterOptions[opt]);\n          }\n        } else {\n          throw Error(\"Converter expects the passed parameter to be an object, but \" + typeof converterOptions + \" was passed instead.\");\n        }\n        options.extensions && showdown.helper.forEach(options.extensions, _parseExtension);\n      })();\n      this._dispatch = function(evtName, text, options, globals) {\n        if (listeners.hasOwnProperty(evtName)) {\n          for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n            var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n            nText && \"undefined\" !== typeof nText && (text = nText);\n          }\n        }\n        return text;\n      };\n      this.listen = function(name, callback) {\n        listen(name, callback);\n        return this;\n      };\n      this.makeHtml = function(text) {\n        if (!text) {\n          return text;\n        }\n        var globals = {gHtmlBlocks:[], gHtmlMdBlocks:[], gHtmlSpans:[], gUrls:{}, gTitles:{}, gDimensions:{}, gListLevel:0, hashLinkCounts:{}, langExtensions, outputModifiers, converter:this, ghCodeBlocks:[], metadata:{parsed:{}, raw:\"\", format:\"\"}};\n        text = text.replace(/¨/g, \"¨T\");\n        text = text.replace(/\\$/g, \"¨D\");\n        text = text.replace(/\\r\\n/g, \"\\n\");\n        text = text.replace(/\\r/g, \"\\n\");\n        text = text.replace(/\\u00A0/g, \"\\x26nbsp;\");\n        options.smartIndentationFix && (text = rTrimInputText(text));\n        text = \"\\n\\n\" + text + \"\\n\\n\";\n        text = showdown.subParser(\"detab\")(text, options, globals);\n        text = text.replace(/^[ \\t]+$/mg, \"\");\n        showdown.helper.forEach(langExtensions, function(ext) {\n          text = showdown.subParser(\"runExtension\")(ext, text, options, globals);\n        });\n        text = showdown.subParser(\"metadata\")(text, options, globals);\n        text = showdown.subParser(\"hashPreCodeTags\")(text, options, globals);\n        text = showdown.subParser(\"githubCodeBlocks\")(text, options, globals);\n        text = showdown.subParser(\"hashHTMLBlocks\")(text, options, globals);\n        text = showdown.subParser(\"hashCodeTags\")(text, options, globals);\n        text = showdown.subParser(\"stripLinkDefinitions\")(text, options, globals);\n        text = showdown.subParser(\"blockGamut\")(text, options, globals);\n        text = showdown.subParser(\"unhashHTMLSpans\")(text, options, globals);\n        text = showdown.subParser(\"unescapeSpecialChars\")(text, options, globals);\n        text = text.replace(/¨D/g, \"$$\");\n        text = text.replace(/¨T/g, \"¨\");\n        text = showdown.subParser(\"completeHTMLDocument\")(text, options, globals);\n        showdown.helper.forEach(outputModifiers, function(ext) {\n          text = showdown.subParser(\"runExtension\")(ext, text, options, globals);\n        });\n        metadata = globals.metadata;\n        return text;\n      };\n      this.makeMarkdown = this.makeMd = function(src, HTMLParser) {\n        function clean(node) {\n          for (var n = 0; n < node.childNodes.length; ++n) {\n            var child = node.childNodes[n];\n            3 === child.nodeType ? /\\S/.test(child.nodeValue) || /^[ ]+$/.test(child.nodeValue) ? (child.nodeValue = child.nodeValue.split(\"\\n\").join(\" \"), child.nodeValue = child.nodeValue.replace(/(\\s)+/g, \"$1\")) : (node.removeChild(child), --n) : 1 === child.nodeType && clean(child);\n          }\n        }\n        src = src.replace(/\\r\\n/g, \"\\n\");\n        src = src.replace(/\\r/g, \"\\n\");\n        src = src.replace(/>[ \\t]+</, \"\\x3e¨NBSP;\\x3c\");\n        if (!HTMLParser) {\n          if (window && window.document) {\n            HTMLParser = window.document;\n          } else {\n            throw Error(\"HTMLParser is undefined. If in a webworker or nodejs environment, you need to provide a WHATWG DOM and HTML such as JSDOM\");\n          }\n        }\n        HTMLParser = HTMLParser.createElement(\"div\");\n        HTMLParser.innerHTML = src;\n        src = {preList:function(doc) {\n          doc = doc.querySelectorAll(\"pre\");\n          for (var presPH = [], i = 0; i < doc.length; ++i) {\n            if (1 === doc[i].childElementCount && \"code\" === doc[i].firstChild.tagName.toLowerCase()) {\n              var content = doc[i].firstChild.innerHTML.trim(), language = doc[i].firstChild.getAttribute(\"data-language\") || \"\";\n              if (\"\" === language) {\n                for (var classes = doc[i].firstChild.className.split(\" \"), c = 0; c < classes.length; ++c) {\n                  var matches = classes[c].match(/^language-(.+)$/);\n                  if (null !== matches) {\n                    language = matches[1];\n                    break;\n                  }\n                }\n              }\n              content = showdown.helper.unescapeHTMLEntities(content);\n              presPH.push(content);\n              doc[i].outerHTML = '\\x3cprecode language\\x3d\"' + language + '\" precodenum\\x3d\"' + i.toString() + '\"\\x3e\\x3c/precode\\x3e';\n            } else {\n              presPH.push(doc[i].innerHTML), doc[i].innerHTML = \"\", doc[i].setAttribute(\"prenum\", i.toString());\n            }\n          }\n          return presPH;\n        }(HTMLParser)};\n        clean(HTMLParser);\n        HTMLParser = HTMLParser.childNodes;\n        for (var mdDoc = \"\", i = 0; i < HTMLParser.length; i++) {\n          mdDoc += showdown.subParser(\"makeMarkdown.node\")(HTMLParser[i], src);\n        }\n        return mdDoc;\n      };\n      this.setOption = function(key, value) {\n        options[key] = value;\n      };\n      this.getOption = function(key) {\n        return options[key];\n      };\n      this.getOptions = function() {\n        return options;\n      };\n      this.addExtension = function(extension, name) {\n        _parseExtension(extension, name || null);\n      };\n      this.useExtension = function(extensionName) {\n        _parseExtension(extensionName);\n      };\n      this.setFlavor = function(name) {\n        if (!flavor.hasOwnProperty(name)) {\n          throw Error(name + \" flavor was not found\");\n        }\n        var preset = flavor[name];\n        setConvFlavor = name;\n        for (var option in preset) {\n          preset.hasOwnProperty(option) && (options[option] = preset[option]);\n        }\n      };\n      this.getFlavor = function() {\n        return setConvFlavor;\n      };\n      this.removeExtension = function(extension) {\n        showdown.helper.isArray(extension) || (extension = [extension]);\n        for (var a = 0; a < extension.length; ++a) {\n          for (var ext = extension[a], i = 0; i < langExtensions.length; ++i) {\n            langExtensions[i] === ext && langExtensions.splice(i, 1);\n          }\n          for (i = 0; i < outputModifiers.length; ++i) {\n            outputModifiers[i] === ext && outputModifiers.splice(i, 1);\n          }\n        }\n      };\n      this.getAllExtensions = function() {\n        return {language:langExtensions, output:outputModifiers};\n      };\n      this.getMetadata = function(raw) {\n        return raw ? metadata.raw : metadata.parsed;\n      };\n      this.getMetadataFormat = function() {\n        return metadata.format;\n      };\n      this._setMetadataPair = function(key, value) {\n        metadata.parsed[key] = value;\n      };\n      this._setMetadataFormat = function(format) {\n        metadata.format = format;\n      };\n      this._setMetadataRaw = function(raw) {\n        metadata.raw = raw;\n      };\n    };\n    showdown.subParser(\"anchors\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"anchors.before\", text, options, globals);\n      var writeAnchorTag = function(wholeMatch, linkText, linkId, url, m5, m6, title) {\n        showdown.helper.isUndefined(title) && (title = \"\");\n        linkId = linkId.toLowerCase();\n        if (-1 < wholeMatch.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m)) {\n          url = \"\";\n        } else if (!url) {\n          linkId || (linkId = linkText.toLowerCase().replace(/ ?\\n/g, \" \"));\n          if (showdown.helper.isUndefined(globals.gUrls[linkId])) {\n            return wholeMatch;\n          }\n          url = globals.gUrls[linkId];\n          showdown.helper.isUndefined(globals.gTitles[linkId]) || (title = globals.gTitles[linkId]);\n        }\n        url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n        wholeMatch = '\\x3ca href\\x3d\"' + url + '\"';\n        \"\" !== title && null !== title && (title = title.replace(/\"/g, \"\\x26quot;\"), title = title.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback), wholeMatch += ' title\\x3d\"' + title + '\"');\n        options.openLinksInNewWindow && !/^#/.test(url) && (wholeMatch += ' rel\\x3d\"noopener noreferrer\" target\\x3d\"¨E95Eblank\"');\n        return wholeMatch + (\"\\x3e\" + linkText + \"\\x3c/a\\x3e\");\n      };\n      text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)] ?(?:\\n *)?\\[(.*?)]()()()()/g, writeAnchorTag);\n      text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<([^>]*)>(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g, writeAnchorTag);\n      text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g, writeAnchorTag);\n      text = text.replace(/\\[([^\\[\\]]+)]()()()()()/g, writeAnchorTag);\n      options.ghMentions && (text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d]+(?:[a-z\\d.-]+?[a-z\\d]+)*))/gmi, function(wm, st, escape, mentions, username) {\n        if (\"\\\\\" === escape) {\n          return st + mentions;\n        }\n        if (!showdown.helper.isString(options.ghMentionsLink)) {\n          throw Error(\"ghMentionsLink option must be a string\");\n        }\n        wm = options.ghMentionsLink.replace(/\\{u}/g, username);\n        escape = \"\";\n        options.openLinksInNewWindow && (escape = ' rel\\x3d\"noopener noreferrer\" target\\x3d\"¨E95Eblank\"');\n        return st + '\\x3ca href\\x3d\"' + wm + '\"' + escape + \"\\x3e\" + mentions + \"\\x3c/a\\x3e\";\n      }));\n      return text = globals.converter._dispatch(\"anchors.after\", text, options, globals);\n    });\n    var simpleURLRegex = /([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+?\\.[^'\">\\s]+?)()(\\1)?(?=\\s|$)(?![\"<>])/gi, simpleURLRegex2 = /([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?,()\\[\\]])?(\\1)?(?=\\s|$)(?![\"<>])/gi, delimUrlRegex = /()<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)()>()/gi, simpleMailRegex = /(^|\\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?=$|\\s)/gmi, delimMailRegex = /<()(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi, \n    replaceLink = function(options) {\n      return function(wm, leadingMagicChars, link, m2, m3, trailingPunctuation, trailingMagicChars) {\n        wm = link = link.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n        m3 = m2 = \"\";\n        leadingMagicChars = leadingMagicChars || \"\";\n        trailingMagicChars = trailingMagicChars || \"\";\n        /^www\\./i.test(link) && (link = link.replace(/^www\\./i, \"http://www.\"));\n        options.excludeTrailingPunctuationFromURLs && trailingPunctuation && (m2 = trailingPunctuation);\n        options.openLinksInNewWindow && (m3 = ' rel\\x3d\"noopener noreferrer\" target\\x3d\"¨E95Eblank\"');\n        return leadingMagicChars + '\\x3ca href\\x3d\"' + link + '\"' + m3 + \"\\x3e\" + wm + \"\\x3c/a\\x3e\" + m2 + trailingMagicChars;\n      };\n    }, replaceMail = function(options, globals) {\n      return function(wholeMatch, b, mail) {\n        wholeMatch = \"mailto:\";\n        b = b || \"\";\n        mail = showdown.subParser(\"unescapeSpecialChars\")(mail, options, globals);\n        options.encodeEmails ? (wholeMatch = showdown.helper.encodeEmailAddress(wholeMatch + mail), mail = showdown.helper.encodeEmailAddress(mail)) : wholeMatch += mail;\n        return b + '\\x3ca href\\x3d\"' + wholeMatch + '\"\\x3e' + mail + \"\\x3c/a\\x3e\";\n      };\n    };\n    showdown.subParser(\"autoLinks\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"autoLinks.before\", text, options, globals);\n      text = text.replace(delimUrlRegex, replaceLink(options));\n      text = text.replace(delimMailRegex, replaceMail(options, globals));\n      return text = globals.converter._dispatch(\"autoLinks.after\", text, options, globals);\n    });\n    showdown.subParser(\"simplifiedAutoLinks\", function(text, options, globals) {\n      if (!options.simplifiedAutoLink) {\n        return text;\n      }\n      text = globals.converter._dispatch(\"simplifiedAutoLinks.before\", text, options, globals);\n      text = options.excludeTrailingPunctuationFromURLs ? text.replace(simpleURLRegex2, replaceLink(options)) : text.replace(simpleURLRegex, replaceLink(options));\n      text = text.replace(simpleMailRegex, replaceMail(options, globals));\n      return text = globals.converter._dispatch(\"simplifiedAutoLinks.after\", text, options, globals);\n    });\n    showdown.subParser(\"blockGamut\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"blockGamut.before\", text, options, globals);\n      text = showdown.subParser(\"blockQuotes\")(text, options, globals);\n      text = showdown.subParser(\"headers\")(text, options, globals);\n      text = showdown.subParser(\"horizontalRule\")(text, options, globals);\n      text = showdown.subParser(\"lists\")(text, options, globals);\n      text = showdown.subParser(\"codeBlocks\")(text, options, globals);\n      text = showdown.subParser(\"tables\")(text, options, globals);\n      text = showdown.subParser(\"hashHTMLBlocks\")(text, options, globals);\n      text = showdown.subParser(\"paragraphs\")(text, options, globals);\n      return text = globals.converter._dispatch(\"blockGamut.after\", text, options, globals);\n    });\n    showdown.subParser(\"blockQuotes\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"blockQuotes.before\", text, options, globals);\n      var rgx = /(^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+/gm;\n      options.splitAdjacentBlockquotes && (rgx = /^ {0,3}>[\\s\\S]*?(?:\\n\\n)/gm);\n      text = (text + \"\\n\\n\").replace(rgx, function(bq) {\n        bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, \"\");\n        bq = bq.replace(/¨0/g, \"\");\n        bq = bq.replace(/^[ \\t]+$/gm, \"\");\n        bq = showdown.subParser(\"githubCodeBlocks\")(bq, options, globals);\n        bq = showdown.subParser(\"blockGamut\")(bq, options, globals);\n        bq = bq.replace(/(^|\\n)/g, \"$1  \");\n        bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function(wholeMatch, m1) {\n          wholeMatch = m1.replace(/^  /mg, \"¨0\");\n          return wholeMatch = wholeMatch.replace(/¨0/g, \"\");\n        });\n        return showdown.subParser(\"hashBlock\")(\"\\x3cblockquote\\x3e\\n\" + bq + \"\\n\\x3c/blockquote\\x3e\", options, globals);\n      });\n      return text = globals.converter._dispatch(\"blockQuotes.after\", text, options, globals);\n    });\n    showdown.subParser(\"codeBlocks\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"codeBlocks.before\", text, options, globals);\n      text = (text + \"¨0\").replace(/(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=¨0))/g, function(wholeMatch, m1, m2) {\n        wholeMatch = m1;\n        m1 = \"\\n\";\n        wholeMatch = showdown.subParser(\"outdent\")(wholeMatch, options, globals);\n        wholeMatch = showdown.subParser(\"encodeCode\")(wholeMatch, options, globals);\n        wholeMatch = showdown.subParser(\"detab\")(wholeMatch, options, globals);\n        wholeMatch = wholeMatch.replace(/^\\n+/g, \"\");\n        wholeMatch = wholeMatch.replace(/\\n+$/g, \"\");\n        options.omitExtraWLInCodeBlocks && (m1 = \"\");\n        wholeMatch = \"\\x3cpre\\x3e\\x3ccode\\x3e\" + wholeMatch + m1 + \"\\x3c/code\\x3e\\x3c/pre\\x3e\";\n        return showdown.subParser(\"hashBlock\")(wholeMatch, options, globals) + m2;\n      });\n      text = text.replace(/¨0/, \"\");\n      return text = globals.converter._dispatch(\"codeBlocks.after\", text, options, globals);\n    });\n    showdown.subParser(\"codeSpans\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"codeSpans.before\", text, options, globals);\n      \"undefined\" === typeof text && (text = \"\");\n      text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm, function(wholeMatch, m1, m2, m3) {\n        wholeMatch = m3.replace(/^([ \\t]*)/g, \"\");\n        wholeMatch = wholeMatch.replace(/[ \\t]*$/g, \"\");\n        wholeMatch = showdown.subParser(\"encodeCode\")(wholeMatch, options, globals);\n        wholeMatch = m1 + \"\\x3ccode\\x3e\" + wholeMatch + \"\\x3c/code\\x3e\";\n        return wholeMatch = showdown.subParser(\"hashHTMLSpans\")(wholeMatch, options, globals);\n      });\n      return text = globals.converter._dispatch(\"codeSpans.after\", text, options, globals);\n    });\n    showdown.subParser(\"completeHTMLDocument\", function(text, options, globals) {\n      if (!options.completeHTMLDocument) {\n        return text;\n      }\n      text = globals.converter._dispatch(\"completeHTMLDocument.before\", text, options, globals);\n      var doctype = \"html\", doctypeParsed = \"\\x3c!DOCTYPE HTML\\x3e\\n\", title = \"\", charset = '\\x3cmeta charset\\x3d\"utf-8\"\\x3e\\n', lang = \"\", metadata = \"\";\n      \"undefined\" !== typeof globals.metadata.parsed.doctype && (doctypeParsed = \"\\x3c!DOCTYPE \" + globals.metadata.parsed.doctype + \"\\x3e\\n\", doctype = globals.metadata.parsed.doctype.toString().toLowerCase(), \"html\" === doctype || \"html5\" === doctype) && (charset = '\\x3cmeta charset\\x3d\"utf-8\"\\x3e');\n      for (var meta in globals.metadata.parsed) {\n        if (globals.metadata.parsed.hasOwnProperty(meta)) {\n          switch(meta.toLowerCase()) {\n            case \"doctype\":\n              break;\n            case \"title\":\n              title = \"\\x3ctitle\\x3e\" + globals.metadata.parsed.title + \"\\x3c/title\\x3e\\n\";\n              break;\n            case \"charset\":\n              charset = \"html\" === doctype || \"html5\" === doctype ? '\\x3cmeta charset\\x3d\"' + globals.metadata.parsed.charset + '\"\\x3e\\n' : '\\x3cmeta name\\x3d\"charset\" content\\x3d\"' + globals.metadata.parsed.charset + '\"\\x3e\\n';\n              break;\n            case \"language\":\n            case \"lang\":\n              lang = ' lang\\x3d\"' + globals.metadata.parsed[meta] + '\"';\n              metadata += '\\x3cmeta name\\x3d\"' + meta + '\" content\\x3d\"' + globals.metadata.parsed[meta] + '\"\\x3e\\n';\n              break;\n            default:\n              metadata += '\\x3cmeta name\\x3d\"' + meta + '\" content\\x3d\"' + globals.metadata.parsed[meta] + '\"\\x3e\\n';\n          }\n        }\n      }\n      text = doctypeParsed + \"\\x3chtml\" + lang + \"\\x3e\\n\\x3chead\\x3e\\n\" + title + charset + metadata + \"\\x3c/head\\x3e\\n\\x3cbody\\x3e\\n\" + text.trim() + \"\\n\\x3c/body\\x3e\\n\\x3c/html\\x3e\";\n      return text = globals.converter._dispatch(\"completeHTMLDocument.after\", text, options, globals);\n    });\n    showdown.subParser(\"detab\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"detab.before\", text, options, globals);\n      text = text.replace(/\\t(?=\\t)/g, \"    \");\n      text = text.replace(/\\t/g, \"¨A¨B\");\n      text = text.replace(/¨B(.+?)¨A/g, function(wholeMatch, m1) {\n        wholeMatch = m1;\n        m1 = 4 - wholeMatch.length % 4;\n        for (var i = 0; i < m1; i++) {\n          wholeMatch += \" \";\n        }\n        return wholeMatch;\n      });\n      text = text.replace(/¨A/g, \"    \");\n      text = text.replace(/¨B/g, \"\");\n      return text = globals.converter._dispatch(\"detab.after\", text, options, globals);\n    });\n    showdown.subParser(\"ellipsis\", function(text, options, globals) {\n      if (!options.ellipsis) {\n        return text;\n      }\n      text = globals.converter._dispatch(\"ellipsis.before\", text, options, globals);\n      text = text.replace(/\\.\\.\\./g, \"…\");\n      return text = globals.converter._dispatch(\"ellipsis.after\", text, options, globals);\n    });\n    showdown.subParser(\"emoji\", function(text, options, globals) {\n      if (!options.emoji) {\n        return text;\n      }\n      text = globals.converter._dispatch(\"emoji.before\", text, options, globals);\n      text = text.replace(/:([\\S]+?):/g, function(wm, emojiCode) {\n        return showdown.helper.emojis.hasOwnProperty(emojiCode) ? showdown.helper.emojis[emojiCode] : wm;\n      });\n      return text = globals.converter._dispatch(\"emoji.after\", text, options, globals);\n    });\n    showdown.subParser(\"encodeAmpsAndAngles\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"encodeAmpsAndAngles.before\", text, options, globals);\n      text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, \"\\x26amp;\");\n      text = text.replace(/<(?![a-z\\/?$!])/gi, \"\\x26lt;\");\n      text = text.replace(/</g, \"\\x26lt;\");\n      text = text.replace(/>/g, \"\\x26gt;\");\n      return text = globals.converter._dispatch(\"encodeAmpsAndAngles.after\", text, options, globals);\n    });\n    showdown.subParser(\"encodeBackslashEscapes\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"encodeBackslashEscapes.before\", text, options, globals);\n      text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n      text = text.replace(/\\\\([`*_{}\\[\\]()>#+.!~=|:-])/g, showdown.helper.escapeCharactersCallback);\n      return text = globals.converter._dispatch(\"encodeBackslashEscapes.after\", text, options, globals);\n    });\n    showdown.subParser(\"encodeCode\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"encodeCode.before\", text, options, globals);\n      text = text.replace(/&/g, \"\\x26amp;\").replace(/</g, \"\\x26lt;\").replace(/>/g, \"\\x26gt;\").replace(/([*_{}\\[\\]\\\\=~-])/g, showdown.helper.escapeCharactersCallback);\n      return text = globals.converter._dispatch(\"encodeCode.after\", text, options, globals);\n    });\n    showdown.subParser(\"escapeSpecialCharsWithinTagAttributes\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"escapeSpecialCharsWithinTagAttributes.before\", text, options, globals);\n      text = text.replace(/<\\/?[a-z\\d_:-]+(?:[\\s]+[\\s\\S]+?)?>/gi, function(wholeMatch) {\n        return wholeMatch.replace(/(.)<\\/?code>(?=.)/g, \"$1`\").replace(/([\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\n      });\n      text = text.replace(/<!(--(?:(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>/gi, function(wholeMatch) {\n        return wholeMatch.replace(/([\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\n      });\n      return text = globals.converter._dispatch(\"escapeSpecialCharsWithinTagAttributes.after\", text, options, globals);\n    });\n    showdown.subParser(\"githubCodeBlocks\", function(text, options, globals) {\n      if (!options.ghCodeBlocks) {\n        return text;\n      }\n      text = globals.converter._dispatch(\"githubCodeBlocks.before\", text, options, globals);\n      text = (text + \"¨0\").replace(/(?:^|\\n)(?: {0,3})(```+|~~~+)(?: *)([^\\s`~]*)\\n([\\s\\S]*?)\\n(?: {0,3})\\1/g, function(wholeMatch, delim, language, codeblock) {\n        delim = options.omitExtraWLInCodeBlocks ? \"\" : \"\\n\";\n        codeblock = showdown.subParser(\"encodeCode\")(codeblock, options, globals);\n        codeblock = showdown.subParser(\"detab\")(codeblock, options, globals);\n        codeblock = codeblock.replace(/^\\n+/g, \"\");\n        codeblock = codeblock.replace(/\\n+$/g, \"\");\n        codeblock = \"\\x3cpre\\x3e\\x3ccode\" + (language ? ' class\\x3d\"' + language + \" language-\" + language + '\"' : \"\") + \"\\x3e\" + codeblock + delim + \"\\x3c/code\\x3e\\x3c/pre\\x3e\";\n        codeblock = showdown.subParser(\"hashBlock\")(codeblock, options, globals);\n        return \"\\n\\n¨G\" + (globals.ghCodeBlocks.push({text:wholeMatch, codeblock}) - 1) + \"G\\n\\n\";\n      });\n      text = text.replace(/¨0/, \"\");\n      return globals.converter._dispatch(\"githubCodeBlocks.after\", text, options, globals);\n    });\n    showdown.subParser(\"hashBlock\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"hashBlock.before\", text, options, globals);\n      text = text.replace(/(^\\n+|\\n+$)/g, \"\");\n      text = \"\\n\\n¨K\" + (globals.gHtmlBlocks.push(text) - 1) + \"K\\n\\n\";\n      return text = globals.converter._dispatch(\"hashBlock.after\", text, options, globals);\n    });\n    showdown.subParser(\"hashCodeTags\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"hashCodeTags.before\", text, options, globals);\n      text = showdown.helper.replaceRecursiveRegExp(text, function(wholeMatch, match, left, right) {\n        wholeMatch = left + showdown.subParser(\"encodeCode\")(match, options, globals) + right;\n        return \"¨C\" + (globals.gHtmlSpans.push(wholeMatch) - 1) + \"C\";\n      }, \"\\x3ccode\\\\b[^\\x3e]*\\x3e\", \"\\x3c/code\\x3e\", \"gim\");\n      return text = globals.converter._dispatch(\"hashCodeTags.after\", text, options, globals);\n    });\n    showdown.subParser(\"hashElement\", function(text, options, globals) {\n      return function(wholeMatch, m1) {\n        wholeMatch = m1.replace(/\\n\\n/g, \"\\n\");\n        wholeMatch = wholeMatch.replace(/^\\n/, \"\");\n        wholeMatch = wholeMatch.replace(/\\n+$/g, \"\");\n        return wholeMatch = \"\\n\\n¨K\" + (globals.gHtmlBlocks.push(wholeMatch) - 1) + \"K\\n\\n\";\n      };\n    });\n    showdown.subParser(\"hashHTMLBlocks\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"hashHTMLBlocks.before\", text, options, globals);\n      var blockTags = \"pre div h1 h2 h3 h4 h5 h6 blockquote table dl ol ul script noscript form fieldset iframe math style section header footer nav article aside address audio canvas figure hgroup output video p\".split(\" \"), repFunc = function(wholeMatch, match, left, right) {\n        -1 !== left.search(/\\bmarkdown\\b/) && (wholeMatch = left + globals.converter.makeHtml(match) + right);\n        return \"\\n\\n¨K\" + (globals.gHtmlBlocks.push(wholeMatch) - 1) + \"K\\n\\n\";\n      };\n      options.backslashEscapesHTMLTags && (text = text.replace(/\\\\<(\\/?[^>]+?)>/g, function(wm, inside) {\n        return \"\\x26lt;\" + inside + \"\\x26gt;\";\n      }));\n      for (var i = 0; i < blockTags.length; ++i) {\n        for (var opTagPos, rgx1 = new RegExp(\"^ {0,3}(\\x3c\" + blockTags[i] + \"\\\\b[^\\x3e]*\\x3e)\", \"im\"), patLeft = \"\\x3c\" + blockTags[i] + \"\\\\b[^\\x3e]*\\x3e\", patRight = \"\\x3c/\" + blockTags[i] + \"\\x3e\"; -1 !== (opTagPos = showdown.helper.regexIndexOf(text, rgx1));) {\n          opTagPos = showdown.helper.splitAtIndex(text, opTagPos);\n          var newSubText1 = showdown.helper.replaceRecursiveRegExp(opTagPos[1], repFunc, patLeft, patRight, \"im\");\n          if (newSubText1 === opTagPos[1]) {\n            break;\n          }\n          text = opTagPos[0].concat(newSubText1);\n        }\n      }\n      text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g, showdown.subParser(\"hashElement\")(text, options, globals));\n      text = showdown.helper.replaceRecursiveRegExp(text, function(txt) {\n        return \"\\n\\n¨K\" + (globals.gHtmlBlocks.push(txt) - 1) + \"K\\n\\n\";\n      }, \"^ {0,3}\\x3c!--\", \"--\\x3e\", \"gm\");\n      text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g, showdown.subParser(\"hashElement\")(text, options, globals));\n      return text = globals.converter._dispatch(\"hashHTMLBlocks.after\", text, options, globals);\n    });\n    showdown.subParser(\"hashHTMLSpans\", function(text, options, globals) {\n      function hashHTMLSpan(html) {\n        return \"¨C\" + (globals.gHtmlSpans.push(html) - 1) + \"C\";\n      }\n      text = globals.converter._dispatch(\"hashHTMLSpans.before\", text, options, globals);\n      text = text.replace(/<[^>]+?\\/>/gi, function(wm) {\n        return hashHTMLSpan(wm);\n      });\n      text = text.replace(/<([^>]+?)>[\\s\\S]*?<\\/\\1>/g, function(wm) {\n        return hashHTMLSpan(wm);\n      });\n      text = text.replace(/<([^>]+?)\\s[^>]+?>[\\s\\S]*?<\\/\\1>/g, function(wm) {\n        return hashHTMLSpan(wm);\n      });\n      text = text.replace(/<[^>]+?>/gi, function(wm) {\n        return hashHTMLSpan(wm);\n      });\n      return text = globals.converter._dispatch(\"hashHTMLSpans.after\", text, options, globals);\n    });\n    showdown.subParser(\"unhashHTMLSpans\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"unhashHTMLSpans.before\", text, options, globals);\n      for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n        for (var repText = globals.gHtmlSpans[i], limit = 0; /¨C(\\d+)C/.test(repText);) {\n          var num = RegExp.$1;\n          repText = repText.replace(\"¨C\" + num + \"C\", globals.gHtmlSpans[num]);\n          if (10 === limit) {\n            console.error(\"maximum nesting of 10 spans reached!!!\");\n            break;\n          }\n          ++limit;\n        }\n        text = text.replace(\"¨C\" + i + \"C\", repText);\n      }\n      return text = globals.converter._dispatch(\"unhashHTMLSpans.after\", text, options, globals);\n    });\n    showdown.subParser(\"hashPreCodeTags\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"hashPreCodeTags.before\", text, options, globals);\n      text = showdown.helper.replaceRecursiveRegExp(text, function(wholeMatch, match, left, right) {\n        match = left + showdown.subParser(\"encodeCode\")(match, options, globals) + right;\n        return \"\\n\\n¨G\" + (globals.ghCodeBlocks.push({text:wholeMatch, codeblock:match}) - 1) + \"G\\n\\n\";\n      }, \"^ {0,3}\\x3cpre\\\\b[^\\x3e]*\\x3e\\\\s*\\x3ccode\\\\b[^\\x3e]*\\x3e\", \"^ {0,3}\\x3c/code\\x3e\\\\s*\\x3c/pre\\x3e\", \"gim\");\n      return text = globals.converter._dispatch(\"hashPreCodeTags.after\", text, options, globals);\n    });\n    showdown.subParser(\"headers\", function(text, options, globals) {\n      function headerId(m) {\n        var prefix;\n        options.customizedHeaderId && (prefix = m.match(/\\{([^{]+?)}\\s*$/)) && prefix[1] && (m = prefix[1]);\n        prefix = showdown.helper.isString(options.prefixHeaderId) ? options.prefixHeaderId : !0 === options.prefixHeaderId ? \"section-\" : \"\";\n        options.rawPrefixHeaderId || (m = prefix + m);\n        m = options.ghCompatibleHeaderId ? m.replace(/ /g, \"-\").replace(/&amp;/g, \"\").replace(/¨T/g, \"\").replace(/¨D/g, \"\").replace(/[&+$,\\/:;=?@\"#{}|^¨~\\[\\]`\\\\*)(%.!'<>]/g, \"\").toLowerCase() : options.rawHeaderId ? m.replace(/ /g, \"-\").replace(/&amp;/g, \"\\x26\").replace(/¨T/g, \"¨\").replace(/¨D/g, \"$\").replace(/[\"']/g, \"-\").toLowerCase() : m.replace(/[^\\w]/g, \"\").toLowerCase();\n        options.rawPrefixHeaderId && (m = prefix + m);\n        globals.hashLinkCounts[m] ? m = m + \"-\" + globals.hashLinkCounts[m]++ : globals.hashLinkCounts[m] = 1;\n        return m;\n      }\n      text = globals.converter._dispatch(\"headers.before\", text, options, globals);\n      var headerLevelStart = isNaN(parseInt(options.headerLevelStart)) ? 1 : parseInt(options.headerLevelStart), setextRegexH2 = options.smoothLivePreview ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n      text = text.replace(options.smoothLivePreview ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm, function(wholeMatch, m1) {\n        wholeMatch = showdown.subParser(\"spanGamut\")(m1, options, globals);\n        m1 = options.noHeaderId ? \"\" : ' id\\x3d\"' + headerId(m1) + '\"';\n        m1 = \"\\x3ch\" + headerLevelStart + m1 + \"\\x3e\" + wholeMatch + \"\\x3c/h\" + headerLevelStart + \"\\x3e\";\n        return showdown.subParser(\"hashBlock\")(m1, options, globals);\n      });\n      text = text.replace(setextRegexH2, function(matchFound, m1) {\n        matchFound = showdown.subParser(\"spanGamut\")(m1, options, globals);\n        m1 = options.noHeaderId ? \"\" : ' id\\x3d\"' + headerId(m1) + '\"';\n        var hLevel = headerLevelStart + 1;\n        matchFound = \"\\x3ch\" + hLevel + m1 + \"\\x3e\" + matchFound + \"\\x3c/h\" + hLevel + \"\\x3e\";\n        return showdown.subParser(\"hashBlock\")(matchFound, options, globals);\n      });\n      text = text.replace(options.requireSpaceBeforeHeadingText ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm, function(wholeMatch, m1, m2) {\n        wholeMatch = m2;\n        options.customizedHeaderId && (wholeMatch = m2.replace(/\\s?\\{([^{]+?)}\\s*$/, \"\"));\n        wholeMatch = showdown.subParser(\"spanGamut\")(wholeMatch, options, globals);\n        m2 = options.noHeaderId ? \"\" : ' id\\x3d\"' + headerId(m2) + '\"';\n        m1 = headerLevelStart - 1 + m1.length;\n        m1 = \"\\x3ch\" + m1 + m2 + \"\\x3e\" + wholeMatch + \"\\x3c/h\" + m1 + \"\\x3e\";\n        return showdown.subParser(\"hashBlock\")(m1, options, globals);\n      });\n      return text = globals.converter._dispatch(\"headers.after\", text, options, globals);\n    });\n    showdown.subParser(\"horizontalRule\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"horizontalRule.before\", text, options, globals);\n      var key = showdown.subParser(\"hashBlock\")(\"\\x3chr /\\x3e\", options, globals);\n      text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n      text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n      text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n      return text = globals.converter._dispatch(\"horizontalRule.after\", text, options, globals);\n    });\n    showdown.subParser(\"images\", function(text, options, globals) {\n      function writeImageTag(wholeMatch, altText, linkId, url, width, height, m5, title) {\n        m5 = globals.gUrls;\n        var gTitles = globals.gTitles, gDims = globals.gDimensions;\n        linkId = linkId.toLowerCase();\n        title || (title = \"\");\n        if (-1 < wholeMatch.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m)) {\n          url = \"\";\n        } else if (\"\" === url || null === url) {\n          if (\"\" === linkId || null === linkId) {\n            linkId = altText.toLowerCase().replace(/ ?\\n/g, \" \");\n          }\n          if (showdown.helper.isUndefined(m5[linkId])) {\n            return wholeMatch;\n          }\n          url = m5[linkId];\n          showdown.helper.isUndefined(gTitles[linkId]) || (title = gTitles[linkId]);\n          showdown.helper.isUndefined(gDims[linkId]) || (width = gDims[linkId].width, height = gDims[linkId].height);\n        }\n        altText = altText.replace(/\"/g, \"\\x26quot;\").replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n        url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n        wholeMatch = '\\x3cimg src\\x3d\"' + url + '\" alt\\x3d\"' + altText + '\"';\n        title && showdown.helper.isString(title) && (title = title.replace(/\"/g, \"\\x26quot;\").replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback), wholeMatch += ' title\\x3d\"' + title + '\"');\n        width && height && (wholeMatch = wholeMatch + (' width\\x3d\"' + (\"*\" === width ? \"auto\" : width) + '\" height\\x3d\"') + ((\"*\" === height ? \"auto\" : height) + '\"'));\n        return wholeMatch + \" /\\x3e\";\n      }\n      text = globals.converter._dispatch(\"images.before\", text, options, globals);\n      text = text.replace(/!\\[([^\\]]*?)] ?(?:\\n *)?\\[([\\s\\S]*?)]()()()()()/g, writeImageTag);\n      text = text.replace(/!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g, function(wholeMatch, altText, linkId, url, width, height, m5, title) {\n        url = url.replace(/\\s/g, \"\");\n        return writeImageTag(wholeMatch, altText, linkId, url, width, height, m5, title);\n      });\n      text = text.replace(/!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<([^>]*)>(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(?:([\"'])([^\"]*?)\\6))?[ \\t]?\\)/g, writeImageTag);\n      text = text.replace(/!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g, writeImageTag);\n      text = text.replace(/!\\[([^\\[\\]]+)]()()()()()/g, writeImageTag);\n      return text = globals.converter._dispatch(\"images.after\", text, options, globals);\n    });\n    showdown.subParser(\"italicsAndBold\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"italicsAndBold.before\", text, options, globals);\n      options.literalMidWordUnderscores ? (text = text.replace(/\\b___(\\S[\\s\\S]*?)___\\b/g, function(wm, txt) {\n        return \"\\x3cstrong\\x3e\\x3cem\\x3e\" + txt + \"\\x3c/em\\x3e\\x3c/strong\\x3e\";\n      }), text = text.replace(/\\b__(\\S[\\s\\S]*?)__\\b/g, function(wm, txt) {\n        return \"\\x3cstrong\\x3e\" + txt + \"\\x3c/strong\\x3e\";\n      }), text = text.replace(/\\b_(\\S[\\s\\S]*?)_\\b/g, function(wm, txt) {\n        return \"\\x3cem\\x3e\" + txt + \"\\x3c/em\\x3e\";\n      })) : (text = text.replace(/___(\\S[\\s\\S]*?)___/g, function(wm, m) {\n        return /\\S$/.test(m) ? \"\\x3cstrong\\x3e\\x3cem\\x3e\" + m + \"\\x3c/em\\x3e\\x3c/strong\\x3e\" : wm;\n      }), text = text.replace(/__(\\S[\\s\\S]*?)__/g, function(wm, m) {\n        return /\\S$/.test(m) ? \"\\x3cstrong\\x3e\" + m + \"\\x3c/strong\\x3e\" : wm;\n      }), text = text.replace(/_([^\\s_][\\s\\S]*?)_/g, function(wm, m) {\n        return /\\S$/.test(m) ? \"\\x3cem\\x3e\" + m + \"\\x3c/em\\x3e\" : wm;\n      }));\n      options.literalMidWordAsterisks ? (text = text.replace(/([^*]|^)\\B\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*\\B(?!\\*)/g, function(wm, lead, txt) {\n        return lead + \"\\x3cstrong\\x3e\\x3cem\\x3e\" + txt + \"\\x3c/em\\x3e\\x3c/strong\\x3e\";\n      }), text = text.replace(/([^*]|^)\\B\\*\\*(\\S[\\s\\S]*?)\\*\\*\\B(?!\\*)/g, function(wm, lead, txt) {\n        return lead + \"\\x3cstrong\\x3e\" + txt + \"\\x3c/strong\\x3e\";\n      }), text = text.replace(/([^*]|^)\\B\\*(\\S[\\s\\S]*?)\\*\\B(?!\\*)/g, function(wm, lead, txt) {\n        return lead + \"\\x3cem\\x3e\" + txt + \"\\x3c/em\\x3e\";\n      })) : (text = text.replace(/\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*/g, function(wm, m) {\n        return /\\S$/.test(m) ? \"\\x3cstrong\\x3e\\x3cem\\x3e\" + m + \"\\x3c/em\\x3e\\x3c/strong\\x3e\" : wm;\n      }), text = text.replace(/\\*\\*(\\S[\\s\\S]*?)\\*\\*/g, function(wm, m) {\n        return /\\S$/.test(m) ? \"\\x3cstrong\\x3e\" + m + \"\\x3c/strong\\x3e\" : wm;\n      }), text = text.replace(/\\*([^\\s*][\\s\\S]*?)\\*/g, function(wm, m) {\n        return /\\S$/.test(m) ? \"\\x3cem\\x3e\" + m + \"\\x3c/em\\x3e\" : wm;\n      }));\n      return text = globals.converter._dispatch(\"italicsAndBold.after\", text, options, globals);\n    });\n    showdown.subParser(\"lists\", function(text, options, globals) {\n      function processListItems(listStr, trimTrailing) {\n        globals.gListLevel++;\n        listStr = listStr.replace(/\\n{2,}$/, \"\\n\");\n        listStr += \"¨0\";\n        var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm, isParagraphed = /\\n[ \\t]*\\n(?!¨0)/.test(listStr);\n        options.disableForced4SpacesIndentedSublists && (rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0|\\2([*+-]|\\d+[.])[ \\t]+))/gm);\n        listStr = listStr.replace(rgx, function(wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n          checked = checked && \"\" !== checked.trim();\n          wholeMatch = showdown.subParser(\"outdent\")(m4, options, globals);\n          m2 = \"\";\n          taskbtn && options.tasklists && (m2 = ' class\\x3d\"task-list-item\" style\\x3d\"list-style-type: none;\"', wholeMatch = wholeMatch.replace(/^[ \\t]*\\[(x|X| )?]/m, function() {\n            var otp = '\\x3cinput type\\x3d\"checkbox\" disabled style\\x3d\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n            checked && (otp += \" checked\");\n            return otp + \"\\x3e\";\n          }));\n          wholeMatch = wholeMatch.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function(wm2) {\n            return \"¨A\" + wm2;\n          });\n          m1 || -1 < wholeMatch.search(/\\n{2,}/) ? (wholeMatch = showdown.subParser(\"githubCodeBlocks\")(wholeMatch, options, globals), wholeMatch = showdown.subParser(\"blockGamut\")(wholeMatch, options, globals)) : (wholeMatch = showdown.subParser(\"lists\")(wholeMatch, options, globals), wholeMatch = wholeMatch.replace(/\\n$/, \"\"), wholeMatch = showdown.subParser(\"hashHTMLBlocks\")(wholeMatch, options, globals), wholeMatch = wholeMatch.replace(/\\n\\n+/g, \"\\n\\n\"), wholeMatch = isParagraphed ? showdown.subParser(\"paragraphs\")(wholeMatch, \n          options, globals) : showdown.subParser(\"spanGamut\")(wholeMatch, options, globals));\n          wholeMatch = wholeMatch.replace(\"¨A\", \"\");\n          return \"\\x3cli\" + m2 + \"\\x3e\" + wholeMatch + \"\\x3c/li\\x3e\\n\";\n        });\n        listStr = listStr.replace(/¨0/g, \"\");\n        globals.gListLevel--;\n        trimTrailing && (listStr = listStr.replace(/\\s+$/, \"\"));\n        return listStr;\n      }\n      function styleStartNumber(list, listType) {\n        return \"ol\" === listType && (list = list.match(/^ *(\\d+)\\./)) && \"1\" !== list[1] ? ' start\\x3d\"' + list[1] + '\"' : \"\";\n      }\n      function parseConsecutiveLists(list, listType, trimTrailing) {\n        var olRgx = options.disableForced4SpacesIndentedSublists ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm, ulRgx = options.disableForced4SpacesIndentedSublists ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm, counterRxg = \"ul\" === listType ? olRgx : ulRgx, result = \"\";\n        if (-1 !== list.search(counterRxg)) {\n          (function parseCL(txt) {\n            var pos = txt.search(counterRxg), style = styleStartNumber(list, listType);\n            -1 !== pos ? (result += \"\\n\\n\\x3c\" + listType + style + \"\\x3e\\n\" + processListItems(txt.slice(0, pos), !!trimTrailing) + \"\\x3c/\" + listType + \"\\x3e\\n\", listType = \"ul\" === listType ? \"ol\" : \"ul\", counterRxg = \"ul\" === listType ? olRgx : ulRgx, parseCL(txt.slice(pos))) : result += \"\\n\\n\\x3c\" + listType + style + \"\\x3e\\n\" + processListItems(txt, !!trimTrailing) + \"\\x3c/\" + listType + \"\\x3e\\n\";\n          })(list);\n        } else {\n          var style = styleStartNumber(list, listType);\n          result = \"\\n\\n\\x3c\" + listType + style + \"\\x3e\\n\" + processListItems(list, !!trimTrailing) + \"\\x3c/\" + listType + \"\\x3e\\n\";\n        }\n        return result;\n      }\n      text = globals.converter._dispatch(\"lists.before\", text, options, globals);\n      text += \"¨0\";\n      text = globals.gListLevel ? text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm, function(wholeMatch, list, m2) {\n        wholeMatch = -1 < m2.search(/[*+-]/g) ? \"ul\" : \"ol\";\n        return parseConsecutiveLists(list, wholeMatch, !0);\n      }) : text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm, function(wholeMatch, m1, list, m3) {\n        wholeMatch = -1 < m3.search(/[*+-]/g) ? \"ul\" : \"ol\";\n        return parseConsecutiveLists(list, wholeMatch, !1);\n      });\n      text = text.replace(/¨0/, \"\");\n      return text = globals.converter._dispatch(\"lists.after\", text, options, globals);\n    });\n    showdown.subParser(\"metadata\", function(text, options, globals) {\n      function parseMetadataContents(content) {\n        globals.metadata.raw = content;\n        content = content.replace(/&/g, \"\\x26amp;\").replace(/\"/g, \"\\x26quot;\");\n        content = content.replace(/\\n {4}/g, \" \");\n        content.replace(/^([\\S ]+): +([\\s\\S]+?)$/gm, function(wm, key, value) {\n          globals.metadata.parsed[key] = value;\n          return \"\";\n        });\n      }\n      if (!options.metadata) {\n        return text;\n      }\n      text = globals.converter._dispatch(\"metadata.before\", text, options, globals);\n      text = text.replace(/^\\s*«««+(\\S*?)\\n([\\s\\S]+?)\\n»»»+\\n/, function(wholematch, format, content) {\n        parseMetadataContents(content);\n        return \"¨M\";\n      });\n      text = text.replace(/^\\s*---+(\\S*?)\\n([\\s\\S]+?)\\n---+\\n/, function(wholematch, format, content) {\n        format && (globals.metadata.format = format);\n        parseMetadataContents(content);\n        return \"¨M\";\n      });\n      text = text.replace(/¨M/g, \"\");\n      return text = globals.converter._dispatch(\"metadata.after\", text, options, globals);\n    });\n    showdown.subParser(\"outdent\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"outdent.before\", text, options, globals);\n      text = text.replace(/^(\\t|[ ]{1,4})/gm, \"¨0\");\n      text = text.replace(/¨0/g, \"\");\n      return text = globals.converter._dispatch(\"outdent.after\", text, options, globals);\n    });\n    showdown.subParser(\"paragraphs\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"paragraphs.before\", text, options, globals);\n      text = text.replace(/^\\n+/g, \"\");\n      text = text.replace(/\\n+$/g, \"\");\n      var grafs = text.split(/\\n{2,}/g);\n      text = [];\n      for (var end = grafs.length, i = 0; i < end; i++) {\n        var str = grafs[i];\n        0 <= str.search(/¨(K|G)(\\d+)\\1/g) ? text.push(str) : 0 <= str.search(/\\S/) && (str = showdown.subParser(\"spanGamut\")(str, options, globals), str = str.replace(/^([ \\t]*)/g, \"\\x3cp\\x3e\"), str += \"\\x3c/p\\x3e\", text.push(str));\n      }\n      end = text.length;\n      for (i = 0; i < end; i++) {\n        grafs = text[i];\n        for (str = !1; /¨(K|G)(\\d+)\\1/.test(grafs);) {\n          var blockText = RegExp.$2;\n          blockText = \"K\" === RegExp.$1 ? globals.gHtmlBlocks[blockText] : str ? showdown.subParser(\"encodeCode\")(globals.ghCodeBlocks[blockText].text, options, globals) : globals.ghCodeBlocks[blockText].codeblock;\n          blockText = blockText.replace(/\\$/g, \"$$$$\");\n          grafs = grafs.replace(/(\\n\\n)?¨(K|G)\\d+\\2(\\n\\n)?/, blockText);\n          /^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafs) && (str = !0);\n        }\n        text[i] = grafs;\n      }\n      text = text.join(\"\\n\");\n      text = text.replace(/^\\n+/g, \"\");\n      text = text.replace(/\\n+$/g, \"\");\n      return globals.converter._dispatch(\"paragraphs.after\", text, options, globals);\n    });\n    showdown.subParser(\"runExtension\", function(ext, text, options, globals) {\n      ext.filter ? text = ext.filter(text, globals.converter, options) : ext.regex && (options = ext.regex, options instanceof RegExp || (options = new RegExp(options, \"g\")), text = text.replace(options, ext.replace));\n      return text;\n    });\n    showdown.subParser(\"spanGamut\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"spanGamut.before\", text, options, globals);\n      text = showdown.subParser(\"codeSpans\")(text, options, globals);\n      text = showdown.subParser(\"escapeSpecialCharsWithinTagAttributes\")(text, options, globals);\n      text = showdown.subParser(\"encodeBackslashEscapes\")(text, options, globals);\n      text = showdown.subParser(\"images\")(text, options, globals);\n      text = showdown.subParser(\"anchors\")(text, options, globals);\n      text = showdown.subParser(\"autoLinks\")(text, options, globals);\n      text = showdown.subParser(\"simplifiedAutoLinks\")(text, options, globals);\n      text = showdown.subParser(\"emoji\")(text, options, globals);\n      text = showdown.subParser(\"underline\")(text, options, globals);\n      text = showdown.subParser(\"italicsAndBold\")(text, options, globals);\n      text = showdown.subParser(\"strikethrough\")(text, options, globals);\n      text = showdown.subParser(\"ellipsis\")(text, options, globals);\n      text = showdown.subParser(\"hashHTMLSpans\")(text, options, globals);\n      text = showdown.subParser(\"encodeAmpsAndAngles\")(text, options, globals);\n      options.simpleLineBreaks ? /\\n\\n¨K/.test(text) || (text = text.replace(/\\n+/g, \"\\x3cbr /\\x3e\\n\")) : text = text.replace(/  +\\n/g, \"\\x3cbr /\\x3e\\n\");\n      return text = globals.converter._dispatch(\"spanGamut.after\", text, options, globals);\n    });\n    showdown.subParser(\"strikethrough\", function(text, options, globals) {\n      options.strikethrough && (text = globals.converter._dispatch(\"strikethrough.before\", text, options, globals), text = text.replace(/(?:~){2}([\\s\\S]+?)(?:~){2}/g, function(wm, txt) {\n        wm = txt;\n        options.simplifiedAutoLink && (wm = showdown.subParser(\"simplifiedAutoLinks\")(wm, options, globals));\n        return \"\\x3cdel\\x3e\" + wm + \"\\x3c/del\\x3e\";\n      }), text = globals.converter._dispatch(\"strikethrough.after\", text, options, globals));\n      return text;\n    });\n    showdown.subParser(\"stripLinkDefinitions\", function(text, options, globals) {\n      text += \"¨0\";\n      var replaceFunc = function(wholeMatch, linkId, url, width, height, blankLines, title) {\n        linkId = linkId.toLowerCase();\n        if (2 > text.toLowerCase().split(linkId).length - 1) {\n          return wholeMatch;\n        }\n        url.match(/^data:.+?\\/.+?;base64,/) ? globals.gUrls[linkId] = url.replace(/\\s/g, \"\") : globals.gUrls[linkId] = showdown.subParser(\"encodeAmpsAndAngles\")(url, options, globals);\n        if (blankLines) {\n          return blankLines + title;\n        }\n        title && (globals.gTitles[linkId] = title.replace(/\"|'/g, \"\\x26quot;\"));\n        options.parseImgDimensions && width && height && (globals.gDimensions[linkId] = {width, height});\n        return \"\";\n      };\n      text = text.replace(/^ {0,3}\\[([^\\]]+)]:[ \\t]*\\n?[ \\t]*<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n\\n|(?=¨0)|(?=\\n\\[))/gm, replaceFunc);\n      text = text.replace(/^ {0,3}\\[([^\\]]+)]:[ \\t]*\\n?[ \\t]*<?([^>\\s]+)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=¨0))/gm, replaceFunc);\n      return text = text.replace(/¨0/, \"\");\n    });\n    showdown.subParser(\"tables\", function(text, options, globals) {\n      function parseStyles(sLine) {\n        return /^:[ \\t]*--*$/.test(sLine) ? ' style\\x3d\"text-align:left;\"' : /^--*[ \\t]*:[ \\t]*$/.test(sLine) ? ' style\\x3d\"text-align:right;\"' : /^:[ \\t]*--*[ \\t]*:$/.test(sLine) ? ' style\\x3d\"text-align:center;\"' : \"\";\n      }\n      function parseHeaders(header, style) {\n        var id = \"\";\n        header = header.trim();\n        if (options.tablesHeaderId || options.tableHeaderId) {\n          id = ' id\\x3d\"' + header.replace(/ /g, \"_\").toLowerCase() + '\"';\n        }\n        header = showdown.subParser(\"spanGamut\")(header, options, globals);\n        return \"\\x3cth\" + id + style + \"\\x3e\" + header + \"\\x3c/th\\x3e\\n\";\n      }\n      function parseCells(cell, style) {\n        cell = showdown.subParser(\"spanGamut\")(cell, options, globals);\n        return \"\\x3ctd\" + style + \"\\x3e\" + cell + \"\\x3c/td\\x3e\\n\";\n      }\n      function buildTable(headers, cells) {\n        for (var tb = \"\\x3ctable\\x3e\\n\\x3cthead\\x3e\\n\\x3ctr\\x3e\\n\", tblLgn = headers.length, i = 0; i < tblLgn; ++i) {\n          tb += headers[i];\n        }\n        tb += \"\\x3c/tr\\x3e\\n\\x3c/thead\\x3e\\n\\x3ctbody\\x3e\\n\";\n        for (i = 0; i < cells.length; ++i) {\n          tb += \"\\x3ctr\\x3e\\n\";\n          for (headers = 0; headers < tblLgn; ++headers) {\n            tb += cells[i][headers];\n          }\n          tb += \"\\x3c/tr\\x3e\\n\";\n        }\n        return tb + \"\\x3c/tbody\\x3e\\n\\x3c/table\\x3e\\n\";\n      }\n      function parseTable(rawTable) {\n        var i, tableLines = rawTable.split(\"\\n\");\n        for (i = 0; i < tableLines.length; ++i) {\n          /^ {0,3}\\|/.test(tableLines[i]) && (tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, \"\")), /\\|[ \\t]*$/.test(tableLines[i]) && (tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, \"\")), tableLines[i] = showdown.subParser(\"codeSpans\")(tableLines[i], options, globals);\n        }\n        var rawHeaders = tableLines[0].split(\"|\").map(function(s) {\n          return s.trim();\n        }), rawStyles = tableLines[1].split(\"|\").map(function(s) {\n          return s.trim();\n        }), rawCells = [], headers = [], styles = [], cells = [];\n        tableLines.shift();\n        tableLines.shift();\n        for (i = 0; i < tableLines.length; ++i) {\n          \"\" !== tableLines[i].trim() && rawCells.push(tableLines[i].split(\"|\").map(function(s) {\n            return s.trim();\n          }));\n        }\n        if (rawHeaders.length < rawStyles.length) {\n          return rawTable;\n        }\n        for (i = 0; i < rawStyles.length; ++i) {\n          styles.push(parseStyles(rawStyles[i]));\n        }\n        for (i = 0; i < rawHeaders.length; ++i) {\n          showdown.helper.isUndefined(styles[i]) && (styles[i] = \"\"), headers.push(parseHeaders(rawHeaders[i], styles[i]));\n        }\n        for (i = 0; i < rawCells.length; ++i) {\n          rawTable = [];\n          for (tableLines = 0; tableLines < headers.length; ++tableLines) {\n            showdown.helper.isUndefined(rawCells[i][tableLines]), rawTable.push(parseCells(rawCells[i][tableLines], styles[tableLines]));\n          }\n          cells.push(rawTable);\n        }\n        return buildTable(headers, cells);\n      }\n      if (!options.tables) {\n        return text;\n      }\n      text = globals.converter._dispatch(\"tables.before\", text, options, globals);\n      text = text.replace(/\\\\(\\|)/g, showdown.helper.escapeCharactersCallback);\n      text = text.replace(/^ {0,3}\\|?.+\\|.+\\n {0,3}\\|?[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[\\s\\S]+?(?:\\n\\n|¨0)/gm, parseTable);\n      text = text.replace(/^ {0,3}\\|.+\\|[ \\t]*\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n( {0,3}\\|.+\\|[ \\t]*\\n)*(?:\\n|¨0)/gm, parseTable);\n      return text = globals.converter._dispatch(\"tables.after\", text, options, globals);\n    });\n    showdown.subParser(\"underline\", function(text, options, globals) {\n      if (!options.underline) {\n        return text;\n      }\n      text = globals.converter._dispatch(\"underline.before\", text, options, globals);\n      options.literalMidWordUnderscores ? (text = text.replace(/\\b___(\\S[\\s\\S]*?)___\\b/g, function(wm, txt) {\n        return \"\\x3cu\\x3e\" + txt + \"\\x3c/u\\x3e\";\n      }), text = text.replace(/\\b__(\\S[\\s\\S]*?)__\\b/g, function(wm, txt) {\n        return \"\\x3cu\\x3e\" + txt + \"\\x3c/u\\x3e\";\n      })) : (text = text.replace(/___(\\S[\\s\\S]*?)___/g, function(wm, m) {\n        return /\\S$/.test(m) ? \"\\x3cu\\x3e\" + m + \"\\x3c/u\\x3e\" : wm;\n      }), text = text.replace(/__(\\S[\\s\\S]*?)__/g, function(wm, m) {\n        return /\\S$/.test(m) ? \"\\x3cu\\x3e\" + m + \"\\x3c/u\\x3e\" : wm;\n      }));\n      text = text.replace(/(_)/g, showdown.helper.escapeCharactersCallback);\n      return text = globals.converter._dispatch(\"underline.after\", text, options, globals);\n    });\n    showdown.subParser(\"unescapeSpecialChars\", function(text, options, globals) {\n      text = globals.converter._dispatch(\"unescapeSpecialChars.before\", text, options, globals);\n      text = text.replace(/¨E(\\d+)E/g, function(wholeMatch, m1) {\n        wholeMatch = parseInt(m1);\n        return String.fromCharCode(wholeMatch);\n      });\n      return text = globals.converter._dispatch(\"unescapeSpecialChars.after\", text, options, globals);\n    });\n    showdown.subParser(\"makeMarkdown.blockquote\", function(node, globals) {\n      var txt = \"\";\n      if (node.hasChildNodes()) {\n        node = node.childNodes;\n        for (var childrenLength = node.length, i = 0; i < childrenLength; ++i) {\n          var innerTxt = showdown.subParser(\"makeMarkdown.node\")(node[i], globals);\n          \"\" !== innerTxt && (txt += innerTxt);\n        }\n      }\n      txt = txt.trim();\n      return txt = \"\\x3e \" + txt.split(\"\\n\").join(\"\\n\\x3e \");\n    });\n    showdown.subParser(\"makeMarkdown.codeBlock\", function(node, globals) {\n      var lang = node.getAttribute(\"language\");\n      node = node.getAttribute(\"precodenum\");\n      return \"```\" + lang + \"\\n\" + globals.preList[node] + \"\\n```\";\n    });\n    showdown.subParser(\"makeMarkdown.codeSpan\", function(node) {\n      return \"`\" + node.innerHTML + \"`\";\n    });\n    showdown.subParser(\"makeMarkdown.emphasis\", function(node, globals) {\n      var txt = \"\";\n      if (node.hasChildNodes()) {\n        txt += \"*\";\n        node = node.childNodes;\n        for (var childrenLength = node.length, i = 0; i < childrenLength; ++i) {\n          txt += showdown.subParser(\"makeMarkdown.node\")(node[i], globals);\n        }\n        txt += \"*\";\n      }\n      return txt;\n    });\n    showdown.subParser(\"makeMarkdown.header\", function(node, globals, headerLevel) {\n      var headerMark = Array(headerLevel + 1).join(\"#\");\n      headerLevel = \"\";\n      if (node.hasChildNodes()) {\n        headerLevel = headerMark + \" \";\n        node = node.childNodes;\n        headerMark = node.length;\n        for (var i = 0; i < headerMark; ++i) {\n          headerLevel += showdown.subParser(\"makeMarkdown.node\")(node[i], globals);\n        }\n      }\n      return headerLevel;\n    });\n    showdown.subParser(\"makeMarkdown.hr\", function() {\n      return \"---\";\n    });\n    showdown.subParser(\"makeMarkdown.image\", function(node) {\n      var txt = \"\";\n      node.hasAttribute(\"src\") && (txt += \"![\" + node.getAttribute(\"alt\") + \"](\", txt += \"\\x3c\" + node.getAttribute(\"src\") + \"\\x3e\", node.hasAttribute(\"width\") && node.hasAttribute(\"height\") && (txt += \" \\x3d\" + node.getAttribute(\"width\") + \"x\" + node.getAttribute(\"height\")), node.hasAttribute(\"title\") && (txt += ' \"' + node.getAttribute(\"title\") + '\"'), txt += \")\");\n      return txt;\n    });\n    showdown.subParser(\"makeMarkdown.links\", function(node, globals) {\n      var txt = \"\";\n      if (node.hasChildNodes() && node.hasAttribute(\"href\")) {\n        var children = node.childNodes, childrenLength = children.length;\n        txt = \"[\";\n        for (var i = 0; i < childrenLength; ++i) {\n          txt += showdown.subParser(\"makeMarkdown.node\")(children[i], globals);\n        }\n        txt = txt + \"](\\x3c\" + (node.getAttribute(\"href\") + \"\\x3e\");\n        node.hasAttribute(\"title\") && (txt += ' \"' + node.getAttribute(\"title\") + '\"');\n        txt += \")\";\n      }\n      return txt;\n    });\n    showdown.subParser(\"makeMarkdown.list\", function(node, globals, type) {\n      var txt = \"\";\n      if (!node.hasChildNodes()) {\n        return \"\";\n      }\n      var listItems = node.childNodes, listItemsLenght = listItems.length;\n      node = node.getAttribute(\"start\") || 1;\n      for (var i = 0; i < listItemsLenght; ++i) {\n        \"undefined\" !== typeof listItems[i].tagName && \"li\" === listItems[i].tagName.toLowerCase() && (txt += (\"ol\" === type ? node.toString() + \". \" : \"- \") + showdown.subParser(\"makeMarkdown.listItem\")(listItems[i], globals), ++node);\n      }\n      return (txt + \"\\n\\x3c!-- --\\x3e\\n\").trim();\n    });\n    showdown.subParser(\"makeMarkdown.listItem\", function(node, globals) {\n      var listItemTxt = \"\";\n      node = node.childNodes;\n      for (var childrenLenght = node.length, i = 0; i < childrenLenght; ++i) {\n        listItemTxt += showdown.subParser(\"makeMarkdown.node\")(node[i], globals);\n      }\n      return listItemTxt = /\\n$/.test(listItemTxt) ? listItemTxt.split(\"\\n\").join(\"\\n    \").replace(/^ {4}$/gm, \"\").replace(/\\n\\n+/g, \"\\n\\n\") : listItemTxt + \"\\n\";\n    });\n    showdown.subParser(\"makeMarkdown.node\", function(node, globals, spansOnly) {\n      spansOnly = spansOnly || !1;\n      var txt = \"\";\n      if (3 === node.nodeType) {\n        return showdown.subParser(\"makeMarkdown.txt\")(node, globals);\n      }\n      if (8 === node.nodeType) {\n        return \"\\x3c!--\" + node.data + \"--\\x3e\\n\\n\";\n      }\n      if (1 !== node.nodeType) {\n        return \"\";\n      }\n      switch(node.tagName.toLowerCase()) {\n        case \"h1\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.header\")(node, globals, 1) + \"\\n\\n\");\n          break;\n        case \"h2\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.header\")(node, globals, 2) + \"\\n\\n\");\n          break;\n        case \"h3\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.header\")(node, globals, 3) + \"\\n\\n\");\n          break;\n        case \"h4\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.header\")(node, globals, 4) + \"\\n\\n\");\n          break;\n        case \"h5\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.header\")(node, globals, 5) + \"\\n\\n\");\n          break;\n        case \"h6\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.header\")(node, globals, 6) + \"\\n\\n\");\n          break;\n        case \"p\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.paragraph\")(node, globals) + \"\\n\\n\");\n          break;\n        case \"blockquote\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.blockquote\")(node, globals) + \"\\n\\n\");\n          break;\n        case \"hr\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.hr\")(node, globals) + \"\\n\\n\");\n          break;\n        case \"ol\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.list\")(node, globals, \"ol\") + \"\\n\\n\");\n          break;\n        case \"ul\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.list\")(node, globals, \"ul\") + \"\\n\\n\");\n          break;\n        case \"precode\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.codeBlock\")(node, globals) + \"\\n\\n\");\n          break;\n        case \"pre\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.pre\")(node, globals) + \"\\n\\n\");\n          break;\n        case \"table\":\n          spansOnly || (txt = showdown.subParser(\"makeMarkdown.table\")(node, globals) + \"\\n\\n\");\n          break;\n        case \"code\":\n          txt = showdown.subParser(\"makeMarkdown.codeSpan\")(node, globals);\n          break;\n        case \"em\":\n        case \"i\":\n          txt = showdown.subParser(\"makeMarkdown.emphasis\")(node, globals);\n          break;\n        case \"strong\":\n        case \"b\":\n          txt = showdown.subParser(\"makeMarkdown.strong\")(node, globals);\n          break;\n        case \"del\":\n          txt = showdown.subParser(\"makeMarkdown.strikethrough\")(node, globals);\n          break;\n        case \"a\":\n          txt = showdown.subParser(\"makeMarkdown.links\")(node, globals);\n          break;\n        case \"img\":\n          txt = showdown.subParser(\"makeMarkdown.image\")(node, globals);\n          break;\n        default:\n          txt = node.outerHTML + \"\\n\\n\";\n      }\n      return txt;\n    });\n    showdown.subParser(\"makeMarkdown.paragraph\", function(node, globals) {\n      var txt = \"\";\n      if (node.hasChildNodes()) {\n        node = node.childNodes;\n        for (var childrenLength = node.length, i = 0; i < childrenLength; ++i) {\n          txt += showdown.subParser(\"makeMarkdown.node\")(node[i], globals);\n        }\n      }\n      return txt = txt.trim();\n    });\n    showdown.subParser(\"makeMarkdown.pre\", function(node, globals) {\n      node = node.getAttribute(\"prenum\");\n      return \"\\x3cpre\\x3e\" + globals.preList[node] + \"\\x3c/pre\\x3e\";\n    });\n    showdown.subParser(\"makeMarkdown.strikethrough\", function(node, globals) {\n      var txt = \"\";\n      if (node.hasChildNodes()) {\n        txt += \"~~\";\n        node = node.childNodes;\n        for (var childrenLength = node.length, i = 0; i < childrenLength; ++i) {\n          txt += showdown.subParser(\"makeMarkdown.node\")(node[i], globals);\n        }\n        txt += \"~~\";\n      }\n      return txt;\n    });\n    showdown.subParser(\"makeMarkdown.strong\", function(node, globals) {\n      var txt = \"\";\n      if (node.hasChildNodes()) {\n        txt += \"**\";\n        node = node.childNodes;\n        for (var childrenLength = node.length, i = 0; i < childrenLength; ++i) {\n          txt += showdown.subParser(\"makeMarkdown.node\")(node[i], globals);\n        }\n        txt += \"**\";\n      }\n      return txt;\n    });\n    showdown.subParser(\"makeMarkdown.table\", function(node, globals) {\n      var txt = \"\", tableArray = [[], []], headings = node.querySelectorAll(\"thead\\x3etr\\x3eth\"), rows = node.querySelectorAll(\"tbody\\x3etr\");\n      for (node = 0; node < headings.length; ++node) {\n        var ii = showdown.subParser(\"makeMarkdown.tableCell\")(headings[node], globals);\n        var allign = \"---\";\n        if (headings[node].hasAttribute(\"style\")) {\n          switch(headings[node].getAttribute(\"style\").toLowerCase().replace(/\\s/g, \"\")) {\n            case \"text-align:left;\":\n              allign = \":---\";\n              break;\n            case \"text-align:right;\":\n              allign = \"---:\";\n              break;\n            case \"text-align:center;\":\n              allign = \":---:\";\n          }\n        }\n        tableArray[0][node] = ii.trim();\n        tableArray[1][node] = allign;\n      }\n      for (node = 0; node < rows.length; ++node) {\n        allign = tableArray.push([]) - 1;\n        var cols = rows[node].getElementsByTagName(\"td\");\n        for (ii = 0; ii < headings.length; ++ii) {\n          var cellContent = \" \";\n          \"undefined\" !== typeof cols[ii] && (cellContent = showdown.subParser(\"makeMarkdown.tableCell\")(cols[ii], globals));\n          tableArray[allign].push(cellContent);\n        }\n      }\n      globals = 3;\n      for (node = 0; node < tableArray.length; ++node) {\n        for (ii = 0; ii < tableArray[node].length; ++ii) {\n          headings = tableArray[node][ii].length, headings > globals && (globals = headings);\n        }\n      }\n      for (node = 0; node < tableArray.length; ++node) {\n        for (ii = 0; ii < tableArray[node].length; ++ii) {\n          1 === node ? \":\" === tableArray[node][ii].slice(-1) ? tableArray[node][ii] = showdown.helper.padEnd(tableArray[node][ii].slice(-1), globals - 1, \"-\") + \":\" : tableArray[node][ii] = showdown.helper.padEnd(tableArray[node][ii], globals, \"-\") : tableArray[node][ii] = showdown.helper.padEnd(tableArray[node][ii], globals);\n        }\n        txt += \"| \" + tableArray[node].join(\" | \") + \" |\\n\";\n      }\n      return txt.trim();\n    });\n    showdown.subParser(\"makeMarkdown.tableCell\", function(node, globals) {\n      var txt = \"\";\n      if (!node.hasChildNodes()) {\n        return \"\";\n      }\n      node = node.childNodes;\n      for (var childrenLength = node.length, i = 0; i < childrenLength; ++i) {\n        txt += showdown.subParser(\"makeMarkdown.node\")(node[i], globals, !0);\n      }\n      return txt.trim();\n    });\n    showdown.subParser(\"makeMarkdown.txt\", function(node) {\n      node = node.nodeValue;\n      node = node.replace(/ +/g, \" \");\n      node = node.replace(/¨NBSP;/g, \" \");\n      node = showdown.helper.unescapeHTMLEntities(node);\n      node = node.replace(/([*_~|`])/g, \"\\\\$1\");\n      node = node.replace(/^(\\s*)>/g, \"\\\\$1\\x3e\");\n      node = node.replace(/^#/gm, \"\\\\#\");\n      node = node.replace(/^(\\s*)([-=]{3,})(\\s*)$/, \"$1\\\\$2$3\");\n      node = node.replace(/^( {0,3}\\d+)\\./gm, \"$1\\\\.\");\n      node = node.replace(/^( {0,3})([+-])/gm, \"$1\\\\$2\");\n      node = node.replace(/]([\\s]*)\\(/g, \"\\\\]$1\\\\(\");\n      return node = node.replace(/^ {0,3}\\[([\\S \\t]*?)]:/gm, \"\\\\[$1]:\");\n    });\n    \"function\" === typeof define && define.amd ? define(function() {\n      return showdown;\n    }) : \"undefined\" !== typeof module && module.exports ? module.exports = showdown : this.showdown = showdown;\n  }).call(this);\n};\n","~:source","shadow$provide[\"module$node_modules$showdown$dist$showdown\"] = function(global,require,module,exports) {\n;/*! showdown v 2.1.0 - 21-04-2022 */\r\n(function(){\r\n/**\n * Created by Tivie on 13-07-2015.\n */\n\nfunction getDefaultOpts (simple) {\n  'use strict';\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      defaultValue: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      defaultValue: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      defaultValue: false,\n      describe: 'Add a prefix to the generated header ids. Passing a string will prefix that string to the header id. Setting to true will add a generic \\'section-\\' prefix',\n      type: 'string'\n    },\n    rawPrefixHeaderId: {\n      defaultValue: false,\n      describe: 'Setting this option to true will prevent showdown from modifying the prefix. This might result in malformed IDs (if, for instance, the \" char is used in the prefix)',\n      type: 'boolean'\n    },\n    ghCompatibleHeaderId: {\n      defaultValue: false,\n      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\n      type: 'boolean'\n    },\n    rawHeaderId: {\n      defaultValue: false,\n      describe: 'Remove only spaces, \\' and \" from generated header ids (including prefixes), replacing them with dashes (-). WARNING: This might result in malformed ids',\n      type: 'boolean'\n    },\n    headerLevelStart: {\n      defaultValue: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      defaultValue: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    excludeTrailingPunctuationFromURLs: {\n      defaultValue: false,\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      defaultValue: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    literalMidWordAsterisks: {\n      defaultValue: false,\n      describe: 'Parse midword asterisks as literal asterisks',\n      type: 'boolean'\n    },\n    strikethrough: {\n      defaultValue: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      defaultValue: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      defaultValue: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      defaultValue: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      defaultValue: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      defaultValue: false,\n      describe: 'Tries to smartly fix indentation in es6 strings',\n      type: 'boolean'\n    },\n    disableForced4SpacesIndentedSublists: {\n      defaultValue: false,\n      describe: 'Disables the requirement of indenting nested sublists by 4 spaces',\n      type: 'boolean'\n    },\n    simpleLineBreaks: {\n      defaultValue: false,\n      describe: 'Parses simple line breaks as <br> (GFM Style)',\n      type: 'boolean'\n    },\n    requireSpaceBeforeHeadingText: {\n      defaultValue: false,\n      describe: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\n      type: 'boolean'\n    },\n    ghMentions: {\n      defaultValue: false,\n      describe: 'Enables github @mentions',\n      type: 'boolean'\n    },\n    ghMentionsLink: {\n      defaultValue: 'https://github.com/{u}',\n      describe: 'Changes the link generated by @mentions. Only applies if ghMentions option is enabled.',\n      type: 'string'\n    },\n    encodeEmails: {\n      defaultValue: true,\n      describe: 'Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities',\n      type: 'boolean'\n    },\n    openLinksInNewWindow: {\n      defaultValue: false,\n      describe: 'Open all links in new windows',\n      type: 'boolean'\n    },\n    backslashEscapesHTMLTags: {\n      defaultValue: false,\n      describe: 'Support for HTML Tag escaping. ex: \\<div>foo\\</div>',\n      type: 'boolean'\n    },\n    emoji: {\n      defaultValue: false,\n      describe: 'Enable emoji support. Ex: `this is a :smile: emoji`',\n      type: 'boolean'\n    },\n    underline: {\n      defaultValue: false,\n      describe: 'Enable support for underline. Syntax is double or triple underscores: `__underline word__`. With this option enabled, underscores no longer parses into `<em>` and `<strong>`',\n      type: 'boolean'\n    },\n    ellipsis: {\n      defaultValue: true,\n      describe: 'Replaces three dots with the ellipsis unicode character',\n      type: 'boolean'\n    },\n    completeHTMLDocument: {\n      defaultValue: false,\n      describe: 'Outputs a complete html document, including `<html>`, `<head>` and `<body>` tags',\n      type: 'boolean'\n    },\n    metadata: {\n      defaultValue: false,\n      describe: 'Enable support for document metadata (defined at the top of the document between `«««` and `»»»` or between `---` and `---`).',\n      type: 'boolean'\n    },\n    splitAdjacentBlockquotes: {\n      defaultValue: false,\n      describe: 'Split adjacent blockquote blocks',\n      type: 'boolean'\n    }\n  };\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions));\n  }\n  var ret = {};\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].defaultValue;\n    }\n  }\n  return ret;\n}\n\nfunction allOptionsOn () {\n  'use strict';\n  var options = getDefaultOpts(true),\n      ret = {};\n  for (var opt in options) {\n    if (options.hasOwnProperty(opt)) {\n      ret[opt] = true;\n    }\n  }\n  return ret;\n}\n\r\n/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n    parsers = {},\n    extensions = {},\n    globalOptions = getDefaultOpts(true),\n    setFlavor = 'vanilla',\n    flavor = {\n      github: {\n        omitExtraWLInCodeBlocks:              true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        disableForced4SpacesIndentedSublists: true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghCompatibleHeaderId:                 true,\n        ghMentions:                           true,\n        backslashEscapesHTMLTags:             true,\n        emoji:                                true,\n        splitAdjacentBlockquotes:             true\n      },\n      original: {\n        noHeaderId:                           true,\n        ghCodeBlocks:                         false\n      },\n      ghost: {\n        omitExtraWLInCodeBlocks:              true,\n        parseImgDimensions:                   true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        smoothLivePreview:                    true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghMentions:                           false,\n        encodeEmails:                         true\n      },\n      vanilla: getDefaultOpts(true),\n      allOn: allOptionsOn()\n    };\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {};\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {};\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict';\n  globalOptions[key] = value;\n  return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict';\n  return globalOptions[key];\n};\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict';\n  return globalOptions;\n};\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict';\n  globalOptions = getDefaultOpts(true);\n};\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict';\n  if (!flavor.hasOwnProperty(name)) {\n    throw Error(name + ' flavor was not found');\n  }\n  showdown.resetOptions();\n  var preset = flavor[name];\n  setFlavor = name;\n  for (var option in preset) {\n    if (preset.hasOwnProperty(option)) {\n      globalOptions[option] = preset[option];\n    }\n  }\n};\n\n/**\n * Get the currently set flavor\n * @returns {string}\n */\nshowdown.getFlavor = function () {\n  'use strict';\n  return setFlavor;\n};\n\n/**\n * Get the options of a specified flavor. Returns undefined if the flavor was not found\n * @param {string} name Name of the flavor\n * @returns {{}|undefined}\n */\nshowdown.getFlavorOptions = function (name) {\n  'use strict';\n  if (flavor.hasOwnProperty(name)) {\n    return flavor[name];\n  }\n};\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict';\n  return getDefaultOpts(simple);\n};\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict';\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func;\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name];\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!');\n      }\n    }\n  }\n};\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|object[]|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict';\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string');\n  }\n\n  name = showdown.helper.stdExtName(name);\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!');\n    }\n    return extensions[name];\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExtension = validate(ext, name);\n\n    if (validExtension.valid) {\n      extensions[name] = ext;\n    } else {\n      throw Error(validExtension.error);\n    }\n  }\n};\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict';\n  return extensions;\n};\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict';\n  delete extensions[name];\n};\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict';\n  extensions = {};\n};\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate (extension, name) {\n  'use strict';\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n      ret = {\n        valid: true,\n        error: ''\n      };\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension];\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n        ext = extension[i];\n    if (typeof ext !== 'object') {\n      ret.valid = false;\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n      return ret;\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false;\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n      return ret;\n    }\n\n    var type = ext.type = ext.type.toLowerCase();\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang';\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output';\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false;\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n      return ret;\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false;\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n        return ret;\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false;\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n        return ret;\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n        return ret;\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false;\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n            return ret;\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n        return ret;\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g');\n      }\n      if (!(ext.regex instanceof RegExp)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n        return ret;\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n        return ret;\n      }\n    }\n  }\n  return ret;\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict';\n\n  var validateExtension = validate(ext, null);\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error);\n    return false;\n  }\n  return true;\n};\n\r\n/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {};\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function (a) {\n  'use strict';\n  return (typeof a === 'string' || a instanceof String);\n};\n\n/**\n * Check if var is a function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function (a) {\n  'use strict';\n  var getType = {};\n  return a && getType.toString.call(a) === '[object Function]';\n};\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function (a) {\n  'use strict';\n  return Array.isArray(a);\n};\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function (value) {\n  'use strict';\n  return typeof value === 'undefined';\n};\n\n/**\n * ForEach helper function\n * Iterates over Arrays and Objects (own properties only)\n * @static\n * @param {*} obj\n * @param {function} callback Accepts 3 params: 1. value, 2. key, 3. the original array/object\n */\nshowdown.helper.forEach = function (obj, callback) {\n  'use strict';\n  // check if obj is defined\n  if (showdown.helper.isUndefined(obj)) {\n    throw new Error('obj param is required');\n  }\n\n  if (showdown.helper.isUndefined(callback)) {\n    throw new Error('callback param is required');\n  }\n\n  if (!showdown.helper.isFunction(callback)) {\n    throw new Error('callback param must be a function/closure');\n  }\n\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback);\n  } else if (showdown.helper.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj);\n    }\n  } else if (typeof (obj) === 'object') {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        callback(obj[prop], prop, obj);\n      }\n    }\n  } else {\n    throw new Error('obj does not seem to be an array or an iterable object');\n  }\n};\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict';\n  return s.replace(/[_?*+\\/\\\\.^-]/g, '').replace(/\\s/g, '').toLowerCase();\n};\n\nfunction escapeCharactersCallback (wholeMatch, m1) {\n  'use strict';\n  var charCodeToEscape = m1.charCodeAt(0);\n  return '¨E' + charCodeToEscape + 'E';\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function (text, charsToEscape, afterBackslash) {\n  'use strict';\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString;\n  }\n\n  var regex = new RegExp(regexString, 'g');\n  text = text.replace(regex, escapeCharactersCallback);\n\n  return text;\n};\n\n/**\n * Unescape HTML entities\n * @param txt\n * @returns {string}\n */\nshowdown.helper.unescapeHTMLEntities = function (txt) {\n  'use strict';\n\n  return txt\n    .replace(/&quot;/g, '\"')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&amp;/g, '&');\n};\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict';\n  var f = flags || '',\n      g = f.indexOf('g') > -1,\n      x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n      l = new RegExp(left, f.replace(/g/g, '')),\n      pos = [],\n      t, s, m, start, end;\n\n  do {\n    t = 0;\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex;\n          start = s - m[0].length;\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length;\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          };\n          pos.push(obj);\n          if (!g) {\n            return pos;\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s));\n\n  return pos;\n};\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict';\n\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\n      results = [];\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ]);\n  }\n  return results;\n};\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict';\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement;\n    replacement = function () {\n      return repStr;\n    };\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n      finalStr = str,\n      lng = matchPos.length;\n\n  if (lng > 0) {\n    var bits = [];\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      );\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n    }\n    finalStr = bits.join('');\n  }\n  return finalStr;\n};\n\n/**\n * Returns the index within the passed String object of the first occurrence of the specified regex,\n * starting the search at fromIndex. Returns -1 if the value is not found.\n *\n * @param {string} str string to search\n * @param {RegExp} regex Regular expression to search\n * @param {int} [fromIndex = 0] Index to start the search\n * @returns {Number}\n * @throws InvalidArgumentError\n */\nshowdown.helper.regexIndexOf = function (str, regex, fromIndex) {\n  'use strict';\n  if (!showdown.helper.isString(str)) {\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\n  }\n  if (regex instanceof RegExp === false) {\n    throw 'InvalidArgumentError: second parameter of showdown.helper.regexIndexOf function must be an instance of RegExp';\n  }\n  var indexOf = str.substring(fromIndex || 0).search(regex);\n  return (indexOf >= 0) ? (indexOf + (fromIndex || 0)) : indexOf;\n};\n\n/**\n * Splits the passed string object at the defined index, and returns an array composed of the two substrings\n * @param {string} str string to split\n * @param {int} index index to split string at\n * @returns {[string,string]}\n * @throws InvalidArgumentError\n */\nshowdown.helper.splitAtIndex = function (str, index) {\n  'use strict';\n  if (!showdown.helper.isString(str)) {\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\n  }\n  return [str.substring(0, index), str.substring(index)];\n};\n\n/**\n * Obfuscate an e-mail address through the use of Character Entities,\n * transforming ASCII characters into their equivalent decimal or hex entities.\n *\n * Since it has a random component, subsequent calls to this function produce different results\n *\n * @param {string} mail\n * @returns {string}\n */\nshowdown.helper.encodeEmailAddress = function (mail) {\n  'use strict';\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';';\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n    },\n    function (ch) {\n      return ch;\n    }\n  ];\n\n  mail = mail.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch);\n    } else {\n      var r = Math.random();\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      );\n    }\n    return ch;\n  });\n\n  return mail;\n};\n\n/**\n *\n * @param str\n * @param targetLength\n * @param padString\n * @returns {string}\n */\nshowdown.helper.padEnd = function padEnd (str, targetLength, padString) {\n  'use strict';\n  /*jshint bitwise: false*/\n  // eslint-disable-next-line space-infix-ops\n  targetLength = targetLength>>0; //floor if number or convert non-number to 0;\n  /*jshint bitwise: true*/\n  padString = String(padString || ' ');\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n    }\n    return String(str) + padString.slice(0,targetLength);\n  }\n};\n\n/**\n * POLYFILLS\n */\n// use this instead of builtin is undefined for IE8 compatibility\nif (typeof (console) === 'undefined') {\n  console = {\n    warn: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    log: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    error: function (msg) {\n      'use strict';\n      throw msg;\n    }\n  };\n}\n\n/**\n * Common regexes.\n * We declare some common regexes to improve performance\n */\nshowdown.helper.regexes = {\n  asteriskDashAndColon: /([*_:~])/g\n};\n\n/**\n * EMOJIS LIST\n */\nshowdown.helper.emojis = {\n  '+1':'\\ud83d\\udc4d',\n  '-1':'\\ud83d\\udc4e',\n  '100':'\\ud83d\\udcaf',\n  '1234':'\\ud83d\\udd22',\n  '1st_place_medal':'\\ud83e\\udd47',\n  '2nd_place_medal':'\\ud83e\\udd48',\n  '3rd_place_medal':'\\ud83e\\udd49',\n  '8ball':'\\ud83c\\udfb1',\n  'a':'\\ud83c\\udd70\\ufe0f',\n  'ab':'\\ud83c\\udd8e',\n  'abc':'\\ud83d\\udd24',\n  'abcd':'\\ud83d\\udd21',\n  'accept':'\\ud83c\\ude51',\n  'aerial_tramway':'\\ud83d\\udea1',\n  'airplane':'\\u2708\\ufe0f',\n  'alarm_clock':'\\u23f0',\n  'alembic':'\\u2697\\ufe0f',\n  'alien':'\\ud83d\\udc7d',\n  'ambulance':'\\ud83d\\ude91',\n  'amphora':'\\ud83c\\udffa',\n  'anchor':'\\u2693\\ufe0f',\n  'angel':'\\ud83d\\udc7c',\n  'anger':'\\ud83d\\udca2',\n  'angry':'\\ud83d\\ude20',\n  'anguished':'\\ud83d\\ude27',\n  'ant':'\\ud83d\\udc1c',\n  'apple':'\\ud83c\\udf4e',\n  'aquarius':'\\u2652\\ufe0f',\n  'aries':'\\u2648\\ufe0f',\n  'arrow_backward':'\\u25c0\\ufe0f',\n  'arrow_double_down':'\\u23ec',\n  'arrow_double_up':'\\u23eb',\n  'arrow_down':'\\u2b07\\ufe0f',\n  'arrow_down_small':'\\ud83d\\udd3d',\n  'arrow_forward':'\\u25b6\\ufe0f',\n  'arrow_heading_down':'\\u2935\\ufe0f',\n  'arrow_heading_up':'\\u2934\\ufe0f',\n  'arrow_left':'\\u2b05\\ufe0f',\n  'arrow_lower_left':'\\u2199\\ufe0f',\n  'arrow_lower_right':'\\u2198\\ufe0f',\n  'arrow_right':'\\u27a1\\ufe0f',\n  'arrow_right_hook':'\\u21aa\\ufe0f',\n  'arrow_up':'\\u2b06\\ufe0f',\n  'arrow_up_down':'\\u2195\\ufe0f',\n  'arrow_up_small':'\\ud83d\\udd3c',\n  'arrow_upper_left':'\\u2196\\ufe0f',\n  'arrow_upper_right':'\\u2197\\ufe0f',\n  'arrows_clockwise':'\\ud83d\\udd03',\n  'arrows_counterclockwise':'\\ud83d\\udd04',\n  'art':'\\ud83c\\udfa8',\n  'articulated_lorry':'\\ud83d\\ude9b',\n  'artificial_satellite':'\\ud83d\\udef0',\n  'astonished':'\\ud83d\\ude32',\n  'athletic_shoe':'\\ud83d\\udc5f',\n  'atm':'\\ud83c\\udfe7',\n  'atom_symbol':'\\u269b\\ufe0f',\n  'avocado':'\\ud83e\\udd51',\n  'b':'\\ud83c\\udd71\\ufe0f',\n  'baby':'\\ud83d\\udc76',\n  'baby_bottle':'\\ud83c\\udf7c',\n  'baby_chick':'\\ud83d\\udc24',\n  'baby_symbol':'\\ud83d\\udebc',\n  'back':'\\ud83d\\udd19',\n  'bacon':'\\ud83e\\udd53',\n  'badminton':'\\ud83c\\udff8',\n  'baggage_claim':'\\ud83d\\udec4',\n  'baguette_bread':'\\ud83e\\udd56',\n  'balance_scale':'\\u2696\\ufe0f',\n  'balloon':'\\ud83c\\udf88',\n  'ballot_box':'\\ud83d\\uddf3',\n  'ballot_box_with_check':'\\u2611\\ufe0f',\n  'bamboo':'\\ud83c\\udf8d',\n  'banana':'\\ud83c\\udf4c',\n  'bangbang':'\\u203c\\ufe0f',\n  'bank':'\\ud83c\\udfe6',\n  'bar_chart':'\\ud83d\\udcca',\n  'barber':'\\ud83d\\udc88',\n  'baseball':'\\u26be\\ufe0f',\n  'basketball':'\\ud83c\\udfc0',\n  'basketball_man':'\\u26f9\\ufe0f',\n  'basketball_woman':'\\u26f9\\ufe0f&zwj;\\u2640\\ufe0f',\n  'bat':'\\ud83e\\udd87',\n  'bath':'\\ud83d\\udec0',\n  'bathtub':'\\ud83d\\udec1',\n  'battery':'\\ud83d\\udd0b',\n  'beach_umbrella':'\\ud83c\\udfd6',\n  'bear':'\\ud83d\\udc3b',\n  'bed':'\\ud83d\\udecf',\n  'bee':'\\ud83d\\udc1d',\n  'beer':'\\ud83c\\udf7a',\n  'beers':'\\ud83c\\udf7b',\n  'beetle':'\\ud83d\\udc1e',\n  'beginner':'\\ud83d\\udd30',\n  'bell':'\\ud83d\\udd14',\n  'bellhop_bell':'\\ud83d\\udece',\n  'bento':'\\ud83c\\udf71',\n  'biking_man':'\\ud83d\\udeb4',\n  'bike':'\\ud83d\\udeb2',\n  'biking_woman':'\\ud83d\\udeb4&zwj;\\u2640\\ufe0f',\n  'bikini':'\\ud83d\\udc59',\n  'biohazard':'\\u2623\\ufe0f',\n  'bird':'\\ud83d\\udc26',\n  'birthday':'\\ud83c\\udf82',\n  'black_circle':'\\u26ab\\ufe0f',\n  'black_flag':'\\ud83c\\udff4',\n  'black_heart':'\\ud83d\\udda4',\n  'black_joker':'\\ud83c\\udccf',\n  'black_large_square':'\\u2b1b\\ufe0f',\n  'black_medium_small_square':'\\u25fe\\ufe0f',\n  'black_medium_square':'\\u25fc\\ufe0f',\n  'black_nib':'\\u2712\\ufe0f',\n  'black_small_square':'\\u25aa\\ufe0f',\n  'black_square_button':'\\ud83d\\udd32',\n  'blonde_man':'\\ud83d\\udc71',\n  'blonde_woman':'\\ud83d\\udc71&zwj;\\u2640\\ufe0f',\n  'blossom':'\\ud83c\\udf3c',\n  'blowfish':'\\ud83d\\udc21',\n  'blue_book':'\\ud83d\\udcd8',\n  'blue_car':'\\ud83d\\ude99',\n  'blue_heart':'\\ud83d\\udc99',\n  'blush':'\\ud83d\\ude0a',\n  'boar':'\\ud83d\\udc17',\n  'boat':'\\u26f5\\ufe0f',\n  'bomb':'\\ud83d\\udca3',\n  'book':'\\ud83d\\udcd6',\n  'bookmark':'\\ud83d\\udd16',\n  'bookmark_tabs':'\\ud83d\\udcd1',\n  'books':'\\ud83d\\udcda',\n  'boom':'\\ud83d\\udca5',\n  'boot':'\\ud83d\\udc62',\n  'bouquet':'\\ud83d\\udc90',\n  'bowing_man':'\\ud83d\\ude47',\n  'bow_and_arrow':'\\ud83c\\udff9',\n  'bowing_woman':'\\ud83d\\ude47&zwj;\\u2640\\ufe0f',\n  'bowling':'\\ud83c\\udfb3',\n  'boxing_glove':'\\ud83e\\udd4a',\n  'boy':'\\ud83d\\udc66',\n  'bread':'\\ud83c\\udf5e',\n  'bride_with_veil':'\\ud83d\\udc70',\n  'bridge_at_night':'\\ud83c\\udf09',\n  'briefcase':'\\ud83d\\udcbc',\n  'broken_heart':'\\ud83d\\udc94',\n  'bug':'\\ud83d\\udc1b',\n  'building_construction':'\\ud83c\\udfd7',\n  'bulb':'\\ud83d\\udca1',\n  'bullettrain_front':'\\ud83d\\ude85',\n  'bullettrain_side':'\\ud83d\\ude84',\n  'burrito':'\\ud83c\\udf2f',\n  'bus':'\\ud83d\\ude8c',\n  'business_suit_levitating':'\\ud83d\\udd74',\n  'busstop':'\\ud83d\\ude8f',\n  'bust_in_silhouette':'\\ud83d\\udc64',\n  'busts_in_silhouette':'\\ud83d\\udc65',\n  'butterfly':'\\ud83e\\udd8b',\n  'cactus':'\\ud83c\\udf35',\n  'cake':'\\ud83c\\udf70',\n  'calendar':'\\ud83d\\udcc6',\n  'call_me_hand':'\\ud83e\\udd19',\n  'calling':'\\ud83d\\udcf2',\n  'camel':'\\ud83d\\udc2b',\n  'camera':'\\ud83d\\udcf7',\n  'camera_flash':'\\ud83d\\udcf8',\n  'camping':'\\ud83c\\udfd5',\n  'cancer':'\\u264b\\ufe0f',\n  'candle':'\\ud83d\\udd6f',\n  'candy':'\\ud83c\\udf6c',\n  'canoe':'\\ud83d\\udef6',\n  'capital_abcd':'\\ud83d\\udd20',\n  'capricorn':'\\u2651\\ufe0f',\n  'car':'\\ud83d\\ude97',\n  'card_file_box':'\\ud83d\\uddc3',\n  'card_index':'\\ud83d\\udcc7',\n  'card_index_dividers':'\\ud83d\\uddc2',\n  'carousel_horse':'\\ud83c\\udfa0',\n  'carrot':'\\ud83e\\udd55',\n  'cat':'\\ud83d\\udc31',\n  'cat2':'\\ud83d\\udc08',\n  'cd':'\\ud83d\\udcbf',\n  'chains':'\\u26d3',\n  'champagne':'\\ud83c\\udf7e',\n  'chart':'\\ud83d\\udcb9',\n  'chart_with_downwards_trend':'\\ud83d\\udcc9',\n  'chart_with_upwards_trend':'\\ud83d\\udcc8',\n  'checkered_flag':'\\ud83c\\udfc1',\n  'cheese':'\\ud83e\\uddc0',\n  'cherries':'\\ud83c\\udf52',\n  'cherry_blossom':'\\ud83c\\udf38',\n  'chestnut':'\\ud83c\\udf30',\n  'chicken':'\\ud83d\\udc14',\n  'children_crossing':'\\ud83d\\udeb8',\n  'chipmunk':'\\ud83d\\udc3f',\n  'chocolate_bar':'\\ud83c\\udf6b',\n  'christmas_tree':'\\ud83c\\udf84',\n  'church':'\\u26ea\\ufe0f',\n  'cinema':'\\ud83c\\udfa6',\n  'circus_tent':'\\ud83c\\udfaa',\n  'city_sunrise':'\\ud83c\\udf07',\n  'city_sunset':'\\ud83c\\udf06',\n  'cityscape':'\\ud83c\\udfd9',\n  'cl':'\\ud83c\\udd91',\n  'clamp':'\\ud83d\\udddc',\n  'clap':'\\ud83d\\udc4f',\n  'clapper':'\\ud83c\\udfac',\n  'classical_building':'\\ud83c\\udfdb',\n  'clinking_glasses':'\\ud83e\\udd42',\n  'clipboard':'\\ud83d\\udccb',\n  'clock1':'\\ud83d\\udd50',\n  'clock10':'\\ud83d\\udd59',\n  'clock1030':'\\ud83d\\udd65',\n  'clock11':'\\ud83d\\udd5a',\n  'clock1130':'\\ud83d\\udd66',\n  'clock12':'\\ud83d\\udd5b',\n  'clock1230':'\\ud83d\\udd67',\n  'clock130':'\\ud83d\\udd5c',\n  'clock2':'\\ud83d\\udd51',\n  'clock230':'\\ud83d\\udd5d',\n  'clock3':'\\ud83d\\udd52',\n  'clock330':'\\ud83d\\udd5e',\n  'clock4':'\\ud83d\\udd53',\n  'clock430':'\\ud83d\\udd5f',\n  'clock5':'\\ud83d\\udd54',\n  'clock530':'\\ud83d\\udd60',\n  'clock6':'\\ud83d\\udd55',\n  'clock630':'\\ud83d\\udd61',\n  'clock7':'\\ud83d\\udd56',\n  'clock730':'\\ud83d\\udd62',\n  'clock8':'\\ud83d\\udd57',\n  'clock830':'\\ud83d\\udd63',\n  'clock9':'\\ud83d\\udd58',\n  'clock930':'\\ud83d\\udd64',\n  'closed_book':'\\ud83d\\udcd5',\n  'closed_lock_with_key':'\\ud83d\\udd10',\n  'closed_umbrella':'\\ud83c\\udf02',\n  'cloud':'\\u2601\\ufe0f',\n  'cloud_with_lightning':'\\ud83c\\udf29',\n  'cloud_with_lightning_and_rain':'\\u26c8',\n  'cloud_with_rain':'\\ud83c\\udf27',\n  'cloud_with_snow':'\\ud83c\\udf28',\n  'clown_face':'\\ud83e\\udd21',\n  'clubs':'\\u2663\\ufe0f',\n  'cocktail':'\\ud83c\\udf78',\n  'coffee':'\\u2615\\ufe0f',\n  'coffin':'\\u26b0\\ufe0f',\n  'cold_sweat':'\\ud83d\\ude30',\n  'comet':'\\u2604\\ufe0f',\n  'computer':'\\ud83d\\udcbb',\n  'computer_mouse':'\\ud83d\\uddb1',\n  'confetti_ball':'\\ud83c\\udf8a',\n  'confounded':'\\ud83d\\ude16',\n  'confused':'\\ud83d\\ude15',\n  'congratulations':'\\u3297\\ufe0f',\n  'construction':'\\ud83d\\udea7',\n  'construction_worker_man':'\\ud83d\\udc77',\n  'construction_worker_woman':'\\ud83d\\udc77&zwj;\\u2640\\ufe0f',\n  'control_knobs':'\\ud83c\\udf9b',\n  'convenience_store':'\\ud83c\\udfea',\n  'cookie':'\\ud83c\\udf6a',\n  'cool':'\\ud83c\\udd92',\n  'policeman':'\\ud83d\\udc6e',\n  'copyright':'\\u00a9\\ufe0f',\n  'corn':'\\ud83c\\udf3d',\n  'couch_and_lamp':'\\ud83d\\udecb',\n  'couple':'\\ud83d\\udc6b',\n  'couple_with_heart_woman_man':'\\ud83d\\udc91',\n  'couple_with_heart_man_man':'\\ud83d\\udc68&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc68',\n  'couple_with_heart_woman_woman':'\\ud83d\\udc69&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc69',\n  'couplekiss_man_man':'\\ud83d\\udc68&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc8b&zwj;\\ud83d\\udc68',\n  'couplekiss_man_woman':'\\ud83d\\udc8f',\n  'couplekiss_woman_woman':'\\ud83d\\udc69&zwj;\\u2764\\ufe0f&zwj;\\ud83d\\udc8b&zwj;\\ud83d\\udc69',\n  'cow':'\\ud83d\\udc2e',\n  'cow2':'\\ud83d\\udc04',\n  'cowboy_hat_face':'\\ud83e\\udd20',\n  'crab':'\\ud83e\\udd80',\n  'crayon':'\\ud83d\\udd8d',\n  'credit_card':'\\ud83d\\udcb3',\n  'crescent_moon':'\\ud83c\\udf19',\n  'cricket':'\\ud83c\\udfcf',\n  'crocodile':'\\ud83d\\udc0a',\n  'croissant':'\\ud83e\\udd50',\n  'crossed_fingers':'\\ud83e\\udd1e',\n  'crossed_flags':'\\ud83c\\udf8c',\n  'crossed_swords':'\\u2694\\ufe0f',\n  'crown':'\\ud83d\\udc51',\n  'cry':'\\ud83d\\ude22',\n  'crying_cat_face':'\\ud83d\\ude3f',\n  'crystal_ball':'\\ud83d\\udd2e',\n  'cucumber':'\\ud83e\\udd52',\n  'cupid':'\\ud83d\\udc98',\n  'curly_loop':'\\u27b0',\n  'currency_exchange':'\\ud83d\\udcb1',\n  'curry':'\\ud83c\\udf5b',\n  'custard':'\\ud83c\\udf6e',\n  'customs':'\\ud83d\\udec3',\n  'cyclone':'\\ud83c\\udf00',\n  'dagger':'\\ud83d\\udde1',\n  'dancer':'\\ud83d\\udc83',\n  'dancing_women':'\\ud83d\\udc6f',\n  'dancing_men':'\\ud83d\\udc6f&zwj;\\u2642\\ufe0f',\n  'dango':'\\ud83c\\udf61',\n  'dark_sunglasses':'\\ud83d\\udd76',\n  'dart':'\\ud83c\\udfaf',\n  'dash':'\\ud83d\\udca8',\n  'date':'\\ud83d\\udcc5',\n  'deciduous_tree':'\\ud83c\\udf33',\n  'deer':'\\ud83e\\udd8c',\n  'department_store':'\\ud83c\\udfec',\n  'derelict_house':'\\ud83c\\udfda',\n  'desert':'\\ud83c\\udfdc',\n  'desert_island':'\\ud83c\\udfdd',\n  'desktop_computer':'\\ud83d\\udda5',\n  'male_detective':'\\ud83d\\udd75\\ufe0f',\n  'diamond_shape_with_a_dot_inside':'\\ud83d\\udca0',\n  'diamonds':'\\u2666\\ufe0f',\n  'disappointed':'\\ud83d\\ude1e',\n  'disappointed_relieved':'\\ud83d\\ude25',\n  'dizzy':'\\ud83d\\udcab',\n  'dizzy_face':'\\ud83d\\ude35',\n  'do_not_litter':'\\ud83d\\udeaf',\n  'dog':'\\ud83d\\udc36',\n  'dog2':'\\ud83d\\udc15',\n  'dollar':'\\ud83d\\udcb5',\n  'dolls':'\\ud83c\\udf8e',\n  'dolphin':'\\ud83d\\udc2c',\n  'door':'\\ud83d\\udeaa',\n  'doughnut':'\\ud83c\\udf69',\n  'dove':'\\ud83d\\udd4a',\n  'dragon':'\\ud83d\\udc09',\n  'dragon_face':'\\ud83d\\udc32',\n  'dress':'\\ud83d\\udc57',\n  'dromedary_camel':'\\ud83d\\udc2a',\n  'drooling_face':'\\ud83e\\udd24',\n  'droplet':'\\ud83d\\udca7',\n  'drum':'\\ud83e\\udd41',\n  'duck':'\\ud83e\\udd86',\n  'dvd':'\\ud83d\\udcc0',\n  'e-mail':'\\ud83d\\udce7',\n  'eagle':'\\ud83e\\udd85',\n  'ear':'\\ud83d\\udc42',\n  'ear_of_rice':'\\ud83c\\udf3e',\n  'earth_africa':'\\ud83c\\udf0d',\n  'earth_americas':'\\ud83c\\udf0e',\n  'earth_asia':'\\ud83c\\udf0f',\n  'egg':'\\ud83e\\udd5a',\n  'eggplant':'\\ud83c\\udf46',\n  'eight_pointed_black_star':'\\u2734\\ufe0f',\n  'eight_spoked_asterisk':'\\u2733\\ufe0f',\n  'electric_plug':'\\ud83d\\udd0c',\n  'elephant':'\\ud83d\\udc18',\n  'email':'\\u2709\\ufe0f',\n  'end':'\\ud83d\\udd1a',\n  'envelope_with_arrow':'\\ud83d\\udce9',\n  'euro':'\\ud83d\\udcb6',\n  'european_castle':'\\ud83c\\udff0',\n  'european_post_office':'\\ud83c\\udfe4',\n  'evergreen_tree':'\\ud83c\\udf32',\n  'exclamation':'\\u2757\\ufe0f',\n  'expressionless':'\\ud83d\\ude11',\n  'eye':'\\ud83d\\udc41',\n  'eye_speech_bubble':'\\ud83d\\udc41&zwj;\\ud83d\\udde8',\n  'eyeglasses':'\\ud83d\\udc53',\n  'eyes':'\\ud83d\\udc40',\n  'face_with_head_bandage':'\\ud83e\\udd15',\n  'face_with_thermometer':'\\ud83e\\udd12',\n  'fist_oncoming':'\\ud83d\\udc4a',\n  'factory':'\\ud83c\\udfed',\n  'fallen_leaf':'\\ud83c\\udf42',\n  'family_man_woman_boy':'\\ud83d\\udc6a',\n  'family_man_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc66',\n  'family_man_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc67',\n  'family_man_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_man_man_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc66',\n  'family_man_man_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_man_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67',\n  'family_man_man_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_man_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc68&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_man_woman_boy_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_man_woman_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_man_woman_girl_boy':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_man_woman_girl_girl':'\\ud83d\\udc68&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_woman_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc66',\n  'family_woman_boy_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_woman_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_woman_girl_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_woman_girl_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'family_woman_woman_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66',\n  'family_woman_woman_boy_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc66&zwj;\\ud83d\\udc66',\n  'family_woman_woman_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67',\n  'family_woman_woman_girl_boy':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc66',\n  'family_woman_woman_girl_girl':'\\ud83d\\udc69&zwj;\\ud83d\\udc69&zwj;\\ud83d\\udc67&zwj;\\ud83d\\udc67',\n  'fast_forward':'\\u23e9',\n  'fax':'\\ud83d\\udce0',\n  'fearful':'\\ud83d\\ude28',\n  'feet':'\\ud83d\\udc3e',\n  'female_detective':'\\ud83d\\udd75\\ufe0f&zwj;\\u2640\\ufe0f',\n  'ferris_wheel':'\\ud83c\\udfa1',\n  'ferry':'\\u26f4',\n  'field_hockey':'\\ud83c\\udfd1',\n  'file_cabinet':'\\ud83d\\uddc4',\n  'file_folder':'\\ud83d\\udcc1',\n  'film_projector':'\\ud83d\\udcfd',\n  'film_strip':'\\ud83c\\udf9e',\n  'fire':'\\ud83d\\udd25',\n  'fire_engine':'\\ud83d\\ude92',\n  'fireworks':'\\ud83c\\udf86',\n  'first_quarter_moon':'\\ud83c\\udf13',\n  'first_quarter_moon_with_face':'\\ud83c\\udf1b',\n  'fish':'\\ud83d\\udc1f',\n  'fish_cake':'\\ud83c\\udf65',\n  'fishing_pole_and_fish':'\\ud83c\\udfa3',\n  'fist_raised':'\\u270a',\n  'fist_left':'\\ud83e\\udd1b',\n  'fist_right':'\\ud83e\\udd1c',\n  'flags':'\\ud83c\\udf8f',\n  'flashlight':'\\ud83d\\udd26',\n  'fleur_de_lis':'\\u269c\\ufe0f',\n  'flight_arrival':'\\ud83d\\udeec',\n  'flight_departure':'\\ud83d\\udeeb',\n  'floppy_disk':'\\ud83d\\udcbe',\n  'flower_playing_cards':'\\ud83c\\udfb4',\n  'flushed':'\\ud83d\\ude33',\n  'fog':'\\ud83c\\udf2b',\n  'foggy':'\\ud83c\\udf01',\n  'football':'\\ud83c\\udfc8',\n  'footprints':'\\ud83d\\udc63',\n  'fork_and_knife':'\\ud83c\\udf74',\n  'fountain':'\\u26f2\\ufe0f',\n  'fountain_pen':'\\ud83d\\udd8b',\n  'four_leaf_clover':'\\ud83c\\udf40',\n  'fox_face':'\\ud83e\\udd8a',\n  'framed_picture':'\\ud83d\\uddbc',\n  'free':'\\ud83c\\udd93',\n  'fried_egg':'\\ud83c\\udf73',\n  'fried_shrimp':'\\ud83c\\udf64',\n  'fries':'\\ud83c\\udf5f',\n  'frog':'\\ud83d\\udc38',\n  'frowning':'\\ud83d\\ude26',\n  'frowning_face':'\\u2639\\ufe0f',\n  'frowning_man':'\\ud83d\\ude4d&zwj;\\u2642\\ufe0f',\n  'frowning_woman':'\\ud83d\\ude4d',\n  'middle_finger':'\\ud83d\\udd95',\n  'fuelpump':'\\u26fd\\ufe0f',\n  'full_moon':'\\ud83c\\udf15',\n  'full_moon_with_face':'\\ud83c\\udf1d',\n  'funeral_urn':'\\u26b1\\ufe0f',\n  'game_die':'\\ud83c\\udfb2',\n  'gear':'\\u2699\\ufe0f',\n  'gem':'\\ud83d\\udc8e',\n  'gemini':'\\u264a\\ufe0f',\n  'ghost':'\\ud83d\\udc7b',\n  'gift':'\\ud83c\\udf81',\n  'gift_heart':'\\ud83d\\udc9d',\n  'girl':'\\ud83d\\udc67',\n  'globe_with_meridians':'\\ud83c\\udf10',\n  'goal_net':'\\ud83e\\udd45',\n  'goat':'\\ud83d\\udc10',\n  'golf':'\\u26f3\\ufe0f',\n  'golfing_man':'\\ud83c\\udfcc\\ufe0f',\n  'golfing_woman':'\\ud83c\\udfcc\\ufe0f&zwj;\\u2640\\ufe0f',\n  'gorilla':'\\ud83e\\udd8d',\n  'grapes':'\\ud83c\\udf47',\n  'green_apple':'\\ud83c\\udf4f',\n  'green_book':'\\ud83d\\udcd7',\n  'green_heart':'\\ud83d\\udc9a',\n  'green_salad':'\\ud83e\\udd57',\n  'grey_exclamation':'\\u2755',\n  'grey_question':'\\u2754',\n  'grimacing':'\\ud83d\\ude2c',\n  'grin':'\\ud83d\\ude01',\n  'grinning':'\\ud83d\\ude00',\n  'guardsman':'\\ud83d\\udc82',\n  'guardswoman':'\\ud83d\\udc82&zwj;\\u2640\\ufe0f',\n  'guitar':'\\ud83c\\udfb8',\n  'gun':'\\ud83d\\udd2b',\n  'haircut_woman':'\\ud83d\\udc87',\n  'haircut_man':'\\ud83d\\udc87&zwj;\\u2642\\ufe0f',\n  'hamburger':'\\ud83c\\udf54',\n  'hammer':'\\ud83d\\udd28',\n  'hammer_and_pick':'\\u2692',\n  'hammer_and_wrench':'\\ud83d\\udee0',\n  'hamster':'\\ud83d\\udc39',\n  'hand':'\\u270b',\n  'handbag':'\\ud83d\\udc5c',\n  'handshake':'\\ud83e\\udd1d',\n  'hankey':'\\ud83d\\udca9',\n  'hatched_chick':'\\ud83d\\udc25',\n  'hatching_chick':'\\ud83d\\udc23',\n  'headphones':'\\ud83c\\udfa7',\n  'hear_no_evil':'\\ud83d\\ude49',\n  'heart':'\\u2764\\ufe0f',\n  'heart_decoration':'\\ud83d\\udc9f',\n  'heart_eyes':'\\ud83d\\ude0d',\n  'heart_eyes_cat':'\\ud83d\\ude3b',\n  'heartbeat':'\\ud83d\\udc93',\n  'heartpulse':'\\ud83d\\udc97',\n  'hearts':'\\u2665\\ufe0f',\n  'heavy_check_mark':'\\u2714\\ufe0f',\n  'heavy_division_sign':'\\u2797',\n  'heavy_dollar_sign':'\\ud83d\\udcb2',\n  'heavy_heart_exclamation':'\\u2763\\ufe0f',\n  'heavy_minus_sign':'\\u2796',\n  'heavy_multiplication_x':'\\u2716\\ufe0f',\n  'heavy_plus_sign':'\\u2795',\n  'helicopter':'\\ud83d\\ude81',\n  'herb':'\\ud83c\\udf3f',\n  'hibiscus':'\\ud83c\\udf3a',\n  'high_brightness':'\\ud83d\\udd06',\n  'high_heel':'\\ud83d\\udc60',\n  'hocho':'\\ud83d\\udd2a',\n  'hole':'\\ud83d\\udd73',\n  'honey_pot':'\\ud83c\\udf6f',\n  'horse':'\\ud83d\\udc34',\n  'horse_racing':'\\ud83c\\udfc7',\n  'hospital':'\\ud83c\\udfe5',\n  'hot_pepper':'\\ud83c\\udf36',\n  'hotdog':'\\ud83c\\udf2d',\n  'hotel':'\\ud83c\\udfe8',\n  'hotsprings':'\\u2668\\ufe0f',\n  'hourglass':'\\u231b\\ufe0f',\n  'hourglass_flowing_sand':'\\u23f3',\n  'house':'\\ud83c\\udfe0',\n  'house_with_garden':'\\ud83c\\udfe1',\n  'houses':'\\ud83c\\udfd8',\n  'hugs':'\\ud83e\\udd17',\n  'hushed':'\\ud83d\\ude2f',\n  'ice_cream':'\\ud83c\\udf68',\n  'ice_hockey':'\\ud83c\\udfd2',\n  'ice_skate':'\\u26f8',\n  'icecream':'\\ud83c\\udf66',\n  'id':'\\ud83c\\udd94',\n  'ideograph_advantage':'\\ud83c\\ude50',\n  'imp':'\\ud83d\\udc7f',\n  'inbox_tray':'\\ud83d\\udce5',\n  'incoming_envelope':'\\ud83d\\udce8',\n  'tipping_hand_woman':'\\ud83d\\udc81',\n  'information_source':'\\u2139\\ufe0f',\n  'innocent':'\\ud83d\\ude07',\n  'interrobang':'\\u2049\\ufe0f',\n  'iphone':'\\ud83d\\udcf1',\n  'izakaya_lantern':'\\ud83c\\udfee',\n  'jack_o_lantern':'\\ud83c\\udf83',\n  'japan':'\\ud83d\\uddfe',\n  'japanese_castle':'\\ud83c\\udfef',\n  'japanese_goblin':'\\ud83d\\udc7a',\n  'japanese_ogre':'\\ud83d\\udc79',\n  'jeans':'\\ud83d\\udc56',\n  'joy':'\\ud83d\\ude02',\n  'joy_cat':'\\ud83d\\ude39',\n  'joystick':'\\ud83d\\udd79',\n  'kaaba':'\\ud83d\\udd4b',\n  'key':'\\ud83d\\udd11',\n  'keyboard':'\\u2328\\ufe0f',\n  'keycap_ten':'\\ud83d\\udd1f',\n  'kick_scooter':'\\ud83d\\udef4',\n  'kimono':'\\ud83d\\udc58',\n  'kiss':'\\ud83d\\udc8b',\n  'kissing':'\\ud83d\\ude17',\n  'kissing_cat':'\\ud83d\\ude3d',\n  'kissing_closed_eyes':'\\ud83d\\ude1a',\n  'kissing_heart':'\\ud83d\\ude18',\n  'kissing_smiling_eyes':'\\ud83d\\ude19',\n  'kiwi_fruit':'\\ud83e\\udd5d',\n  'koala':'\\ud83d\\udc28',\n  'koko':'\\ud83c\\ude01',\n  'label':'\\ud83c\\udff7',\n  'large_blue_circle':'\\ud83d\\udd35',\n  'large_blue_diamond':'\\ud83d\\udd37',\n  'large_orange_diamond':'\\ud83d\\udd36',\n  'last_quarter_moon':'\\ud83c\\udf17',\n  'last_quarter_moon_with_face':'\\ud83c\\udf1c',\n  'latin_cross':'\\u271d\\ufe0f',\n  'laughing':'\\ud83d\\ude06',\n  'leaves':'\\ud83c\\udf43',\n  'ledger':'\\ud83d\\udcd2',\n  'left_luggage':'\\ud83d\\udec5',\n  'left_right_arrow':'\\u2194\\ufe0f',\n  'leftwards_arrow_with_hook':'\\u21a9\\ufe0f',\n  'lemon':'\\ud83c\\udf4b',\n  'leo':'\\u264c\\ufe0f',\n  'leopard':'\\ud83d\\udc06',\n  'level_slider':'\\ud83c\\udf9a',\n  'libra':'\\u264e\\ufe0f',\n  'light_rail':'\\ud83d\\ude88',\n  'link':'\\ud83d\\udd17',\n  'lion':'\\ud83e\\udd81',\n  'lips':'\\ud83d\\udc44',\n  'lipstick':'\\ud83d\\udc84',\n  'lizard':'\\ud83e\\udd8e',\n  'lock':'\\ud83d\\udd12',\n  'lock_with_ink_pen':'\\ud83d\\udd0f',\n  'lollipop':'\\ud83c\\udf6d',\n  'loop':'\\u27bf',\n  'loud_sound':'\\ud83d\\udd0a',\n  'loudspeaker':'\\ud83d\\udce2',\n  'love_hotel':'\\ud83c\\udfe9',\n  'love_letter':'\\ud83d\\udc8c',\n  'low_brightness':'\\ud83d\\udd05',\n  'lying_face':'\\ud83e\\udd25',\n  'm':'\\u24c2\\ufe0f',\n  'mag':'\\ud83d\\udd0d',\n  'mag_right':'\\ud83d\\udd0e',\n  'mahjong':'\\ud83c\\udc04\\ufe0f',\n  'mailbox':'\\ud83d\\udceb',\n  'mailbox_closed':'\\ud83d\\udcea',\n  'mailbox_with_mail':'\\ud83d\\udcec',\n  'mailbox_with_no_mail':'\\ud83d\\udced',\n  'man':'\\ud83d\\udc68',\n  'man_artist':'\\ud83d\\udc68&zwj;\\ud83c\\udfa8',\n  'man_astronaut':'\\ud83d\\udc68&zwj;\\ud83d\\ude80',\n  'man_cartwheeling':'\\ud83e\\udd38&zwj;\\u2642\\ufe0f',\n  'man_cook':'\\ud83d\\udc68&zwj;\\ud83c\\udf73',\n  'man_dancing':'\\ud83d\\udd7a',\n  'man_facepalming':'\\ud83e\\udd26&zwj;\\u2642\\ufe0f',\n  'man_factory_worker':'\\ud83d\\udc68&zwj;\\ud83c\\udfed',\n  'man_farmer':'\\ud83d\\udc68&zwj;\\ud83c\\udf3e',\n  'man_firefighter':'\\ud83d\\udc68&zwj;\\ud83d\\ude92',\n  'man_health_worker':'\\ud83d\\udc68&zwj;\\u2695\\ufe0f',\n  'man_in_tuxedo':'\\ud83e\\udd35',\n  'man_judge':'\\ud83d\\udc68&zwj;\\u2696\\ufe0f',\n  'man_juggling':'\\ud83e\\udd39&zwj;\\u2642\\ufe0f',\n  'man_mechanic':'\\ud83d\\udc68&zwj;\\ud83d\\udd27',\n  'man_office_worker':'\\ud83d\\udc68&zwj;\\ud83d\\udcbc',\n  'man_pilot':'\\ud83d\\udc68&zwj;\\u2708\\ufe0f',\n  'man_playing_handball':'\\ud83e\\udd3e&zwj;\\u2642\\ufe0f',\n  'man_playing_water_polo':'\\ud83e\\udd3d&zwj;\\u2642\\ufe0f',\n  'man_scientist':'\\ud83d\\udc68&zwj;\\ud83d\\udd2c',\n  'man_shrugging':'\\ud83e\\udd37&zwj;\\u2642\\ufe0f',\n  'man_singer':'\\ud83d\\udc68&zwj;\\ud83c\\udfa4',\n  'man_student':'\\ud83d\\udc68&zwj;\\ud83c\\udf93',\n  'man_teacher':'\\ud83d\\udc68&zwj;\\ud83c\\udfeb',\n  'man_technologist':'\\ud83d\\udc68&zwj;\\ud83d\\udcbb',\n  'man_with_gua_pi_mao':'\\ud83d\\udc72',\n  'man_with_turban':'\\ud83d\\udc73',\n  'tangerine':'\\ud83c\\udf4a',\n  'mans_shoe':'\\ud83d\\udc5e',\n  'mantelpiece_clock':'\\ud83d\\udd70',\n  'maple_leaf':'\\ud83c\\udf41',\n  'martial_arts_uniform':'\\ud83e\\udd4b',\n  'mask':'\\ud83d\\ude37',\n  'massage_woman':'\\ud83d\\udc86',\n  'massage_man':'\\ud83d\\udc86&zwj;\\u2642\\ufe0f',\n  'meat_on_bone':'\\ud83c\\udf56',\n  'medal_military':'\\ud83c\\udf96',\n  'medal_sports':'\\ud83c\\udfc5',\n  'mega':'\\ud83d\\udce3',\n  'melon':'\\ud83c\\udf48',\n  'memo':'\\ud83d\\udcdd',\n  'men_wrestling':'\\ud83e\\udd3c&zwj;\\u2642\\ufe0f',\n  'menorah':'\\ud83d\\udd4e',\n  'mens':'\\ud83d\\udeb9',\n  'metal':'\\ud83e\\udd18',\n  'metro':'\\ud83d\\ude87',\n  'microphone':'\\ud83c\\udfa4',\n  'microscope':'\\ud83d\\udd2c',\n  'milk_glass':'\\ud83e\\udd5b',\n  'milky_way':'\\ud83c\\udf0c',\n  'minibus':'\\ud83d\\ude90',\n  'minidisc':'\\ud83d\\udcbd',\n  'mobile_phone_off':'\\ud83d\\udcf4',\n  'money_mouth_face':'\\ud83e\\udd11',\n  'money_with_wings':'\\ud83d\\udcb8',\n  'moneybag':'\\ud83d\\udcb0',\n  'monkey':'\\ud83d\\udc12',\n  'monkey_face':'\\ud83d\\udc35',\n  'monorail':'\\ud83d\\ude9d',\n  'moon':'\\ud83c\\udf14',\n  'mortar_board':'\\ud83c\\udf93',\n  'mosque':'\\ud83d\\udd4c',\n  'motor_boat':'\\ud83d\\udee5',\n  'motor_scooter':'\\ud83d\\udef5',\n  'motorcycle':'\\ud83c\\udfcd',\n  'motorway':'\\ud83d\\udee3',\n  'mount_fuji':'\\ud83d\\uddfb',\n  'mountain':'\\u26f0',\n  'mountain_biking_man':'\\ud83d\\udeb5',\n  'mountain_biking_woman':'\\ud83d\\udeb5&zwj;\\u2640\\ufe0f',\n  'mountain_cableway':'\\ud83d\\udea0',\n  'mountain_railway':'\\ud83d\\ude9e',\n  'mountain_snow':'\\ud83c\\udfd4',\n  'mouse':'\\ud83d\\udc2d',\n  'mouse2':'\\ud83d\\udc01',\n  'movie_camera':'\\ud83c\\udfa5',\n  'moyai':'\\ud83d\\uddff',\n  'mrs_claus':'\\ud83e\\udd36',\n  'muscle':'\\ud83d\\udcaa',\n  'mushroom':'\\ud83c\\udf44',\n  'musical_keyboard':'\\ud83c\\udfb9',\n  'musical_note':'\\ud83c\\udfb5',\n  'musical_score':'\\ud83c\\udfbc',\n  'mute':'\\ud83d\\udd07',\n  'nail_care':'\\ud83d\\udc85',\n  'name_badge':'\\ud83d\\udcdb',\n  'national_park':'\\ud83c\\udfde',\n  'nauseated_face':'\\ud83e\\udd22',\n  'necktie':'\\ud83d\\udc54',\n  'negative_squared_cross_mark':'\\u274e',\n  'nerd_face':'\\ud83e\\udd13',\n  'neutral_face':'\\ud83d\\ude10',\n  'new':'\\ud83c\\udd95',\n  'new_moon':'\\ud83c\\udf11',\n  'new_moon_with_face':'\\ud83c\\udf1a',\n  'newspaper':'\\ud83d\\udcf0',\n  'newspaper_roll':'\\ud83d\\uddde',\n  'next_track_button':'\\u23ed',\n  'ng':'\\ud83c\\udd96',\n  'no_good_man':'\\ud83d\\ude45&zwj;\\u2642\\ufe0f',\n  'no_good_woman':'\\ud83d\\ude45',\n  'night_with_stars':'\\ud83c\\udf03',\n  'no_bell':'\\ud83d\\udd15',\n  'no_bicycles':'\\ud83d\\udeb3',\n  'no_entry':'\\u26d4\\ufe0f',\n  'no_entry_sign':'\\ud83d\\udeab',\n  'no_mobile_phones':'\\ud83d\\udcf5',\n  'no_mouth':'\\ud83d\\ude36',\n  'no_pedestrians':'\\ud83d\\udeb7',\n  'no_smoking':'\\ud83d\\udead',\n  'non-potable_water':'\\ud83d\\udeb1',\n  'nose':'\\ud83d\\udc43',\n  'notebook':'\\ud83d\\udcd3',\n  'notebook_with_decorative_cover':'\\ud83d\\udcd4',\n  'notes':'\\ud83c\\udfb6',\n  'nut_and_bolt':'\\ud83d\\udd29',\n  'o':'\\u2b55\\ufe0f',\n  'o2':'\\ud83c\\udd7e\\ufe0f',\n  'ocean':'\\ud83c\\udf0a',\n  'octopus':'\\ud83d\\udc19',\n  'oden':'\\ud83c\\udf62',\n  'office':'\\ud83c\\udfe2',\n  'oil_drum':'\\ud83d\\udee2',\n  'ok':'\\ud83c\\udd97',\n  'ok_hand':'\\ud83d\\udc4c',\n  'ok_man':'\\ud83d\\ude46&zwj;\\u2642\\ufe0f',\n  'ok_woman':'\\ud83d\\ude46',\n  'old_key':'\\ud83d\\udddd',\n  'older_man':'\\ud83d\\udc74',\n  'older_woman':'\\ud83d\\udc75',\n  'om':'\\ud83d\\udd49',\n  'on':'\\ud83d\\udd1b',\n  'oncoming_automobile':'\\ud83d\\ude98',\n  'oncoming_bus':'\\ud83d\\ude8d',\n  'oncoming_police_car':'\\ud83d\\ude94',\n  'oncoming_taxi':'\\ud83d\\ude96',\n  'open_file_folder':'\\ud83d\\udcc2',\n  'open_hands':'\\ud83d\\udc50',\n  'open_mouth':'\\ud83d\\ude2e',\n  'open_umbrella':'\\u2602\\ufe0f',\n  'ophiuchus':'\\u26ce',\n  'orange_book':'\\ud83d\\udcd9',\n  'orthodox_cross':'\\u2626\\ufe0f',\n  'outbox_tray':'\\ud83d\\udce4',\n  'owl':'\\ud83e\\udd89',\n  'ox':'\\ud83d\\udc02',\n  'package':'\\ud83d\\udce6',\n  'page_facing_up':'\\ud83d\\udcc4',\n  'page_with_curl':'\\ud83d\\udcc3',\n  'pager':'\\ud83d\\udcdf',\n  'paintbrush':'\\ud83d\\udd8c',\n  'palm_tree':'\\ud83c\\udf34',\n  'pancakes':'\\ud83e\\udd5e',\n  'panda_face':'\\ud83d\\udc3c',\n  'paperclip':'\\ud83d\\udcce',\n  'paperclips':'\\ud83d\\udd87',\n  'parasol_on_ground':'\\u26f1',\n  'parking':'\\ud83c\\udd7f\\ufe0f',\n  'part_alternation_mark':'\\u303d\\ufe0f',\n  'partly_sunny':'\\u26c5\\ufe0f',\n  'passenger_ship':'\\ud83d\\udef3',\n  'passport_control':'\\ud83d\\udec2',\n  'pause_button':'\\u23f8',\n  'peace_symbol':'\\u262e\\ufe0f',\n  'peach':'\\ud83c\\udf51',\n  'peanuts':'\\ud83e\\udd5c',\n  'pear':'\\ud83c\\udf50',\n  'pen':'\\ud83d\\udd8a',\n  'pencil2':'\\u270f\\ufe0f',\n  'penguin':'\\ud83d\\udc27',\n  'pensive':'\\ud83d\\ude14',\n  'performing_arts':'\\ud83c\\udfad',\n  'persevere':'\\ud83d\\ude23',\n  'person_fencing':'\\ud83e\\udd3a',\n  'pouting_woman':'\\ud83d\\ude4e',\n  'phone':'\\u260e\\ufe0f',\n  'pick':'\\u26cf',\n  'pig':'\\ud83d\\udc37',\n  'pig2':'\\ud83d\\udc16',\n  'pig_nose':'\\ud83d\\udc3d',\n  'pill':'\\ud83d\\udc8a',\n  'pineapple':'\\ud83c\\udf4d',\n  'ping_pong':'\\ud83c\\udfd3',\n  'pisces':'\\u2653\\ufe0f',\n  'pizza':'\\ud83c\\udf55',\n  'place_of_worship':'\\ud83d\\uded0',\n  'plate_with_cutlery':'\\ud83c\\udf7d',\n  'play_or_pause_button':'\\u23ef',\n  'point_down':'\\ud83d\\udc47',\n  'point_left':'\\ud83d\\udc48',\n  'point_right':'\\ud83d\\udc49',\n  'point_up':'\\u261d\\ufe0f',\n  'point_up_2':'\\ud83d\\udc46',\n  'police_car':'\\ud83d\\ude93',\n  'policewoman':'\\ud83d\\udc6e&zwj;\\u2640\\ufe0f',\n  'poodle':'\\ud83d\\udc29',\n  'popcorn':'\\ud83c\\udf7f',\n  'post_office':'\\ud83c\\udfe3',\n  'postal_horn':'\\ud83d\\udcef',\n  'postbox':'\\ud83d\\udcee',\n  'potable_water':'\\ud83d\\udeb0',\n  'potato':'\\ud83e\\udd54',\n  'pouch':'\\ud83d\\udc5d',\n  'poultry_leg':'\\ud83c\\udf57',\n  'pound':'\\ud83d\\udcb7',\n  'rage':'\\ud83d\\ude21',\n  'pouting_cat':'\\ud83d\\ude3e',\n  'pouting_man':'\\ud83d\\ude4e&zwj;\\u2642\\ufe0f',\n  'pray':'\\ud83d\\ude4f',\n  'prayer_beads':'\\ud83d\\udcff',\n  'pregnant_woman':'\\ud83e\\udd30',\n  'previous_track_button':'\\u23ee',\n  'prince':'\\ud83e\\udd34',\n  'princess':'\\ud83d\\udc78',\n  'printer':'\\ud83d\\udda8',\n  'purple_heart':'\\ud83d\\udc9c',\n  'purse':'\\ud83d\\udc5b',\n  'pushpin':'\\ud83d\\udccc',\n  'put_litter_in_its_place':'\\ud83d\\udeae',\n  'question':'\\u2753',\n  'rabbit':'\\ud83d\\udc30',\n  'rabbit2':'\\ud83d\\udc07',\n  'racehorse':'\\ud83d\\udc0e',\n  'racing_car':'\\ud83c\\udfce',\n  'radio':'\\ud83d\\udcfb',\n  'radio_button':'\\ud83d\\udd18',\n  'radioactive':'\\u2622\\ufe0f',\n  'railway_car':'\\ud83d\\ude83',\n  'railway_track':'\\ud83d\\udee4',\n  'rainbow':'\\ud83c\\udf08',\n  'rainbow_flag':'\\ud83c\\udff3\\ufe0f&zwj;\\ud83c\\udf08',\n  'raised_back_of_hand':'\\ud83e\\udd1a',\n  'raised_hand_with_fingers_splayed':'\\ud83d\\udd90',\n  'raised_hands':'\\ud83d\\ude4c',\n  'raising_hand_woman':'\\ud83d\\ude4b',\n  'raising_hand_man':'\\ud83d\\ude4b&zwj;\\u2642\\ufe0f',\n  'ram':'\\ud83d\\udc0f',\n  'ramen':'\\ud83c\\udf5c',\n  'rat':'\\ud83d\\udc00',\n  'record_button':'\\u23fa',\n  'recycle':'\\u267b\\ufe0f',\n  'red_circle':'\\ud83d\\udd34',\n  'registered':'\\u00ae\\ufe0f',\n  'relaxed':'\\u263a\\ufe0f',\n  'relieved':'\\ud83d\\ude0c',\n  'reminder_ribbon':'\\ud83c\\udf97',\n  'repeat':'\\ud83d\\udd01',\n  'repeat_one':'\\ud83d\\udd02',\n  'rescue_worker_helmet':'\\u26d1',\n  'restroom':'\\ud83d\\udebb',\n  'revolving_hearts':'\\ud83d\\udc9e',\n  'rewind':'\\u23ea',\n  'rhinoceros':'\\ud83e\\udd8f',\n  'ribbon':'\\ud83c\\udf80',\n  'rice':'\\ud83c\\udf5a',\n  'rice_ball':'\\ud83c\\udf59',\n  'rice_cracker':'\\ud83c\\udf58',\n  'rice_scene':'\\ud83c\\udf91',\n  'right_anger_bubble':'\\ud83d\\uddef',\n  'ring':'\\ud83d\\udc8d',\n  'robot':'\\ud83e\\udd16',\n  'rocket':'\\ud83d\\ude80',\n  'rofl':'\\ud83e\\udd23',\n  'roll_eyes':'\\ud83d\\ude44',\n  'roller_coaster':'\\ud83c\\udfa2',\n  'rooster':'\\ud83d\\udc13',\n  'rose':'\\ud83c\\udf39',\n  'rosette':'\\ud83c\\udff5',\n  'rotating_light':'\\ud83d\\udea8',\n  'round_pushpin':'\\ud83d\\udccd',\n  'rowing_man':'\\ud83d\\udea3',\n  'rowing_woman':'\\ud83d\\udea3&zwj;\\u2640\\ufe0f',\n  'rugby_football':'\\ud83c\\udfc9',\n  'running_man':'\\ud83c\\udfc3',\n  'running_shirt_with_sash':'\\ud83c\\udfbd',\n  'running_woman':'\\ud83c\\udfc3&zwj;\\u2640\\ufe0f',\n  'sa':'\\ud83c\\ude02\\ufe0f',\n  'sagittarius':'\\u2650\\ufe0f',\n  'sake':'\\ud83c\\udf76',\n  'sandal':'\\ud83d\\udc61',\n  'santa':'\\ud83c\\udf85',\n  'satellite':'\\ud83d\\udce1',\n  'saxophone':'\\ud83c\\udfb7',\n  'school':'\\ud83c\\udfeb',\n  'school_satchel':'\\ud83c\\udf92',\n  'scissors':'\\u2702\\ufe0f',\n  'scorpion':'\\ud83e\\udd82',\n  'scorpius':'\\u264f\\ufe0f',\n  'scream':'\\ud83d\\ude31',\n  'scream_cat':'\\ud83d\\ude40',\n  'scroll':'\\ud83d\\udcdc',\n  'seat':'\\ud83d\\udcba',\n  'secret':'\\u3299\\ufe0f',\n  'see_no_evil':'\\ud83d\\ude48',\n  'seedling':'\\ud83c\\udf31',\n  'selfie':'\\ud83e\\udd33',\n  'shallow_pan_of_food':'\\ud83e\\udd58',\n  'shamrock':'\\u2618\\ufe0f',\n  'shark':'\\ud83e\\udd88',\n  'shaved_ice':'\\ud83c\\udf67',\n  'sheep':'\\ud83d\\udc11',\n  'shell':'\\ud83d\\udc1a',\n  'shield':'\\ud83d\\udee1',\n  'shinto_shrine':'\\u26e9',\n  'ship':'\\ud83d\\udea2',\n  'shirt':'\\ud83d\\udc55',\n  'shopping':'\\ud83d\\udecd',\n  'shopping_cart':'\\ud83d\\uded2',\n  'shower':'\\ud83d\\udebf',\n  'shrimp':'\\ud83e\\udd90',\n  'signal_strength':'\\ud83d\\udcf6',\n  'six_pointed_star':'\\ud83d\\udd2f',\n  'ski':'\\ud83c\\udfbf',\n  'skier':'\\u26f7',\n  'skull':'\\ud83d\\udc80',\n  'skull_and_crossbones':'\\u2620\\ufe0f',\n  'sleeping':'\\ud83d\\ude34',\n  'sleeping_bed':'\\ud83d\\udecc',\n  'sleepy':'\\ud83d\\ude2a',\n  'slightly_frowning_face':'\\ud83d\\ude41',\n  'slightly_smiling_face':'\\ud83d\\ude42',\n  'slot_machine':'\\ud83c\\udfb0',\n  'small_airplane':'\\ud83d\\udee9',\n  'small_blue_diamond':'\\ud83d\\udd39',\n  'small_orange_diamond':'\\ud83d\\udd38',\n  'small_red_triangle':'\\ud83d\\udd3a',\n  'small_red_triangle_down':'\\ud83d\\udd3b',\n  'smile':'\\ud83d\\ude04',\n  'smile_cat':'\\ud83d\\ude38',\n  'smiley':'\\ud83d\\ude03',\n  'smiley_cat':'\\ud83d\\ude3a',\n  'smiling_imp':'\\ud83d\\ude08',\n  'smirk':'\\ud83d\\ude0f',\n  'smirk_cat':'\\ud83d\\ude3c',\n  'smoking':'\\ud83d\\udeac',\n  'snail':'\\ud83d\\udc0c',\n  'snake':'\\ud83d\\udc0d',\n  'sneezing_face':'\\ud83e\\udd27',\n  'snowboarder':'\\ud83c\\udfc2',\n  'snowflake':'\\u2744\\ufe0f',\n  'snowman':'\\u26c4\\ufe0f',\n  'snowman_with_snow':'\\u2603\\ufe0f',\n  'sob':'\\ud83d\\ude2d',\n  'soccer':'\\u26bd\\ufe0f',\n  'soon':'\\ud83d\\udd1c',\n  'sos':'\\ud83c\\udd98',\n  'sound':'\\ud83d\\udd09',\n  'space_invader':'\\ud83d\\udc7e',\n  'spades':'\\u2660\\ufe0f',\n  'spaghetti':'\\ud83c\\udf5d',\n  'sparkle':'\\u2747\\ufe0f',\n  'sparkler':'\\ud83c\\udf87',\n  'sparkles':'\\u2728',\n  'sparkling_heart':'\\ud83d\\udc96',\n  'speak_no_evil':'\\ud83d\\ude4a',\n  'speaker':'\\ud83d\\udd08',\n  'speaking_head':'\\ud83d\\udde3',\n  'speech_balloon':'\\ud83d\\udcac',\n  'speedboat':'\\ud83d\\udea4',\n  'spider':'\\ud83d\\udd77',\n  'spider_web':'\\ud83d\\udd78',\n  'spiral_calendar':'\\ud83d\\uddd3',\n  'spiral_notepad':'\\ud83d\\uddd2',\n  'spoon':'\\ud83e\\udd44',\n  'squid':'\\ud83e\\udd91',\n  'stadium':'\\ud83c\\udfdf',\n  'star':'\\u2b50\\ufe0f',\n  'star2':'\\ud83c\\udf1f',\n  'star_and_crescent':'\\u262a\\ufe0f',\n  'star_of_david':'\\u2721\\ufe0f',\n  'stars':'\\ud83c\\udf20',\n  'station':'\\ud83d\\ude89',\n  'statue_of_liberty':'\\ud83d\\uddfd',\n  'steam_locomotive':'\\ud83d\\ude82',\n  'stew':'\\ud83c\\udf72',\n  'stop_button':'\\u23f9',\n  'stop_sign':'\\ud83d\\uded1',\n  'stopwatch':'\\u23f1',\n  'straight_ruler':'\\ud83d\\udccf',\n  'strawberry':'\\ud83c\\udf53',\n  'stuck_out_tongue':'\\ud83d\\ude1b',\n  'stuck_out_tongue_closed_eyes':'\\ud83d\\ude1d',\n  'stuck_out_tongue_winking_eye':'\\ud83d\\ude1c',\n  'studio_microphone':'\\ud83c\\udf99',\n  'stuffed_flatbread':'\\ud83e\\udd59',\n  'sun_behind_large_cloud':'\\ud83c\\udf25',\n  'sun_behind_rain_cloud':'\\ud83c\\udf26',\n  'sun_behind_small_cloud':'\\ud83c\\udf24',\n  'sun_with_face':'\\ud83c\\udf1e',\n  'sunflower':'\\ud83c\\udf3b',\n  'sunglasses':'\\ud83d\\ude0e',\n  'sunny':'\\u2600\\ufe0f',\n  'sunrise':'\\ud83c\\udf05',\n  'sunrise_over_mountains':'\\ud83c\\udf04',\n  'surfing_man':'\\ud83c\\udfc4',\n  'surfing_woman':'\\ud83c\\udfc4&zwj;\\u2640\\ufe0f',\n  'sushi':'\\ud83c\\udf63',\n  'suspension_railway':'\\ud83d\\ude9f',\n  'sweat':'\\ud83d\\ude13',\n  'sweat_drops':'\\ud83d\\udca6',\n  'sweat_smile':'\\ud83d\\ude05',\n  'sweet_potato':'\\ud83c\\udf60',\n  'swimming_man':'\\ud83c\\udfca',\n  'swimming_woman':'\\ud83c\\udfca&zwj;\\u2640\\ufe0f',\n  'symbols':'\\ud83d\\udd23',\n  'synagogue':'\\ud83d\\udd4d',\n  'syringe':'\\ud83d\\udc89',\n  'taco':'\\ud83c\\udf2e',\n  'tada':'\\ud83c\\udf89',\n  'tanabata_tree':'\\ud83c\\udf8b',\n  'taurus':'\\u2649\\ufe0f',\n  'taxi':'\\ud83d\\ude95',\n  'tea':'\\ud83c\\udf75',\n  'telephone_receiver':'\\ud83d\\udcde',\n  'telescope':'\\ud83d\\udd2d',\n  'tennis':'\\ud83c\\udfbe',\n  'tent':'\\u26fa\\ufe0f',\n  'thermometer':'\\ud83c\\udf21',\n  'thinking':'\\ud83e\\udd14',\n  'thought_balloon':'\\ud83d\\udcad',\n  'ticket':'\\ud83c\\udfab',\n  'tickets':'\\ud83c\\udf9f',\n  'tiger':'\\ud83d\\udc2f',\n  'tiger2':'\\ud83d\\udc05',\n  'timer_clock':'\\u23f2',\n  'tipping_hand_man':'\\ud83d\\udc81&zwj;\\u2642\\ufe0f',\n  'tired_face':'\\ud83d\\ude2b',\n  'tm':'\\u2122\\ufe0f',\n  'toilet':'\\ud83d\\udebd',\n  'tokyo_tower':'\\ud83d\\uddfc',\n  'tomato':'\\ud83c\\udf45',\n  'tongue':'\\ud83d\\udc45',\n  'top':'\\ud83d\\udd1d',\n  'tophat':'\\ud83c\\udfa9',\n  'tornado':'\\ud83c\\udf2a',\n  'trackball':'\\ud83d\\uddb2',\n  'tractor':'\\ud83d\\ude9c',\n  'traffic_light':'\\ud83d\\udea5',\n  'train':'\\ud83d\\ude8b',\n  'train2':'\\ud83d\\ude86',\n  'tram':'\\ud83d\\ude8a',\n  'triangular_flag_on_post':'\\ud83d\\udea9',\n  'triangular_ruler':'\\ud83d\\udcd0',\n  'trident':'\\ud83d\\udd31',\n  'triumph':'\\ud83d\\ude24',\n  'trolleybus':'\\ud83d\\ude8e',\n  'trophy':'\\ud83c\\udfc6',\n  'tropical_drink':'\\ud83c\\udf79',\n  'tropical_fish':'\\ud83d\\udc20',\n  'truck':'\\ud83d\\ude9a',\n  'trumpet':'\\ud83c\\udfba',\n  'tulip':'\\ud83c\\udf37',\n  'tumbler_glass':'\\ud83e\\udd43',\n  'turkey':'\\ud83e\\udd83',\n  'turtle':'\\ud83d\\udc22',\n  'tv':'\\ud83d\\udcfa',\n  'twisted_rightwards_arrows':'\\ud83d\\udd00',\n  'two_hearts':'\\ud83d\\udc95',\n  'two_men_holding_hands':'\\ud83d\\udc6c',\n  'two_women_holding_hands':'\\ud83d\\udc6d',\n  'u5272':'\\ud83c\\ude39',\n  'u5408':'\\ud83c\\ude34',\n  'u55b6':'\\ud83c\\ude3a',\n  'u6307':'\\ud83c\\ude2f\\ufe0f',\n  'u6708':'\\ud83c\\ude37\\ufe0f',\n  'u6709':'\\ud83c\\ude36',\n  'u6e80':'\\ud83c\\ude35',\n  'u7121':'\\ud83c\\ude1a\\ufe0f',\n  'u7533':'\\ud83c\\ude38',\n  'u7981':'\\ud83c\\ude32',\n  'u7a7a':'\\ud83c\\ude33',\n  'umbrella':'\\u2614\\ufe0f',\n  'unamused':'\\ud83d\\ude12',\n  'underage':'\\ud83d\\udd1e',\n  'unicorn':'\\ud83e\\udd84',\n  'unlock':'\\ud83d\\udd13',\n  'up':'\\ud83c\\udd99',\n  'upside_down_face':'\\ud83d\\ude43',\n  'v':'\\u270c\\ufe0f',\n  'vertical_traffic_light':'\\ud83d\\udea6',\n  'vhs':'\\ud83d\\udcfc',\n  'vibration_mode':'\\ud83d\\udcf3',\n  'video_camera':'\\ud83d\\udcf9',\n  'video_game':'\\ud83c\\udfae',\n  'violin':'\\ud83c\\udfbb',\n  'virgo':'\\u264d\\ufe0f',\n  'volcano':'\\ud83c\\udf0b',\n  'volleyball':'\\ud83c\\udfd0',\n  'vs':'\\ud83c\\udd9a',\n  'vulcan_salute':'\\ud83d\\udd96',\n  'walking_man':'\\ud83d\\udeb6',\n  'walking_woman':'\\ud83d\\udeb6&zwj;\\u2640\\ufe0f',\n  'waning_crescent_moon':'\\ud83c\\udf18',\n  'waning_gibbous_moon':'\\ud83c\\udf16',\n  'warning':'\\u26a0\\ufe0f',\n  'wastebasket':'\\ud83d\\uddd1',\n  'watch':'\\u231a\\ufe0f',\n  'water_buffalo':'\\ud83d\\udc03',\n  'watermelon':'\\ud83c\\udf49',\n  'wave':'\\ud83d\\udc4b',\n  'wavy_dash':'\\u3030\\ufe0f',\n  'waxing_crescent_moon':'\\ud83c\\udf12',\n  'wc':'\\ud83d\\udebe',\n  'weary':'\\ud83d\\ude29',\n  'wedding':'\\ud83d\\udc92',\n  'weight_lifting_man':'\\ud83c\\udfcb\\ufe0f',\n  'weight_lifting_woman':'\\ud83c\\udfcb\\ufe0f&zwj;\\u2640\\ufe0f',\n  'whale':'\\ud83d\\udc33',\n  'whale2':'\\ud83d\\udc0b',\n  'wheel_of_dharma':'\\u2638\\ufe0f',\n  'wheelchair':'\\u267f\\ufe0f',\n  'white_check_mark':'\\u2705',\n  'white_circle':'\\u26aa\\ufe0f',\n  'white_flag':'\\ud83c\\udff3\\ufe0f',\n  'white_flower':'\\ud83d\\udcae',\n  'white_large_square':'\\u2b1c\\ufe0f',\n  'white_medium_small_square':'\\u25fd\\ufe0f',\n  'white_medium_square':'\\u25fb\\ufe0f',\n  'white_small_square':'\\u25ab\\ufe0f',\n  'white_square_button':'\\ud83d\\udd33',\n  'wilted_flower':'\\ud83e\\udd40',\n  'wind_chime':'\\ud83c\\udf90',\n  'wind_face':'\\ud83c\\udf2c',\n  'wine_glass':'\\ud83c\\udf77',\n  'wink':'\\ud83d\\ude09',\n  'wolf':'\\ud83d\\udc3a',\n  'woman':'\\ud83d\\udc69',\n  'woman_artist':'\\ud83d\\udc69&zwj;\\ud83c\\udfa8',\n  'woman_astronaut':'\\ud83d\\udc69&zwj;\\ud83d\\ude80',\n  'woman_cartwheeling':'\\ud83e\\udd38&zwj;\\u2640\\ufe0f',\n  'woman_cook':'\\ud83d\\udc69&zwj;\\ud83c\\udf73',\n  'woman_facepalming':'\\ud83e\\udd26&zwj;\\u2640\\ufe0f',\n  'woman_factory_worker':'\\ud83d\\udc69&zwj;\\ud83c\\udfed',\n  'woman_farmer':'\\ud83d\\udc69&zwj;\\ud83c\\udf3e',\n  'woman_firefighter':'\\ud83d\\udc69&zwj;\\ud83d\\ude92',\n  'woman_health_worker':'\\ud83d\\udc69&zwj;\\u2695\\ufe0f',\n  'woman_judge':'\\ud83d\\udc69&zwj;\\u2696\\ufe0f',\n  'woman_juggling':'\\ud83e\\udd39&zwj;\\u2640\\ufe0f',\n  'woman_mechanic':'\\ud83d\\udc69&zwj;\\ud83d\\udd27',\n  'woman_office_worker':'\\ud83d\\udc69&zwj;\\ud83d\\udcbc',\n  'woman_pilot':'\\ud83d\\udc69&zwj;\\u2708\\ufe0f',\n  'woman_playing_handball':'\\ud83e\\udd3e&zwj;\\u2640\\ufe0f',\n  'woman_playing_water_polo':'\\ud83e\\udd3d&zwj;\\u2640\\ufe0f',\n  'woman_scientist':'\\ud83d\\udc69&zwj;\\ud83d\\udd2c',\n  'woman_shrugging':'\\ud83e\\udd37&zwj;\\u2640\\ufe0f',\n  'woman_singer':'\\ud83d\\udc69&zwj;\\ud83c\\udfa4',\n  'woman_student':'\\ud83d\\udc69&zwj;\\ud83c\\udf93',\n  'woman_teacher':'\\ud83d\\udc69&zwj;\\ud83c\\udfeb',\n  'woman_technologist':'\\ud83d\\udc69&zwj;\\ud83d\\udcbb',\n  'woman_with_turban':'\\ud83d\\udc73&zwj;\\u2640\\ufe0f',\n  'womans_clothes':'\\ud83d\\udc5a',\n  'womans_hat':'\\ud83d\\udc52',\n  'women_wrestling':'\\ud83e\\udd3c&zwj;\\u2640\\ufe0f',\n  'womens':'\\ud83d\\udeba',\n  'world_map':'\\ud83d\\uddfa',\n  'worried':'\\ud83d\\ude1f',\n  'wrench':'\\ud83d\\udd27',\n  'writing_hand':'\\u270d\\ufe0f',\n  'x':'\\u274c',\n  'yellow_heart':'\\ud83d\\udc9b',\n  'yen':'\\ud83d\\udcb4',\n  'yin_yang':'\\u262f\\ufe0f',\n  'yum':'\\ud83d\\ude0b',\n  'zap':'\\u26a1\\ufe0f',\n  'zipper_mouth_face':'\\ud83e\\udd10',\n  'zzz':'\\ud83d\\udca4',\n\n  /* special emojis :P */\n  'octocat':  '<img alt=\":octocat:\" height=\"20\" width=\"20\" align=\"absmiddle\" src=\"https://assets-cdn.github.com/images/icons/emoji/octocat.png\">',\n  'showdown': '<span style=\"font-family: \\'Anonymous Pro\\', monospace; text-decoration: underline; text-decoration-style: dashed; text-decoration-color: #3e8b8a;text-underline-position: under;\">S</span>'\n};\n\r\n/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict';\n\n  var\n      /**\n       * Options used by this converter\n       * @private\n       * @type {{}}\n       */\n      options = {},\n\n      /**\n       * Language extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      langExtensions = [],\n\n      /**\n       * Output modifiers extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      outputModifiers = [],\n\n      /**\n       * Event listeners\n       * @private\n       * @type {{}}\n       */\n      listeners = {},\n\n      /**\n       * The flavor set in this converter\n       */\n      setConvFlavor = setFlavor,\n\n      /**\n       * Metadata of the document\n       * @type {{parsed: {}, raw: string, format: string}}\n       */\n      metadata = {\n        parsed: {},\n        raw: '',\n        format: ''\n      };\n\n  _constructor();\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor () {\n    converterOptions = converterOptions || {};\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt];\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt];\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n      ' was passed instead.');\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension);\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension (ext, name) {\n\n    name = name || null;\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext);\n      name = ext;\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!');\n        legacyExtensionLoading(showdown.extensions[ext], ext);\n        return;\n        // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext];\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExt = validate(ext, name);\n    if (!validExt.valid) {\n      throw Error(validExt.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n      }\n      if (ext[i].hasOwnProperty('listeners')) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln]);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading (ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter());\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n    var valid = validate(ext, name);\n\n    if (!valid.valid) {\n      throw Error(valid.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!');\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen (name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = [];\n    }\n    listeners[name].push(callback);\n  }\n\n  function rTrimInputText (text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n    return text.replace(rgx, '');\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n        if (nText && typeof nText !== 'undefined') {\n          text = nText;\n        }\n      }\n    }\n    return text;\n  };\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback);\n    return this;\n  };\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text;\n    }\n\n    var globals = {\n      gHtmlBlocks:     [],\n      gHtmlMdBlocks:   [],\n      gHtmlSpans:      [],\n      gUrls:           {},\n      gTitles:         {},\n      gDimensions:     {},\n      gListLevel:      0,\n      hashLinkCounts:  {},\n      langExtensions:  langExtensions,\n      outputModifiers: outputModifiers,\n      converter:       this,\n      ghCodeBlocks:    [],\n      metadata: {\n        parsed: {},\n        raw: '',\n        format: ''\n      }\n    };\n\n    // This lets us use ¨ trema as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/¨/g, '¨T');\n\n    // Replace $ with ¨D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '¨D');\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\n    // Stardardize line spaces\n    text = text.replace(/\\u00A0/g, '&nbsp;');\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text);\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    text = '\\n\\n' + text + '\\n\\n';\n\n    // detab\n    text = showdown.subParser('detab')(text, options, globals);\n\n    /**\n     * Strip any lines consisting only of spaces and tabs.\n     * This makes subsequent regexs easier to write, because we can\n     * match consecutive blank lines with /\\n+/ instead of something\n     * contorted like /[ \\t]*\\n+/\n     */\n    text = text.replace(/^[ \\t]+$/mg, '');\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // run the sub parsers\n    text = showdown.subParser('metadata')(text, options, globals);\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n    text = showdown.subParser('hashCodeTags')(text, options, globals);\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n    text = showdown.subParser('blockGamut')(text, options, globals);\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/¨D/g, '$$');\n\n    // attacklab: Restore tremas\n    text = text.replace(/¨T/g, '¨');\n\n    // render a complete html document instead of a partial if the option is enabled\n    text = showdown.subParser('completeHTMLDocument')(text, options, globals);\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // update metadata\n    metadata = globals.metadata;\n    return text;\n  };\n\n  /**\n   * Converts an HTML string into a markdown string\n   * @param src\n   * @param [HTMLParser] A WHATWG DOM and HTML parser, such as JSDOM. If none is supplied, window.document will be used.\n   * @returns {string}\n   */\n  this.makeMarkdown = this.makeMd = function (src, HTMLParser) {\n\n    // replace \\r\\n with \\n\n    src = src.replace(/\\r\\n/g, '\\n');\n    src = src.replace(/\\r/g, '\\n'); // old macs\n\n    // due to an edge case, we need to find this: > <\n    // to prevent removing of non silent white spaces\n    // ex: <em>this is</em> <strong>sparta</strong>\n    src = src.replace(/>[ \\t]+</, '>¨NBSP;<');\n\n    if (!HTMLParser) {\n      if (window && window.document) {\n        HTMLParser = window.document;\n      } else {\n        throw new Error('HTMLParser is undefined. If in a webworker or nodejs environment, you need to provide a WHATWG DOM and HTML such as JSDOM');\n      }\n    }\n\n    var doc = HTMLParser.createElement('div');\n    doc.innerHTML = src;\n\n    var globals = {\n      preList: substitutePreCodeTags(doc)\n    };\n\n    // remove all newlines and collapse spaces\n    clean(doc);\n\n    // some stuff, like accidental reference links must now be escaped\n    // TODO\n    // doc.innerHTML = doc.innerHTML.replace(/\\[[\\S\\t ]]/);\n\n    var nodes = doc.childNodes,\n        mdDoc = '';\n\n    for (var i = 0; i < nodes.length; i++) {\n      mdDoc += showdown.subParser('makeMarkdown.node')(nodes[i], globals);\n    }\n\n    function clean (node) {\n      for (var n = 0; n < node.childNodes.length; ++n) {\n        var child = node.childNodes[n];\n        if (child.nodeType === 3) {\n          if (!/\\S/.test(child.nodeValue) && !/^[ ]+$/.test(child.nodeValue)) {\n            node.removeChild(child);\n            --n;\n          } else {\n            child.nodeValue = child.nodeValue.split('\\n').join(' ');\n            child.nodeValue = child.nodeValue.replace(/(\\s)+/g, '$1');\n          }\n        } else if (child.nodeType === 1) {\n          clean(child);\n        }\n      }\n    }\n\n    // find all pre tags and replace contents with placeholder\n    // we need this so that we can remove all indentation from html\n    // to ease up parsing\n    function substitutePreCodeTags (doc) {\n\n      var pres = doc.querySelectorAll('pre'),\n          presPH = [];\n\n      for (var i = 0; i < pres.length; ++i) {\n\n        if (pres[i].childElementCount === 1 && pres[i].firstChild.tagName.toLowerCase() === 'code') {\n          var content = pres[i].firstChild.innerHTML.trim(),\n              language = pres[i].firstChild.getAttribute('data-language') || '';\n\n          // if data-language attribute is not defined, then we look for class language-*\n          if (language === '') {\n            var classes = pres[i].firstChild.className.split(' ');\n            for (var c = 0; c < classes.length; ++c) {\n              var matches = classes[c].match(/^language-(.+)$/);\n              if (matches !== null) {\n                language = matches[1];\n                break;\n              }\n            }\n          }\n\n          // unescape html entities in content\n          content = showdown.helper.unescapeHTMLEntities(content);\n\n          presPH.push(content);\n          pres[i].outerHTML = '<precode language=\"' + language + '\" precodenum=\"' + i.toString() + '\"></precode>';\n        } else {\n          presPH.push(pres[i].innerHTML);\n          pres[i].innerHTML = '';\n          pres[i].setAttribute('prenum', i.toString());\n        }\n      }\n      return presPH;\n    }\n\n    return mdDoc;\n  };\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value;\n  };\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key];\n  };\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options;\n  };\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null;\n    _parseExtension(extension, name);\n  };\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName);\n  };\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (!flavor.hasOwnProperty(name)) {\n      throw Error(name + ' flavor was not found');\n    }\n    var preset = flavor[name];\n    setConvFlavor = name;\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        options[option] = preset[option];\n      }\n    }\n  };\n\n  /**\n   * Get the currently set flavor of this converter\n   * @returns {string}\n   */\n  this.getFlavor = function () {\n    return setConvFlavor;\n  };\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension];\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a];\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions.splice(i, 1);\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++ii) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers.splice(ii, 1);\n        }\n      }\n    }\n  };\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    };\n  };\n\n  /**\n   * Get the metadata of the previously parsed document\n   * @param raw\n   * @returns {string|{}}\n   */\n  this.getMetadata = function (raw) {\n    if (raw) {\n      return metadata.raw;\n    } else {\n      return metadata.parsed;\n    }\n  };\n\n  /**\n   * Get the metadata format of the previously parsed document\n   * @returns {string}\n   */\n  this.getMetadataFormat = function () {\n    return metadata.format;\n  };\n\n  /**\n   * Private: set a single key, value metadata pair\n   * @param {string} key\n   * @param {string} value\n   */\n  this._setMetadataPair = function (key, value) {\n    metadata.parsed[key] = value;\n  };\n\n  /**\n   * Private: set metadata format\n   * @param {string} format\n   */\n  this._setMetadataFormat = function (format) {\n    metadata.format = format;\n  };\n\n  /**\n   * Private: set metadata raw text\n   * @param {string} raw\n   */\n  this._setMetadataRaw = function (raw) {\n    metadata.raw = raw;\n  };\n};\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\n  var writeAnchorTag = function (wholeMatch, linkText, linkId, url, m5, m6, title) {\n    if (showdown.helper.isUndefined(title)) {\n      title = '';\n    }\n    linkId = linkId.toLowerCase();\n\n    // Special case for explicit empty url\n    if (wholeMatch.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m) > -1) {\n      url = '';\n    } else if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId];\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId];\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    //url = showdown.helper.escapeCharacters(url, '*_', false); // replaced line to improve performance\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n\n    var result = '<a href=\"' + url + '\"';\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;');\n      //title = showdown.helper.escapeCharacters(title, '*_', false); // replaced line to improve performance\n      title = title.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    // optionLinksInNewWindow only applies\n    // to external links. Hash links (#) open in same page\n    if (options.openLinksInNewWindow && !/^#/.test(url)) {\n      // escaped _\n      result += ' rel=\"noopener noreferrer\" target=\"¨E95Eblank\"';\n    }\n\n    result += '>' + linkText + '</a>';\n\n    return result;\n  };\n\n  // First, handle reference-style links: [link text] [id]\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)] ?(?:\\n *)?\\[(.*?)]()()()()/g, writeAnchorTag);\n\n  // Next, inline-style links: [link text](url \"optional title\")\n  // cases with crazy urls like ./image/cat1).png\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<([^>]*)>(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,\n    writeAnchorTag);\n\n  // normal cases\n  text = text.replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,\n    writeAnchorTag);\n\n  // handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  text = text.replace(/\\[([^\\[\\]]+)]()()()()()/g, writeAnchorTag);\n\n  // Lastly handle GithubMentions if option is enabled\n  if (options.ghMentions) {\n    text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d]+(?:[a-z\\d.-]+?[a-z\\d]+)*))/gmi, function (wm, st, escape, mentions, username) {\n      if (escape === '\\\\') {\n        return st + mentions;\n      }\n\n      //check if options.ghMentionsLink is a string\n      if (!showdown.helper.isString(options.ghMentionsLink)) {\n        throw new Error('ghMentionsLink option must be a string');\n      }\n      var lnk = options.ghMentionsLink.replace(/\\{u}/g, username),\n          target = '';\n      if (options.openLinksInNewWindow) {\n        target = ' rel=\"noopener noreferrer\" target=\"¨E95Eblank\"';\n      }\n      return st + '<a href=\"' + lnk + '\"' + target + '>' + mentions + '</a>';\n    });\n  }\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\n  return text;\n});\n\r\n// url allowed chars [a-z\\d_.~:/?#[]@!$&'()*+,;=-]\n\nvar simpleURLRegex  = /([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+?\\.[^'\">\\s]+?)()(\\1)?(?=\\s|$)(?![\"<>])/gi,\n    simpleURLRegex2 = /([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?,()\\[\\]])?(\\1)?(?=\\s|$)(?![\"<>])/gi,\n    delimUrlRegex   = /()<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)()>()/gi,\n    simpleMailRegex = /(^|\\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?=$|\\s)/gmi,\n    delimMailRegex  = /<()(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi,\n\n    replaceLink = function (options) {\n      'use strict';\n      return function (wm, leadingMagicChars, link, m2, m3, trailingPunctuation, trailingMagicChars) {\n        link = link.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n        var lnkTxt = link,\n            append = '',\n            target = '',\n            lmc    = leadingMagicChars || '',\n            tmc    = trailingMagicChars || '';\n        if (/^www\\./i.test(link)) {\n          link = link.replace(/^www\\./i, 'http://www.');\n        }\n        if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n          append = trailingPunctuation;\n        }\n        if (options.openLinksInNewWindow) {\n          target = ' rel=\"noopener noreferrer\" target=\"¨E95Eblank\"';\n        }\n        return lmc + '<a href=\"' + link + '\"' + target + '>' + lnkTxt + '</a>' + append + tmc;\n      };\n    },\n\n    replaceMail = function (options, globals) {\n      'use strict';\n      return function (wholeMatch, b, mail) {\n        var href = 'mailto:';\n        b = b || '';\n        mail = showdown.subParser('unescapeSpecialChars')(mail, options, globals);\n        if (options.encodeEmails) {\n          href = showdown.helper.encodeEmailAddress(href + mail);\n          mail = showdown.helper.encodeEmailAddress(mail);\n        } else {\n          href = href + mail;\n        }\n        return b + '<a href=\"' + href + '\">' + mail + '</a>';\n      };\n    };\n\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\n  text = text.replace(delimUrlRegex, replaceLink(options));\n  text = text.replace(delimMailRegex, replaceMail(options, globals));\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\n  return text;\n});\n\nshowdown.subParser('simplifiedAutoLinks', function (text, options, globals) {\n  'use strict';\n\n  if (!options.simplifiedAutoLink) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('simplifiedAutoLinks.before', text, options, globals);\n\n  if (options.excludeTrailingPunctuationFromURLs) {\n    text = text.replace(simpleURLRegex2, replaceLink(options));\n  } else {\n    text = text.replace(simpleURLRegex, replaceLink(options));\n  }\n  text = text.replace(simpleMailRegex, replaceMail(options, globals));\n\n  text = globals.converter._dispatch('simplifiedAutoLinks.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals);\n  text = showdown.subParser('headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  text = showdown.subParser('horizontalRule')(text, options, globals);\n\n  text = showdown.subParser('lists')(text, options, globals);\n  text = showdown.subParser('codeBlocks')(text, options, globals);\n  text = showdown.subParser('tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\n  return text;\n});\n\r\nshowdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\n  // add a couple extra lines after the text and endtext mark\n  text = text + '\\n\\n';\n\n  var rgx = /(^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+/gm;\n\n  if (options.splitAdjacentBlockquotes) {\n    rgx = /^ {0,3}>[\\s\\S]*?(?:\\n\\n)/gm;\n  }\n\n  text = text.replace(rgx, function (bq) {\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, ''); // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/¨0/g, '');\n\n    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ');\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1;\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '¨0');\n      pre = pre.replace(/¨0/g, '');\n      return pre;\n    });\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n  });\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\n  // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=¨0))/g;\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n        nextChar = m2,\n        end = '\\n';\n\n    codeblock = showdown.subParser('outdent')(codeblock, options, globals);\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = '';\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n  });\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\n  if (typeof (text) === 'undefined') {\n    text = '';\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3;\n      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c, options, globals);\n      c = m1 + '<code>' + c + '</code>';\n      c = showdown.subParser('hashHTMLSpans')(c, options, globals);\n      return c;\n    }\n  );\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Create a full HTML document from the processed markdown\n */\nshowdown.subParser('completeHTMLDocument', function (text, options, globals) {\n  'use strict';\n\n  if (!options.completeHTMLDocument) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('completeHTMLDocument.before', text, options, globals);\n\n  var doctype = 'html',\n      doctypeParsed = '<!DOCTYPE HTML>\\n',\n      title = '',\n      charset = '<meta charset=\"utf-8\">\\n',\n      lang = '',\n      metadata = '';\n\n  if (typeof globals.metadata.parsed.doctype !== 'undefined') {\n    doctypeParsed = '<!DOCTYPE ' +  globals.metadata.parsed.doctype + '>\\n';\n    doctype = globals.metadata.parsed.doctype.toString().toLowerCase();\n    if (doctype === 'html' || doctype === 'html5') {\n      charset = '<meta charset=\"utf-8\">';\n    }\n  }\n\n  for (var meta in globals.metadata.parsed) {\n    if (globals.metadata.parsed.hasOwnProperty(meta)) {\n      switch (meta.toLowerCase()) {\n        case 'doctype':\n          break;\n\n        case 'title':\n          title = '<title>' +  globals.metadata.parsed.title + '</title>\\n';\n          break;\n\n        case 'charset':\n          if (doctype === 'html' || doctype === 'html5') {\n            charset = '<meta charset=\"' + globals.metadata.parsed.charset + '\">\\n';\n          } else {\n            charset = '<meta name=\"charset\" content=\"' + globals.metadata.parsed.charset + '\">\\n';\n          }\n          break;\n\n        case 'language':\n        case 'lang':\n          lang = ' lang=\"' + globals.metadata.parsed[meta] + '\"';\n          metadata += '<meta name=\"' + meta + '\" content=\"' + globals.metadata.parsed[meta] + '\">\\n';\n          break;\n\n        default:\n          metadata += '<meta name=\"' + meta + '\" content=\"' + globals.metadata.parsed[meta] + '\">\\n';\n      }\n    }\n  }\n\n  text = doctypeParsed + '<html' + lang + '>\\n<head>\\n' + title + charset + metadata + '</head>\\n<body>\\n' + text.trim() + '\\n</body>\\n</html>';\n\n  text = globals.converter._dispatch('completeHTMLDocument.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('detab.before', text, options, globals);\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '¨A¨B');\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/¨B(.+?)¨A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' ';\n    }\n\n    return leadingText;\n  });\n\n  // clean up sentinels\n  text = text.replace(/¨A/g, '    ');  // g_tab_width\n  text = text.replace(/¨B/g, '');\n\n  text = globals.converter._dispatch('detab.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('ellipsis', function (text, options, globals) {\n  'use strict';\n\n  if (!options.ellipsis) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('ellipsis.before', text, options, globals);\n\n  text = text.replace(/\\.\\.\\./g, '…');\n\n  text = globals.converter._dispatch('ellipsis.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Turn emoji codes into emojis\n *\n * List of supported emojis: https://github.com/showdownjs/showdown/wiki/Emojis\n */\nshowdown.subParser('emoji', function (text, options, globals) {\n  'use strict';\n\n  if (!options.emoji) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('emoji.before', text, options, globals);\n\n  var emojiRgx = /:([\\S]+?):/g;\n\n  text = text.replace(emojiRgx, function (wm, emojiCode) {\n    if (showdown.helper.emojis.hasOwnProperty(emojiCode)) {\n      return showdown.helper.emojis[emojiCode];\n    }\n    return wm;\n  });\n\n  text = globals.converter._dispatch('emoji.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeAmpsAndAngles.before', text, options, globals);\n\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?$!])/gi, '&lt;');\n\n  // Encode <\n  text = text.replace(/</g, '&lt;');\n\n  // Encode >\n  text = text.replace(/>/g, '&gt;');\n\n  text = globals.converter._dispatch('encodeAmpsAndAngles.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeBackslashEscapes.before', text, options, globals);\n\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+.!~=|:-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeBackslashEscapes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('encodeCode.before', text, options, globals);\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text\n    .replace(/&/g, '&amp;')\n  // Do the angle bracket song and dance:\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n  // Now, escape characters that are magic in Markdown:\n    .replace(/([*_{}\\[\\]\\\\=~-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeCode.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _ ~ =] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.before', text, options, globals);\n\n  // Build a regex to find HTML tags.\n  var tags     = /<\\/?[a-z\\d_:-]+(?:[\\s]+[\\s\\S]+?)?>/gi,\n      comments = /<!(--(?:(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>/gi;\n\n  text = text.replace(tags, function (wholeMatch) {\n    return wholeMatch\n      .replace(/(.)<\\/?code>(?=.)/g, '$1`')\n      .replace(/([\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\n  });\n\n  text = text.replace(comments, function (wholeMatch) {\n    return wholeMatch\n      .replace(/([\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\n  });\n\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict';\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\n  text += '¨0';\n\n  text = text.replace(/(?:^|\\n)(?: {0,3})(```+|~~~+)(?: *)([^\\s`~]*)\\n([\\s\\S]*?)\\n(?: {0,3})\\1/g, function (wholeMatch, delim, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n});\n\r\nshowdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashBlock.before', text, options, globals);\n  text = text.replace(/(^\\n+|\\n+$)/g, '');\n  text = '\\n\\n¨K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n  text = globals.converter._dispatch('hashBlock.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash and escape <code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '¨C' + (globals.gHtmlSpans.push(codeblock) - 1) + 'C';\n  };\n\n  // Hash naked <code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '<code\\\\b[^>]*>', '</code>', 'gim');\n\n  text = globals.converter._dispatch('hashCodeTags.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('hashElement', function (text, options, globals) {\n  'use strict';\n\n  return function (wholeMatch, m1) {\n    var blockText = m1;\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n');\n    blockText = blockText.replace(/^\\n/, '');\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '');\n\n    // Replace the element text with a marker (\"¨KxK\" where x is its key)\n    blockText = '\\n\\n¨K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\n    return blockText;\n  };\n});\n\r\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLBlocks.before', text, options, globals);\n\n  var blockTags = [\n        'pre',\n        'div',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'blockquote',\n        'table',\n        'dl',\n        'ol',\n        'ul',\n        'script',\n        'noscript',\n        'form',\n        'fieldset',\n        'iframe',\n        'math',\n        'style',\n        'section',\n        'header',\n        'footer',\n        'nav',\n        'article',\n        'aside',\n        'address',\n        'audio',\n        'canvas',\n        'figure',\n        'hgroup',\n        'output',\n        'video',\n        'p'\n      ],\n      repFunc = function (wholeMatch, match, left, right) {\n        var txt = wholeMatch;\n        // check if this html element is marked as markdown\n        // if so, it's contents should be parsed as markdown\n        if (left.search(/\\bmarkdown\\b/) !== -1) {\n          txt = left + globals.converter.makeHtml(match) + right;\n        }\n        return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n      };\n\n  if (options.backslashEscapesHTMLTags) {\n    // encode backslash escaped HTML tags\n    text = text.replace(/\\\\<(\\/?[^>]+?)>/g, function (wm, inside) {\n      return '&lt;' + inside + '&gt;';\n    });\n  }\n\n  // hash HTML Blocks\n  for (var i = 0; i < blockTags.length; ++i) {\n\n    var opTagPos,\n        rgx1     = new RegExp('^ {0,3}(<' + blockTags[i] + '\\\\b[^>]*>)', 'im'),\n        patLeft  = '<' + blockTags[i] + '\\\\b[^>]*>',\n        patRight = '</' + blockTags[i] + '>';\n    // 1. Look for the first position of the first opening HTML tag in the text\n    while ((opTagPos = showdown.helper.regexIndexOf(text, rgx1)) !== -1) {\n\n      // if the HTML tag is \\ escaped, we need to escape it and break\n\n\n      //2. Split the text in that position\n      var subTexts = showdown.helper.splitAtIndex(text, opTagPos),\n          //3. Match recursively\n          newSubText1 = showdown.helper.replaceRecursiveRegExp(subTexts[1], repFunc, patLeft, patRight, 'im');\n\n      // prevent an infinite loop\n      if (newSubText1 === subTexts[1]) {\n        break;\n      }\n      text = subTexts[0].concat(newSubText1);\n    }\n  }\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // Special case for standalone HTML comments\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n    return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n  }, '^ {0,3}<!--', '-->', 'gm');\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  text = globals.converter._dispatch('hashHTMLBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLSpans.before', text, options, globals);\n\n  function hashHTMLSpan (html) {\n    return '¨C' + (globals.gHtmlSpans.push(html) - 1) + 'C';\n  }\n\n  // Hash Self Closing tags\n  text = text.replace(/<[^>]+?\\/>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags without properties\n  text = text.replace(/<([^>]+?)>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags with properties\n  text = text.replace(/<([^>]+?)\\s[^>]+?>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash self closing tags without />\n  text = text.replace(/<[^>]+?>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  /*showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');*/\n\n  text = globals.converter._dispatch('hashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unhashHTMLSpans.before', text, options, globals);\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    var repText = globals.gHtmlSpans[i],\n        // limiter to prevent infinite loop (assume 10 as limit for recurse)\n        limit = 0;\n\n    while (/¨C(\\d+)C/.test(repText)) {\n      var num = RegExp.$1;\n      repText = repText.replace('¨C' + num + 'C', globals.gHtmlSpans[num]);\n      if (limit === 10) {\n        console.error('maximum nesting of 10 spans reached!!!');\n        break;\n      }\n      ++limit;\n    }\n    text = text.replace('¨C' + i + 'C', repText);\n  }\n\n  text = globals.converter._dispatch('unhashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash and escape <pre><code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashPreCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  };\n\n  // Hash <pre><code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n\n  text = globals.converter._dispatch('hashPreCodeTags.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('headers', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('headers.before', text, options, globals);\n\n  var headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n\n      // Set text-style headers:\n      //\tHeader 1\n      //\t========\n      //\n      //\tHeader 2\n      //\t--------\n      //\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart + 1,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;\n\n  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\n    var hText = m2;\n    if (options.customizedHeaderId) {\n      hText = m2.replace(/\\s?\\{([^{]+?)}\\s*$/, '');\n    }\n\n    var span = showdown.subParser('spanGamut')(hText, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n        hLevel = headerLevelStart - 1 + m1.length,\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\n    return showdown.subParser('hashBlock')(header, options, globals);\n  });\n\n  function headerId (m) {\n    var title,\n        prefix;\n\n    // It is separate from other options to allow combining prefix and customized\n    if (options.customizedHeaderId) {\n      var match = m.match(/\\{([^{]+?)}\\s*$/);\n      if (match && match[1]) {\n        m = match[1];\n      }\n    }\n\n    title = m;\n\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (showdown.helper.isString(options.prefixHeaderId)) {\n      prefix = options.prefixHeaderId;\n    } else if (options.prefixHeaderId === true) {\n      prefix = 'section-';\n    } else {\n      prefix = '';\n    }\n\n    if (!options.rawPrefixHeaderId) {\n      title = prefix + title;\n    }\n\n    if (options.ghCompatibleHeaderId) {\n      title = title\n        .replace(/ /g, '-')\n        // replace previously escaped chars (&, ¨ and $)\n        .replace(/&amp;/g, '')\n        .replace(/¨T/g, '')\n        .replace(/¨D/g, '')\n        // replace rest of the chars (&~$ are repeated as they might have been escaped)\n        // borrowed from github's redcarpet (some they should produce similar results)\n        .replace(/[&+$,\\/:;=?@\"#{}|^¨~\\[\\]`\\\\*)(%.!'<>]/g, '')\n        .toLowerCase();\n    } else if (options.rawHeaderId) {\n      title = title\n        .replace(/ /g, '-')\n        // replace previously escaped chars (&, ¨ and $)\n        .replace(/&amp;/g, '&')\n        .replace(/¨T/g, '¨')\n        .replace(/¨D/g, '$')\n        // replace \" and '\n        .replace(/[\"']/g, '-')\n        .toLowerCase();\n    } else {\n      title = title\n        .replace(/[^\\w]/g, '')\n        .toLowerCase();\n    }\n\n    if (options.rawPrefixHeaderId) {\n      title = prefix + title;\n    }\n\n    if (globals.hashLinkCounts[title]) {\n      title = title + '-' + (globals.hashLinkCounts[title]++);\n    } else {\n      globals.hashLinkCounts[title] = 1;\n    }\n    return title;\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('horizontalRule', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('horizontalRule.before', text, options, globals);\n\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n  text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n\n  text = globals.converter._dispatch('horizontalRule.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('images.before', text, options, globals);\n\n  var inlineRegExp      = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,\n      crazyRegExp       = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<([^>]*)>(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(?:([\"'])([^\"]*?)\\6))?[ \\t]?\\)/g,\n      base64RegExp      = /!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,\n      referenceRegExp   = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[([\\s\\S]*?)]()()()()()/g,\n      refShortcutRegExp = /!\\[([^\\[\\]]+)]()()()()()/g;\n\n  function writeImageTagBase64 (wholeMatch, altText, linkId, url, width, height, m5, title) {\n    url = url.replace(/\\s/g, '');\n    return writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title);\n  }\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls   = globals.gUrls,\n        gTitles = globals.gTitles,\n        gDims   = globals.gDimensions;\n\n    linkId = linkId.toLowerCase();\n\n    if (!title) {\n      title = '';\n    }\n    // Special case for explicit empty url\n    if (wholeMatch.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m) > -1) {\n      url = '';\n\n    } else if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId];\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId];\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width;\n          height = gDims[linkId].height;\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    altText = altText\n      .replace(/\"/g, '&quot;')\n    //altText = showdown.helper.escapeCharacters(altText, '*_', false);\n      .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n    //url = showdown.helper.escapeCharacters(url, '*_', false);\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\n    if (title && showdown.helper.isString(title)) {\n      title = title\n        .replace(/\"/g, '&quot;')\n      //title = showdown.helper.escapeCharacters(title, '*_', false);\n        .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    if (width && height) {\n      width  = (width === '*') ? 'auto' : width;\n      height = (height === '*') ? 'auto' : height;\n\n      result += ' width=\"' + width + '\"';\n      result += ' height=\"' + height + '\"';\n    }\n\n    result += ' />';\n\n    return result;\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag);\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n\n  // base64 encoded images\n  text = text.replace(base64RegExp, writeImageTagBase64);\n\n  // cases with crazy urls like ./image/cat1).png\n  text = text.replace(crazyRegExp, writeImageTag);\n\n  // normal cases\n  text = text.replace(inlineRegExp, writeImageTag);\n\n  // handle reference-style shortcuts: ![img text]\n  text = text.replace(refShortcutRegExp, writeImageTag);\n\n  text = globals.converter._dispatch('images.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\n  // it's faster to have 3 separate regexes for each case than have just one\n  // because of backtracing, in some cases, it could lead to an exponential effect\n  // called \"catastrophic backtrace\". Ominous!\n\n  function parseInside (txt, left, right) {\n    /*\n    if (options.simplifiedAutoLink) {\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\n    }\n    */\n    return left + txt + right;\n  }\n\n  // Parse underscores\n  if (options.literalMidWordUnderscores) {\n    text = text.replace(/\\b___(\\S[\\s\\S]*?)___\\b/g, function (wm, txt) {\n      return parseInside (txt, '<strong><em>', '</em></strong>');\n    });\n    text = text.replace(/\\b__(\\S[\\s\\S]*?)__\\b/g, function (wm, txt) {\n      return parseInside (txt, '<strong>', '</strong>');\n    });\n    text = text.replace(/\\b_(\\S[\\s\\S]*?)_\\b/g, function (wm, txt) {\n      return parseInside (txt, '<em>', '</em>');\n    });\n  } else {\n    text = text.replace(/___(\\S[\\s\\S]*?)___/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\n    });\n    text = text.replace(/__(\\S[\\s\\S]*?)__/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\n    });\n    text = text.replace(/_([^\\s_][\\s\\S]*?)_/g, function (wm, m) {\n      // !/^_[^_]/.test(m) - test if it doesn't start with __ (since it seems redundant, we removed it)\n      return (/\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\n    });\n  }\n\n  // Now parse asterisks\n  if (options.literalMidWordAsterisks) {\n    text = text.replace(/([^*]|^)\\B\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<strong><em>', '</em></strong>');\n    });\n    text = text.replace(/([^*]|^)\\B\\*\\*(\\S[\\s\\S]*?)\\*\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<strong>', '</strong>');\n    });\n    text = text.replace(/([^*]|^)\\B\\*(\\S[\\s\\S]*?)\\*\\B(?!\\*)/g, function (wm, lead, txt) {\n      return parseInside (txt, lead + '<em>', '</em>');\n    });\n  } else {\n    text = text.replace(/\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\n    });\n    text = text.replace(/\\*\\*(\\S[\\s\\S]*?)\\*\\*/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\n    });\n    text = text.replace(/\\*([^\\s*][\\s\\S]*?)\\*/g, function (wm, m) {\n      // !/^\\*[^*]/.test(m) - test if it doesn't start with ** (since it seems redundant, we removed it)\n      return (/\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\n    });\n  }\n\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict';\n\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++;\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '¨0';\n\n    var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n        isParagraphed = (/\\n[ \\t]*\\n(?!¨0)/.test(listStr));\n\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n    // which is a syntax breaking change\n    // activating this option reverts to old behavior\n    if (options.disableForced4SpacesIndentedSublists) {\n      rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n    }\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '');\n\n      var item = showdown.subParser('outdent')(m4, options, globals),\n          bulletStyle = '';\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n          if (checked) {\n            otp += ' checked';\n          }\n          otp += '>';\n          return otp;\n        });\n      }\n\n      // ISSUE #312\n      // This input: - - - a\n      // causes trouble to the parser, since it interprets it as:\n      // <ul><li><li><li>a</li></li></li></ul>\n      // instead of:\n      // <ul><li>- - a</li></ul>\n      // So, to prevent it, we will put a marker (¨A)in the beginning of the line\n      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\n      item = item.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function (wm2) {\n        return '¨A' + wm2;\n      });\n\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n        item = showdown.subParser('blockGamut')(item, options, globals);\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals);\n        item = item.replace(/\\n$/, ''); // chomp(item)\n        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\n\n        // Colapse double linebreaks\n        item = item.replace(/\\n\\n+/g, '\\n\\n');\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals);\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals);\n        }\n      }\n\n      // now we need to remove the marker (¨A)\n      item = item.replace('¨A', '');\n      // we can finally wrap the line in list item tags\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\n';\n\n      return item;\n    });\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/¨0/g, '');\n\n    globals.gListLevel--;\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '');\n    }\n\n    return listStr;\n  }\n\n  function styleStartNumber (list, listType) {\n    // check if ol and starts by a number different than 1\n    if (listType === 'ol') {\n      var res = list.match(/^ *(\\d+)\\./);\n      if (res && res[1] !== '1') {\n        return ' start=\"' + res[1] + '\"';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists (list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\n        result = '';\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL (txt) {\n        var pos = txt.search(counterRxg),\n            style = styleStartNumber(list, listType);\n        if (pos !== -1) {\n          // slice\n          result += '\\n\\n<' + listType + style + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul';\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\n\n          //recurse\n          parseCL(txt.slice(pos));\n        } else {\n          result += '\\n\\n<' + listType + style + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n        }\n      })(list);\n    } else {\n      var style = styleStartNumber(list, listType);\n      result = '\\n\\n<' + listType + style + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n    }\n\n    return result;\n  }\n\n  /** Start of list parsing **/\n  text = globals.converter._dispatch('lists.before', text, options, globals);\n  // add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '¨0';\n\n  if (globals.gListLevel) {\n    text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, list, m2) {\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, true);\n      }\n    );\n  } else {\n    text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, m1, list, m3) {\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, false);\n      }\n    );\n  }\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n  text = globals.converter._dispatch('lists.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Parse metadata at the top of the document\n */\nshowdown.subParser('metadata', function (text, options, globals) {\n  'use strict';\n\n  if (!options.metadata) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('metadata.before', text, options, globals);\n\n  function parseMetadataContents (content) {\n    // raw is raw so it's not changed in any way\n    globals.metadata.raw = content;\n\n    // escape chars forbidden in html attributes\n    // double quotes\n    content = content\n      // ampersand first\n      .replace(/&/g, '&amp;')\n      // double quotes\n      .replace(/\"/g, '&quot;');\n\n    content = content.replace(/\\n {4}/g, ' ');\n    content.replace(/^([\\S ]+): +([\\s\\S]+?)$/gm, function (wm, key, value) {\n      globals.metadata.parsed[key] = value;\n      return '';\n    });\n  }\n\n  text = text.replace(/^\\s*«««+(\\S*?)\\n([\\s\\S]+?)\\n»»»+\\n/, function (wholematch, format, content) {\n    parseMetadataContents(content);\n    return '¨M';\n  });\n\n  text = text.replace(/^\\s*---+(\\S*?)\\n([\\s\\S]+?)\\n---+\\n/, function (wholematch, format, content) {\n    if (format) {\n      globals.metadata.format = format;\n    }\n    parseMetadataContents(content);\n    return '¨M';\n  });\n\n  text = text.replace(/¨M/g, '');\n\n  text = globals.converter._dispatch('metadata.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('outdent.before', text, options, globals);\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '¨0'); // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/¨0/g, '');\n\n  text = globals.converter._dispatch('outdent.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n\n  var grafs = text.split(/\\n{2,}/g),\n      grafsOut = [],\n      end = grafs.length; // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i];\n    // if this is an HTML marker, copy it\n    if (str.search(/¨(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str);\n\n    // test for presence of characters to prevent empty lines being parsed\n    // as paragraphs (resulting in undesired extra empty paragraphs)\n    } else if (str.search(/\\S/) >= 0) {\n      str = showdown.subParser('spanGamut')(str, options, globals);\n      str = str.replace(/^([ \\t]*)/g, '<p>');\n      str += '</p>';\n      grafsOut.push(str);\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length;\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n        grafsOutIt = grafsOut[i],\n        codeFlag = false;\n    // if this is a marker for an html block...\n    // use RegExp.test instead of string.search because of QML bug\n    while (/¨(K|G)(\\d+)\\1/.test(grafsOutIt)) {\n      var delim = RegExp.$1,\n          num   = RegExp.$2;\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num];\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text, options, globals);\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock;\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?¨(K|G)\\d+\\2(\\n\\n)?/, blockText);\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true;\n      }\n    }\n    grafsOut[i] = grafsOutIt;\n  }\n  text = grafsOut.join('\\n');\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n});\n\r\n/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict';\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options);\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex;\n    if (!(re instanceof RegExp)) {\n      re = new RegExp(re, 'g');\n    }\n    text = text.replace(re, ext.replace);\n  }\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n  text = showdown.subParser('codeSpans')(text, options, globals);\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals);\n  text = showdown.subParser('anchors')(text, options, globals);\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after anchors, because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals);\n  text = showdown.subParser('simplifiedAutoLinks')(text, options, globals);\n  text = showdown.subParser('emoji')(text, options, globals);\n  text = showdown.subParser('underline')(text, options, globals);\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\n  text = showdown.subParser('strikethrough')(text, options, globals);\n  text = showdown.subParser('ellipsis')(text, options, globals);\n\n  // we need to hash HTML tags inside spans\n  text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n\n  // now we encode amps and angles\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n\n  // Do hard breaks\n  if (options.simpleLineBreaks) {\n    // GFM style hard breaks\n    // only add line breaks if the text does not contain a block (special case for lists)\n    if (!/\\n\\n¨K/.test(text)) {\n      text = text.replace(/\\n+/g, '<br />\\n');\n    }\n  } else {\n    // Vanilla hard breaks\n    text = text.replace(/  +\\n/g, '<br />\\n');\n  }\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict';\n\n  function parseInside (txt) {\n    if (options.simplifiedAutoLink) {\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\n    }\n    return '<del>' + txt + '</del>';\n  }\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n    text = text.replace(/(?:~){2}([\\s\\S]+?)(?:~){2}/g, function (wm, txt) { return parseInside(txt); });\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n  }\n\n  return text;\n});\n\r\n/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict';\n\n  var regex       = /^ {0,3}\\[([^\\]]+)]:[ \\t]*\\n?[ \\t]*<?([^>\\s]+)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=¨0))/gm,\n      base64Regex = /^ {0,3}\\[([^\\]]+)]:[ \\t]*\\n?[ \\t]*<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n\\n|(?=¨0)|(?=\\n\\[))/gm;\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  var replaceFunc = function (wholeMatch, linkId, url, width, height, blankLines, title) {\n\n    // if there aren't two instances of linkId it must not be a reference link so back out\n    linkId = linkId.toLowerCase();\n    if (text.toLowerCase().split(linkId).length - 1 < 2) {\n      return wholeMatch;\n    }\n    if (url.match(/^data:.+?\\/.+?;base64,/)) {\n      // remove newlines\n      globals.gUrls[linkId] = url.replace(/\\s/g, '');\n    } else {\n      globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url, options, globals);  // Link IDs are case-insensitive\n    }\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title;\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width:  width,\n          height: height\n        };\n      }\n    }\n    // Completely remove the definition from the text\n    return '';\n  };\n\n  // first we try to find base64 link references\n  text = text.replace(base64Regex, replaceFunc);\n\n  text = text.replace(regex, replaceFunc);\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return text;\n});\n\r\nshowdown.subParser('tables', function (text, options, globals) {\n  'use strict';\n\n  if (!options.tables) {\n    return text;\n  }\n\n  var tableRgx       = /^ {0,3}\\|?.+\\|.+\\n {0,3}\\|?[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[\\s\\S]+?(?:\\n\\n|¨0)/gm,\n      //singeColTblRgx = /^ {0,3}\\|.+\\|\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n(?: {0,3}\\|.+\\|\\n)+(?:\\n\\n|¨0)/gm;\n      singeColTblRgx = /^ {0,3}\\|.+\\|[ \\t]*\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n( {0,3}\\|.+\\|[ \\t]*\\n)*(?:\\n|¨0)/gm;\n\n  function parseStyles (sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"';\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"';\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"';\n    } else {\n      return '';\n    }\n  }\n\n  function parseHeaders (header, style) {\n    var id = '';\n    header = header.trim();\n    // support both tablesHeaderId and tableHeaderId due to error in documentation so we don't break backwards compatibility\n    if (options.tablesHeaderId || options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals);\n\n    return '<th' + id + style + '>' + header + '</th>\\n';\n  }\n\n  function parseCells (cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n    return '<td' + style + '>' + subText + '</td>\\n';\n  }\n\n  function buildTable (headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n        tblLgn = headers.length;\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i];\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n';\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii];\n      }\n      tb += '</tr>\\n';\n    }\n    tb += '</tbody>\\n</table>\\n';\n    return tb;\n  }\n\n  function parseTable (rawTable) {\n    var i, tableLines = rawTable.split('\\n');\n\n    for (i = 0; i < tableLines.length; ++i) {\n      // strip wrong first and last column if wrapped tables are used\n      if (/^ {0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n      }\n      // parse code spans first, but we only support one line code spans\n      tableLines[i] = showdown.subParser('codeSpans')(tableLines[i], options, globals);\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n        rawCells = [],\n        headers = [],\n        styles = [],\n        cells = [];\n\n    tableLines.shift();\n    tableLines.shift();\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue;\n      }\n      rawCells.push(\n        tableLines[i]\n          .split('|')\n          .map(function (s) {\n            return s.trim();\n          })\n      );\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable;\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]));\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = '';\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = [];\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\n      }\n      cells.push(row);\n    }\n\n    return buildTable(headers, cells);\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals);\n\n  // find escaped pipe characters\n  text = text.replace(/\\\\(\\|)/g, showdown.helper.escapeCharactersCallback);\n\n  // parse multi column tables\n  text = text.replace(tableRgx, parseTable);\n\n  // parse one column tables\n  text = text.replace(singeColTblRgx, parseTable);\n\n  text = globals.converter._dispatch('tables.after', text, options, globals);\n\n  return text;\n});\n\r\nshowdown.subParser('underline', function (text, options, globals) {\n  'use strict';\n\n  if (!options.underline) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('underline.before', text, options, globals);\n\n  if (options.literalMidWordUnderscores) {\n    text = text.replace(/\\b___(\\S[\\s\\S]*?)___\\b/g, function (wm, txt) {\n      return '<u>' + txt + '</u>';\n    });\n    text = text.replace(/\\b__(\\S[\\s\\S]*?)__\\b/g, function (wm, txt) {\n      return '<u>' + txt + '</u>';\n    });\n  } else {\n    text = text.replace(/___(\\S[\\s\\S]*?)___/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<u>' + m + '</u>' : wm;\n    });\n    text = text.replace(/__(\\S[\\s\\S]*?)__/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<u>' + m + '</u>' : wm;\n    });\n  }\n\n  // escape remaining underscores to prevent them being parsed by italic and bold\n  text = text.replace(/(_)/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('underline.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unescapeSpecialChars.before', text, options, globals);\n\n  text = text.replace(/¨E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1);\n    return String.fromCharCode(charCodeToReplace);\n  });\n\n  text = globals.converter._dispatch('unescapeSpecialChars.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('makeMarkdown.blockquote', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n\n    for (var i = 0; i < childrenLength; ++i) {\n      var innerTxt = showdown.subParser('makeMarkdown.node')(children[i], globals);\n\n      if (innerTxt === '') {\n        continue;\n      }\n      txt += innerTxt;\n    }\n  }\n  // cleanup\n  txt = txt.trim();\n  txt = '> ' + txt.split('\\n').join('\\n> ');\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.codeBlock', function (node, globals) {\n  'use strict';\n\n  var lang = node.getAttribute('language'),\n      num  = node.getAttribute('precodenum');\n  return '```' + lang + '\\n' + globals.preList[num] + '\\n```';\n});\n\r\nshowdown.subParser('makeMarkdown.codeSpan', function (node) {\n  'use strict';\n\n  return '`' + node.innerHTML + '`';\n});\n\r\nshowdown.subParser('makeMarkdown.emphasis', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '*';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '*';\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.header', function (node, globals, headerLevel) {\n  'use strict';\n\n  var headerMark = new Array(headerLevel + 1).join('#'),\n      txt = '';\n\n  if (node.hasChildNodes()) {\n    txt = headerMark + ' ';\n    var children = node.childNodes,\n        childrenLength = children.length;\n\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.hr', function () {\n  'use strict';\n\n  return '---';\n});\n\r\nshowdown.subParser('makeMarkdown.image', function (node) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasAttribute('src')) {\n    txt += '![' + node.getAttribute('alt') + '](';\n    txt += '<' + node.getAttribute('src') + '>';\n    if (node.hasAttribute('width') && node.hasAttribute('height')) {\n      txt += ' =' + node.getAttribute('width') + 'x' + node.getAttribute('height');\n    }\n\n    if (node.hasAttribute('title')) {\n      txt += ' \"' + node.getAttribute('title') + '\"';\n    }\n    txt += ')';\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.links', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes() && node.hasAttribute('href')) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n    txt = '[';\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '](';\n    txt += '<' + node.getAttribute('href') + '>';\n    if (node.hasAttribute('title')) {\n      txt += ' \"' + node.getAttribute('title') + '\"';\n    }\n    txt += ')';\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.list', function (node, globals, type) {\n  'use strict';\n\n  var txt = '';\n  if (!node.hasChildNodes()) {\n    return '';\n  }\n  var listItems       = node.childNodes,\n      listItemsLenght = listItems.length,\n      listNum = node.getAttribute('start') || 1;\n\n  for (var i = 0; i < listItemsLenght; ++i) {\n    if (typeof listItems[i].tagName === 'undefined' || listItems[i].tagName.toLowerCase() !== 'li') {\n      continue;\n    }\n\n    // define the bullet to use in list\n    var bullet = '';\n    if (type === 'ol') {\n      bullet = listNum.toString() + '. ';\n    } else {\n      bullet = '- ';\n    }\n\n    // parse list item\n    txt += bullet + showdown.subParser('makeMarkdown.listItem')(listItems[i], globals);\n    ++listNum;\n  }\n\n  // add comment at the end to prevent consecutive lists to be parsed as one\n  txt += '\\n<!-- -->\\n';\n  return txt.trim();\n});\n\r\nshowdown.subParser('makeMarkdown.listItem', function (node, globals) {\n  'use strict';\n\n  var listItemTxt = '';\n\n  var children = node.childNodes,\n      childrenLenght = children.length;\n\n  for (var i = 0; i < childrenLenght; ++i) {\n    listItemTxt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n  }\n  // if it's only one liner, we need to add a newline at the end\n  if (!/\\n$/.test(listItemTxt)) {\n    listItemTxt += '\\n';\n  } else {\n    // it's multiparagraph, so we need to indent\n    listItemTxt = listItemTxt\n      .split('\\n')\n      .join('\\n    ')\n      .replace(/^ {4}$/gm, '')\n      .replace(/\\n\\n+/g, '\\n\\n');\n  }\n\n  return listItemTxt;\n});\n\r\n\n\nshowdown.subParser('makeMarkdown.node', function (node, globals, spansOnly) {\n  'use strict';\n\n  spansOnly = spansOnly || false;\n\n  var txt = '';\n\n  // edge case of text without wrapper paragraph\n  if (node.nodeType === 3) {\n    return showdown.subParser('makeMarkdown.txt')(node, globals);\n  }\n\n  // HTML comment\n  if (node.nodeType === 8) {\n    return '<!--' + node.data + '-->\\n\\n';\n  }\n\n  // process only node elements\n  if (node.nodeType !== 1) {\n    return '';\n  }\n\n  var tagName = node.tagName.toLowerCase();\n\n  switch (tagName) {\n\n    //\n    // BLOCKS\n    //\n    case 'h1':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 1) + '\\n\\n'; }\n      break;\n    case 'h2':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 2) + '\\n\\n'; }\n      break;\n    case 'h3':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 3) + '\\n\\n'; }\n      break;\n    case 'h4':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 4) + '\\n\\n'; }\n      break;\n    case 'h5':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 5) + '\\n\\n'; }\n      break;\n    case 'h6':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 6) + '\\n\\n'; }\n      break;\n\n    case 'p':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.paragraph')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'blockquote':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.blockquote')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'hr':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.hr')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'ol':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ol') + '\\n\\n'; }\n      break;\n\n    case 'ul':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ul') + '\\n\\n'; }\n      break;\n\n    case 'precode':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.codeBlock')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'pre':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.pre')(node, globals) + '\\n\\n'; }\n      break;\n\n    case 'table':\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.table')(node, globals) + '\\n\\n'; }\n      break;\n\n    //\n    // SPANS\n    //\n    case 'code':\n      txt = showdown.subParser('makeMarkdown.codeSpan')(node, globals);\n      break;\n\n    case 'em':\n    case 'i':\n      txt = showdown.subParser('makeMarkdown.emphasis')(node, globals);\n      break;\n\n    case 'strong':\n    case 'b':\n      txt = showdown.subParser('makeMarkdown.strong')(node, globals);\n      break;\n\n    case 'del':\n      txt = showdown.subParser('makeMarkdown.strikethrough')(node, globals);\n      break;\n\n    case 'a':\n      txt = showdown.subParser('makeMarkdown.links')(node, globals);\n      break;\n\n    case 'img':\n      txt = showdown.subParser('makeMarkdown.image')(node, globals);\n      break;\n\n    default:\n      txt = node.outerHTML + '\\n\\n';\n  }\n\n  // common normalization\n  // TODO eventually\n\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.paragraph', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n  }\n\n  // some text normalization\n  txt = txt.trim();\n\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.pre', function (node, globals) {\n  'use strict';\n\n  var num  = node.getAttribute('prenum');\n  return '<pre>' + globals.preList[num] + '</pre>';\n});\n\r\nshowdown.subParser('makeMarkdown.strikethrough', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '~~';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '~~';\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.strong', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (node.hasChildNodes()) {\n    txt += '**';\n    var children = node.childNodes,\n        childrenLength = children.length;\n    for (var i = 0; i < childrenLength; ++i) {\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\n    }\n    txt += '**';\n  }\n  return txt;\n});\n\r\nshowdown.subParser('makeMarkdown.table', function (node, globals) {\n  'use strict';\n\n  var txt = '',\n      tableArray = [[], []],\n      headings   = node.querySelectorAll('thead>tr>th'),\n      rows       = node.querySelectorAll('tbody>tr'),\n      i, ii;\n  for (i = 0; i < headings.length; ++i) {\n    var headContent = showdown.subParser('makeMarkdown.tableCell')(headings[i], globals),\n        allign = '---';\n\n    if (headings[i].hasAttribute('style')) {\n      var style = headings[i].getAttribute('style').toLowerCase().replace(/\\s/g, '');\n      switch (style) {\n        case 'text-align:left;':\n          allign = ':---';\n          break;\n        case 'text-align:right;':\n          allign = '---:';\n          break;\n        case 'text-align:center;':\n          allign = ':---:';\n          break;\n      }\n    }\n    tableArray[0][i] = headContent.trim();\n    tableArray[1][i] = allign;\n  }\n\n  for (i = 0; i < rows.length; ++i) {\n    var r = tableArray.push([]) - 1,\n        cols = rows[i].getElementsByTagName('td');\n\n    for (ii = 0; ii < headings.length; ++ii) {\n      var cellContent = ' ';\n      if (typeof cols[ii] !== 'undefined') {\n        cellContent = showdown.subParser('makeMarkdown.tableCell')(cols[ii], globals);\n      }\n      tableArray[r].push(cellContent);\n    }\n  }\n\n  var cellSpacesCount = 3;\n  for (i = 0; i < tableArray.length; ++i) {\n    for (ii = 0; ii < tableArray[i].length; ++ii) {\n      var strLen = tableArray[i][ii].length;\n      if (strLen > cellSpacesCount) {\n        cellSpacesCount = strLen;\n      }\n    }\n  }\n\n  for (i = 0; i < tableArray.length; ++i) {\n    for (ii = 0; ii < tableArray[i].length; ++ii) {\n      if (i === 1) {\n        if (tableArray[i][ii].slice(-1) === ':') {\n          tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii].slice(-1), cellSpacesCount - 1, '-') + ':';\n        } else {\n          tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount, '-');\n        }\n      } else {\n        tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount);\n      }\n    }\n    txt += '| ' + tableArray[i].join(' | ') + ' |\\n';\n  }\n\n  return txt.trim();\n});\n\r\nshowdown.subParser('makeMarkdown.tableCell', function (node, globals) {\n  'use strict';\n\n  var txt = '';\n  if (!node.hasChildNodes()) {\n    return '';\n  }\n  var children = node.childNodes,\n      childrenLength = children.length;\n\n  for (var i = 0; i < childrenLength; ++i) {\n    txt += showdown.subParser('makeMarkdown.node')(children[i], globals, true);\n  }\n  return txt.trim();\n});\n\r\nshowdown.subParser('makeMarkdown.txt', function (node) {\n  'use strict';\n\n  var txt = node.nodeValue;\n\n  // multiple spaces are collapsed\n  txt = txt.replace(/ +/g, ' ');\n\n  // replace the custom ¨NBSP; with a space\n  txt = txt.replace(/¨NBSP;/g, ' ');\n\n  // \", <, > and & should replace escaped html entities\n  txt = showdown.helper.unescapeHTMLEntities(txt);\n\n  // escape markdown magic characters\n  // emphasis, strong and strikethrough - can appear everywhere\n  // we also escape pipe (|) because of tables\n  // and escape ` because of code blocks and spans\n  txt = txt.replace(/([*_~|`])/g, '\\\\$1');\n\n  // escape > because of blockquotes\n  txt = txt.replace(/^(\\s*)>/g, '\\\\$1>');\n\n  // hash character, only troublesome at the beginning of a line because of headers\n  txt = txt.replace(/^#/gm, '\\\\#');\n\n  // horizontal rules\n  txt = txt.replace(/^(\\s*)([-=]{3,})(\\s*)$/, '$1\\\\$2$3');\n\n  // dot, because of ordered lists, only troublesome at the beginning of a line when preceded by an integer\n  txt = txt.replace(/^( {0,3}\\d+)\\./gm, '$1\\\\.');\n\n  // +, * and -, at the beginning of a line becomes a list, so we need to escape them also (asterisk was already escaped)\n  txt = txt.replace(/^( {0,3})([+-])/gm, '$1\\\\$2');\n\n  // images and links, ] followed by ( is problematic, so we escape it\n  txt = txt.replace(/]([\\s]*)\\(/g, '\\\\]$1\\\\(');\n\n  // reference URIs must also be escaped\n  txt = txt.replace(/^ {0,3}\\[([\\S \\t]*?)]:/gm, '\\\\[$1]:');\n\n  return txt;\n});\n\r\nvar root = this;\n\n// AMD Loader\nif (typeof define === 'function' && define.amd) {\n  define(function () {\n    'use strict';\n    return showdown;\n  });\n\n// CommonJS/nodeJS Loader\n} else if (typeof module !== 'undefined' && module.exports) {\n  module.exports = showdown;\n\n// Regular Browser loader\n} else {\n  root.showdown = showdown;\n}\n}).call(this);\r\n\n//# sourceMappingURL=showdown.js.map\r\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["getAllExtensions","removeExtension","extensions","getDefaultOptions","isFunction","preList","width","resetExtensions","right","forEach","_dispatch","output","github","isUndefined","setFlavor","omitExtraWLInCodeBlocks","isArray","height","innerHTML","gTitles","completeHTMLDocument","gHtmlBlocks","noHeaderId","matchRecursiveRegExp","_setMetadataFormat","rawPrefixHeaderId","original","ghCodeBlocks","strikethrough","addExtension","padEnd","_setMetadataPair","_setMetadataRaw","getFlavor","emoji","stdExtName","codeblock","tables","gUrls","resetOptions","gHtmlSpans","warn","parseImgDimensions","regex","lastIndex","getMetadataFormat","excludeTrailingPunctuationFromURLs","error","validateExtension","emojis","Converter","disableForced4SpacesIndentedSublists","smartIndentationFix","log","simplifiedAutoLink","rawHeaderId","extension","nodeValue","encodeEmails","replaceRecursiveRegExp","listen","valid","helper","showdown","splitAtIndex","start","text","escapeCharactersCallback","parsed","getFlavorOptions","prefixHeaderId","allOn","openLinksInNewWindow","regexes","tasklists","vanilla","metadata","describe","getOptions","unescapeHTMLEntities","gListLevel","simpleLineBreaks","converter","ellipsis","type","smoothLivePreview","ghMentions","ghCompatibleHeaderId","match","encodeEmailAddress","outputModifiers","regexIndexOf","subParser","splitAdjacentBlockquotes","setOption","ghMentionsLink","makeMd","useExtension","escapeCharacters","defaultValue","getMetadata","backslashEscapesHTMLTags","headerLevelStart","raw","language","langExtensions","asteriskDashAndColon","hashLinkCounts","gHtmlMdBlocks","outerHTML","literalMidWordAsterisks","requireSpaceBeforeHeadingText","underline","makeHtml","end","gDimensions","left","ghost","getOption","wholeMatch","format","makeMarkdown","isString","literalMidWordUnderscores","tablesHeaderId"]],"~:compiled-at",1756239699910,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$showdown$dist$showdown.js\",\n\"lineCount\":1639,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/showdown/dist/showdown.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$showdown$dist$showdown\\\"] = function(global,require,module,exports) {\\n;/*! showdown v 2.1.0 - 21-04-2022 */\\r\\n(function(){\\r\\n/**\\n * Created by Tivie on 13-07-2015.\\n */\\n\\nfunction getDefaultOpts (simple) {\\n  'use strict';\\n\\n  var defaultOptions = {\\n    omitExtraWLInCodeBlocks: {\\n      defaultValue: false,\\n      describe: 'Omit the default extra whiteline added to code blocks',\\n      type: 'boolean'\\n    },\\n    noHeaderId: {\\n      defaultValue: false,\\n      describe: 'Turn on/off generated header id',\\n      type: 'boolean'\\n    },\\n    prefixHeaderId: {\\n      defaultValue: false,\\n      describe: 'Add a prefix to the generated header ids. Passing a string will prefix that string to the header id. Setting to true will add a generic \\\\'section-\\\\' prefix',\\n      type: 'string'\\n    },\\n    rawPrefixHeaderId: {\\n      defaultValue: false,\\n      describe: 'Setting this option to true will prevent showdown from modifying the prefix. This might result in malformed IDs (if, for instance, the \\\" char is used in the prefix)',\\n      type: 'boolean'\\n    },\\n    ghCompatibleHeaderId: {\\n      defaultValue: false,\\n      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\\n      type: 'boolean'\\n    },\\n    rawHeaderId: {\\n      defaultValue: false,\\n      describe: 'Remove only spaces, \\\\' and \\\" from generated header ids (including prefixes), replacing them with dashes (-). WARNING: This might result in malformed ids',\\n      type: 'boolean'\\n    },\\n    headerLevelStart: {\\n      defaultValue: false,\\n      describe: 'The header blocks level start',\\n      type: 'integer'\\n    },\\n    parseImgDimensions: {\\n      defaultValue: false,\\n      describe: 'Turn on/off image dimension parsing',\\n      type: 'boolean'\\n    },\\n    simplifiedAutoLink: {\\n      defaultValue: false,\\n      describe: 'Turn on/off GFM autolink style',\\n      type: 'boolean'\\n    },\\n    excludeTrailingPunctuationFromURLs: {\\n      defaultValue: false,\\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\\n      type: 'boolean'\\n    },\\n    literalMidWordUnderscores: {\\n      defaultValue: false,\\n      describe: 'Parse midword underscores as literal underscores',\\n      type: 'boolean'\\n    },\\n    literalMidWordAsterisks: {\\n      defaultValue: false,\\n      describe: 'Parse midword asterisks as literal asterisks',\\n      type: 'boolean'\\n    },\\n    strikethrough: {\\n      defaultValue: false,\\n      describe: 'Turn on/off strikethrough support',\\n      type: 'boolean'\\n    },\\n    tables: {\\n      defaultValue: false,\\n      describe: 'Turn on/off tables support',\\n      type: 'boolean'\\n    },\\n    tablesHeaderId: {\\n      defaultValue: false,\\n      describe: 'Add an id to table headers',\\n      type: 'boolean'\\n    },\\n    ghCodeBlocks: {\\n      defaultValue: true,\\n      describe: 'Turn on/off GFM fenced code blocks support',\\n      type: 'boolean'\\n    },\\n    tasklists: {\\n      defaultValue: false,\\n      describe: 'Turn on/off GFM tasklist support',\\n      type: 'boolean'\\n    },\\n    smoothLivePreview: {\\n      defaultValue: false,\\n      describe: 'Prevents weird effects in live previews due to incomplete input',\\n      type: 'boolean'\\n    },\\n    smartIndentationFix: {\\n      defaultValue: false,\\n      describe: 'Tries to smartly fix indentation in es6 strings',\\n      type: 'boolean'\\n    },\\n    disableForced4SpacesIndentedSublists: {\\n      defaultValue: false,\\n      describe: 'Disables the requirement of indenting nested sublists by 4 spaces',\\n      type: 'boolean'\\n    },\\n    simpleLineBreaks: {\\n      defaultValue: false,\\n      describe: 'Parses simple line breaks as <br> (GFM Style)',\\n      type: 'boolean'\\n    },\\n    requireSpaceBeforeHeadingText: {\\n      defaultValue: false,\\n      describe: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\\n      type: 'boolean'\\n    },\\n    ghMentions: {\\n      defaultValue: false,\\n      describe: 'Enables github @mentions',\\n      type: 'boolean'\\n    },\\n    ghMentionsLink: {\\n      defaultValue: 'https://github.com/{u}',\\n      describe: 'Changes the link generated by @mentions. Only applies if ghMentions option is enabled.',\\n      type: 'string'\\n    },\\n    encodeEmails: {\\n      defaultValue: true,\\n      describe: 'Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities',\\n      type: 'boolean'\\n    },\\n    openLinksInNewWindow: {\\n      defaultValue: false,\\n      describe: 'Open all links in new windows',\\n      type: 'boolean'\\n    },\\n    backslashEscapesHTMLTags: {\\n      defaultValue: false,\\n      describe: 'Support for HTML Tag escaping. ex: \\\\<div>foo\\\\</div>',\\n      type: 'boolean'\\n    },\\n    emoji: {\\n      defaultValue: false,\\n      describe: 'Enable emoji support. Ex: `this is a :smile: emoji`',\\n      type: 'boolean'\\n    },\\n    underline: {\\n      defaultValue: false,\\n      describe: 'Enable support for underline. Syntax is double or triple underscores: `__underline word__`. With this option enabled, underscores no longer parses into `<em>` and `<strong>`',\\n      type: 'boolean'\\n    },\\n    ellipsis: {\\n      defaultValue: true,\\n      describe: 'Replaces three dots with the ellipsis unicode character',\\n      type: 'boolean'\\n    },\\n    completeHTMLDocument: {\\n      defaultValue: false,\\n      describe: 'Outputs a complete html document, including `<html>`, `<head>` and `<body>` tags',\\n      type: 'boolean'\\n    },\\n    metadata: {\\n      defaultValue: false,\\n      describe: 'Enable support for document metadata (defined at the top of the document between `\\u00ab\\u00ab\\u00ab` and `\\u00bb\\u00bb\\u00bb` or between `---` and `---`).',\\n      type: 'boolean'\\n    },\\n    splitAdjacentBlockquotes: {\\n      defaultValue: false,\\n      describe: 'Split adjacent blockquote blocks',\\n      type: 'boolean'\\n    }\\n  };\\n  if (simple === false) {\\n    return JSON.parse(JSON.stringify(defaultOptions));\\n  }\\n  var ret = {};\\n  for (var opt in defaultOptions) {\\n    if (defaultOptions.hasOwnProperty(opt)) {\\n      ret[opt] = defaultOptions[opt].defaultValue;\\n    }\\n  }\\n  return ret;\\n}\\n\\nfunction allOptionsOn () {\\n  'use strict';\\n  var options = getDefaultOpts(true),\\n      ret = {};\\n  for (var opt in options) {\\n    if (options.hasOwnProperty(opt)) {\\n      ret[opt] = true;\\n    }\\n  }\\n  return ret;\\n}\\n\\r\\n/**\\n * Created by Tivie on 06-01-2015.\\n */\\n\\n// Private properties\\nvar showdown = {},\\n    parsers = {},\\n    extensions = {},\\n    globalOptions = getDefaultOpts(true),\\n    setFlavor = 'vanilla',\\n    flavor = {\\n      github: {\\n        omitExtraWLInCodeBlocks:              true,\\n        simplifiedAutoLink:                   true,\\n        excludeTrailingPunctuationFromURLs:   true,\\n        literalMidWordUnderscores:            true,\\n        strikethrough:                        true,\\n        tables:                               true,\\n        tablesHeaderId:                       true,\\n        ghCodeBlocks:                         true,\\n        tasklists:                            true,\\n        disableForced4SpacesIndentedSublists: true,\\n        simpleLineBreaks:                     true,\\n        requireSpaceBeforeHeadingText:        true,\\n        ghCompatibleHeaderId:                 true,\\n        ghMentions:                           true,\\n        backslashEscapesHTMLTags:             true,\\n        emoji:                                true,\\n        splitAdjacentBlockquotes:             true\\n      },\\n      original: {\\n        noHeaderId:                           true,\\n        ghCodeBlocks:                         false\\n      },\\n      ghost: {\\n        omitExtraWLInCodeBlocks:              true,\\n        parseImgDimensions:                   true,\\n        simplifiedAutoLink:                   true,\\n        excludeTrailingPunctuationFromURLs:   true,\\n        literalMidWordUnderscores:            true,\\n        strikethrough:                        true,\\n        tables:                               true,\\n        tablesHeaderId:                       true,\\n        ghCodeBlocks:                         true,\\n        tasklists:                            true,\\n        smoothLivePreview:                    true,\\n        simpleLineBreaks:                     true,\\n        requireSpaceBeforeHeadingText:        true,\\n        ghMentions:                           false,\\n        encodeEmails:                         true\\n      },\\n      vanilla: getDefaultOpts(true),\\n      allOn: allOptionsOn()\\n    };\\n\\n/**\\n * helper namespace\\n * @type {{}}\\n */\\nshowdown.helper = {};\\n\\n/**\\n * TODO LEGACY SUPPORT CODE\\n * @type {{}}\\n */\\nshowdown.extensions = {};\\n\\n/**\\n * Set a global option\\n * @static\\n * @param {string} key\\n * @param {*} value\\n * @returns {showdown}\\n */\\nshowdown.setOption = function (key, value) {\\n  'use strict';\\n  globalOptions[key] = value;\\n  return this;\\n};\\n\\n/**\\n * Get a global option\\n * @static\\n * @param {string} key\\n * @returns {*}\\n */\\nshowdown.getOption = function (key) {\\n  'use strict';\\n  return globalOptions[key];\\n};\\n\\n/**\\n * Get the global options\\n * @static\\n * @returns {{}}\\n */\\nshowdown.getOptions = function () {\\n  'use strict';\\n  return globalOptions;\\n};\\n\\n/**\\n * Reset global options to the default values\\n * @static\\n */\\nshowdown.resetOptions = function () {\\n  'use strict';\\n  globalOptions = getDefaultOpts(true);\\n};\\n\\n/**\\n * Set the flavor showdown should use as default\\n * @param {string} name\\n */\\nshowdown.setFlavor = function (name) {\\n  'use strict';\\n  if (!flavor.hasOwnProperty(name)) {\\n    throw Error(name + ' flavor was not found');\\n  }\\n  showdown.resetOptions();\\n  var preset = flavor[name];\\n  setFlavor = name;\\n  for (var option in preset) {\\n    if (preset.hasOwnProperty(option)) {\\n      globalOptions[option] = preset[option];\\n    }\\n  }\\n};\\n\\n/**\\n * Get the currently set flavor\\n * @returns {string}\\n */\\nshowdown.getFlavor = function () {\\n  'use strict';\\n  return setFlavor;\\n};\\n\\n/**\\n * Get the options of a specified flavor. Returns undefined if the flavor was not found\\n * @param {string} name Name of the flavor\\n * @returns {{}|undefined}\\n */\\nshowdown.getFlavorOptions = function (name) {\\n  'use strict';\\n  if (flavor.hasOwnProperty(name)) {\\n    return flavor[name];\\n  }\\n};\\n\\n/**\\n * Get the default options\\n * @static\\n * @param {boolean} [simple=true]\\n * @returns {{}}\\n */\\nshowdown.getDefaultOptions = function (simple) {\\n  'use strict';\\n  return getDefaultOpts(simple);\\n};\\n\\n/**\\n * Get or set a subParser\\n *\\n * subParser(name)       - Get a registered subParser\\n * subParser(name, func) - Register a subParser\\n * @static\\n * @param {string} name\\n * @param {function} [func]\\n * @returns {*}\\n */\\nshowdown.subParser = function (name, func) {\\n  'use strict';\\n  if (showdown.helper.isString(name)) {\\n    if (typeof func !== 'undefined') {\\n      parsers[name] = func;\\n    } else {\\n      if (parsers.hasOwnProperty(name)) {\\n        return parsers[name];\\n      } else {\\n        throw Error('SubParser named ' + name + ' not registered!');\\n      }\\n    }\\n  }\\n};\\n\\n/**\\n * Gets or registers an extension\\n * @static\\n * @param {string} name\\n * @param {object|object[]|function=} ext\\n * @returns {*}\\n */\\nshowdown.extension = function (name, ext) {\\n  'use strict';\\n\\n  if (!showdown.helper.isString(name)) {\\n    throw Error('Extension \\\\'name\\\\' must be a string');\\n  }\\n\\n  name = showdown.helper.stdExtName(name);\\n\\n  // Getter\\n  if (showdown.helper.isUndefined(ext)) {\\n    if (!extensions.hasOwnProperty(name)) {\\n      throw Error('Extension named ' + name + ' is not registered!');\\n    }\\n    return extensions[name];\\n\\n    // Setter\\n  } else {\\n    // Expand extension if it's wrapped in a function\\n    if (typeof ext === 'function') {\\n      ext = ext();\\n    }\\n\\n    // Ensure extension is an array\\n    if (!showdown.helper.isArray(ext)) {\\n      ext = [ext];\\n    }\\n\\n    var validExtension = validate(ext, name);\\n\\n    if (validExtension.valid) {\\n      extensions[name] = ext;\\n    } else {\\n      throw Error(validExtension.error);\\n    }\\n  }\\n};\\n\\n/**\\n * Gets all extensions registered\\n * @returns {{}}\\n */\\nshowdown.getAllExtensions = function () {\\n  'use strict';\\n  return extensions;\\n};\\n\\n/**\\n * Remove an extension\\n * @param {string} name\\n */\\nshowdown.removeExtension = function (name) {\\n  'use strict';\\n  delete extensions[name];\\n};\\n\\n/**\\n * Removes all extensions\\n */\\nshowdown.resetExtensions = function () {\\n  'use strict';\\n  extensions = {};\\n};\\n\\n/**\\n * Validate extension\\n * @param {array} extension\\n * @param {string} name\\n * @returns {{valid: boolean, error: string}}\\n */\\nfunction validate (extension, name) {\\n  'use strict';\\n\\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\\n      ret = {\\n        valid: true,\\n        error: ''\\n      };\\n\\n  if (!showdown.helper.isArray(extension)) {\\n    extension = [extension];\\n  }\\n\\n  for (var i = 0; i < extension.length; ++i) {\\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\\n        ext = extension[i];\\n    if (typeof ext !== 'object') {\\n      ret.valid = false;\\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\\n      return ret;\\n    }\\n\\n    if (!showdown.helper.isString(ext.type)) {\\n      ret.valid = false;\\n      ret.error = baseMsg + 'property \\\"type\\\" must be a string, but ' + typeof ext.type + ' given';\\n      return ret;\\n    }\\n\\n    var type = ext.type = ext.type.toLowerCase();\\n\\n    // normalize extension type\\n    if (type === 'language') {\\n      type = ext.type = 'lang';\\n    }\\n\\n    if (type === 'html') {\\n      type = ext.type = 'output';\\n    }\\n\\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\\n      ret.valid = false;\\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \\\"lang/language\\\", \\\"output/html\\\" or \\\"listener\\\"';\\n      return ret;\\n    }\\n\\n    if (type === 'listener') {\\n      if (showdown.helper.isUndefined(ext.listeners)) {\\n        ret.valid = false;\\n        ret.error = baseMsg + '. Extensions of type \\\"listener\\\" must have a property called \\\"listeners\\\"';\\n        return ret;\\n      }\\n    } else {\\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\\n        ret.valid = false;\\n        ret.error = baseMsg + type + ' extensions must define either a \\\"regex\\\" property or a \\\"filter\\\" method';\\n        return ret;\\n      }\\n    }\\n\\n    if (ext.listeners) {\\n      if (typeof ext.listeners !== 'object') {\\n        ret.valid = false;\\n        ret.error = baseMsg + '\\\"listeners\\\" property must be an object but ' + typeof ext.listeners + ' given';\\n        return ret;\\n      }\\n      for (var ln in ext.listeners) {\\n        if (ext.listeners.hasOwnProperty(ln)) {\\n          if (typeof ext.listeners[ln] !== 'function') {\\n            ret.valid = false;\\n            ret.error = baseMsg + '\\\"listeners\\\" property must be an hash of [event name]: [callback]. listeners.' + ln +\\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\\n            return ret;\\n          }\\n        }\\n      }\\n    }\\n\\n    if (ext.filter) {\\n      if (typeof ext.filter !== 'function') {\\n        ret.valid = false;\\n        ret.error = baseMsg + '\\\"filter\\\" must be a function, but ' + typeof ext.filter + ' given';\\n        return ret;\\n      }\\n    } else if (ext.regex) {\\n      if (showdown.helper.isString(ext.regex)) {\\n        ext.regex = new RegExp(ext.regex, 'g');\\n      }\\n      if (!(ext.regex instanceof RegExp)) {\\n        ret.valid = false;\\n        ret.error = baseMsg + '\\\"regex\\\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\\n        return ret;\\n      }\\n      if (showdown.helper.isUndefined(ext.replace)) {\\n        ret.valid = false;\\n        ret.error = baseMsg + '\\\"regex\\\" extensions must implement a replace string or function';\\n        return ret;\\n      }\\n    }\\n  }\\n  return ret;\\n}\\n\\n/**\\n * Validate extension\\n * @param {object} ext\\n * @returns {boolean}\\n */\\nshowdown.validateExtension = function (ext) {\\n  'use strict';\\n\\n  var validateExtension = validate(ext, null);\\n  if (!validateExtension.valid) {\\n    console.warn(validateExtension.error);\\n    return false;\\n  }\\n  return true;\\n};\\n\\r\\n/**\\n * showdownjs helper functions\\n */\\n\\nif (!showdown.hasOwnProperty('helper')) {\\n  showdown.helper = {};\\n}\\n\\n/**\\n * Check if var is string\\n * @static\\n * @param {string} a\\n * @returns {boolean}\\n */\\nshowdown.helper.isString = function (a) {\\n  'use strict';\\n  return (typeof a === 'string' || a instanceof String);\\n};\\n\\n/**\\n * Check if var is a function\\n * @static\\n * @param {*} a\\n * @returns {boolean}\\n */\\nshowdown.helper.isFunction = function (a) {\\n  'use strict';\\n  var getType = {};\\n  return a && getType.toString.call(a) === '[object Function]';\\n};\\n\\n/**\\n * isArray helper function\\n * @static\\n * @param {*} a\\n * @returns {boolean}\\n */\\nshowdown.helper.isArray = function (a) {\\n  'use strict';\\n  return Array.isArray(a);\\n};\\n\\n/**\\n * Check if value is undefined\\n * @static\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\\n */\\nshowdown.helper.isUndefined = function (value) {\\n  'use strict';\\n  return typeof value === 'undefined';\\n};\\n\\n/**\\n * ForEach helper function\\n * Iterates over Arrays and Objects (own properties only)\\n * @static\\n * @param {*} obj\\n * @param {function} callback Accepts 3 params: 1. value, 2. key, 3. the original array/object\\n */\\nshowdown.helper.forEach = function (obj, callback) {\\n  'use strict';\\n  // check if obj is defined\\n  if (showdown.helper.isUndefined(obj)) {\\n    throw new Error('obj param is required');\\n  }\\n\\n  if (showdown.helper.isUndefined(callback)) {\\n    throw new Error('callback param is required');\\n  }\\n\\n  if (!showdown.helper.isFunction(callback)) {\\n    throw new Error('callback param must be a function/closure');\\n  }\\n\\n  if (typeof obj.forEach === 'function') {\\n    obj.forEach(callback);\\n  } else if (showdown.helper.isArray(obj)) {\\n    for (var i = 0; i < obj.length; i++) {\\n      callback(obj[i], i, obj);\\n    }\\n  } else if (typeof (obj) === 'object') {\\n    for (var prop in obj) {\\n      if (obj.hasOwnProperty(prop)) {\\n        callback(obj[prop], prop, obj);\\n      }\\n    }\\n  } else {\\n    throw new Error('obj does not seem to be an array or an iterable object');\\n  }\\n};\\n\\n/**\\n * Standardidize extension name\\n * @static\\n * @param {string} s extension name\\n * @returns {string}\\n */\\nshowdown.helper.stdExtName = function (s) {\\n  'use strict';\\n  return s.replace(/[_?*+\\\\/\\\\\\\\.^-]/g, '').replace(/\\\\s/g, '').toLowerCase();\\n};\\n\\nfunction escapeCharactersCallback (wholeMatch, m1) {\\n  'use strict';\\n  var charCodeToEscape = m1.charCodeAt(0);\\n  return '\\u00a8E' + charCodeToEscape + 'E';\\n}\\n\\n/**\\n * Callback used to escape characters when passing through String.replace\\n * @static\\n * @param {string} wholeMatch\\n * @param {string} m1\\n * @returns {string}\\n */\\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\\n\\n/**\\n * Escape characters in a string\\n * @static\\n * @param {string} text\\n * @param {string} charsToEscape\\n * @param {boolean} afterBackslash\\n * @returns {XML|string|void|*}\\n */\\nshowdown.helper.escapeCharacters = function (text, charsToEscape, afterBackslash) {\\n  'use strict';\\n  // First we have to escape the escape characters so that\\n  // we can build a character class out of them\\n  var regexString = '([' + charsToEscape.replace(/([\\\\[\\\\]\\\\\\\\])/g, '\\\\\\\\$1') + '])';\\n\\n  if (afterBackslash) {\\n    regexString = '\\\\\\\\\\\\\\\\' + regexString;\\n  }\\n\\n  var regex = new RegExp(regexString, 'g');\\n  text = text.replace(regex, escapeCharactersCallback);\\n\\n  return text;\\n};\\n\\n/**\\n * Unescape HTML entities\\n * @param txt\\n * @returns {string}\\n */\\nshowdown.helper.unescapeHTMLEntities = function (txt) {\\n  'use strict';\\n\\n  return txt\\n    .replace(/&quot;/g, '\\\"')\\n    .replace(/&lt;/g, '<')\\n    .replace(/&gt;/g, '>')\\n    .replace(/&amp;/g, '&');\\n};\\n\\nvar rgxFindMatchPos = function (str, left, right, flags) {\\n  'use strict';\\n  var f = flags || '',\\n      g = f.indexOf('g') > -1,\\n      x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\\n      l = new RegExp(left, f.replace(/g/g, '')),\\n      pos = [],\\n      t, s, m, start, end;\\n\\n  do {\\n    t = 0;\\n    while ((m = x.exec(str))) {\\n      if (l.test(m[0])) {\\n        if (!(t++)) {\\n          s = x.lastIndex;\\n          start = s - m[0].length;\\n        }\\n      } else if (t) {\\n        if (!--t) {\\n          end = m.index + m[0].length;\\n          var obj = {\\n            left: {start: start, end: s},\\n            match: {start: s, end: m.index},\\n            right: {start: m.index, end: end},\\n            wholeMatch: {start: start, end: end}\\n          };\\n          pos.push(obj);\\n          if (!g) {\\n            return pos;\\n          }\\n        }\\n      }\\n    }\\n  } while (t && (x.lastIndex = s));\\n\\n  return pos;\\n};\\n\\n/**\\n * matchRecursiveRegExp\\n *\\n * (c) 2007 Steven Levithan <stevenlevithan.com>\\n * MIT License\\n *\\n * Accepts a string to search, a left and right format delimiter\\n * as regex patterns, and optional regex flags. Returns an array\\n * of matches, allowing nested instances of left/right delimiters.\\n * Use the \\\"g\\\" flag to return all matches, otherwise only the\\n * first is returned. Be careful to ensure that the left and\\n * right format delimiters produce mutually exclusive matches.\\n * Backreferences are not supported within the right delimiter\\n * due to how it is internally combined with the left delimiter.\\n * When matching strings whose format delimiters are unbalanced\\n * to the left or right, the output is intentionally as a\\n * conventional regex library with recursion support would\\n * produce, e.g. \\\"<<x>\\\" and \\\"<x>>\\\" both produce [\\\"x\\\"] when using\\n * \\\"<\\\" and \\\">\\\" as the delimiters (both strings contain a single,\\n * balanced instance of \\\"<x>\\\").\\n *\\n * examples:\\n * matchRecursiveRegExp(\\\"test\\\", \\\"\\\\\\\\(\\\", \\\"\\\\\\\\)\\\")\\n * returns: []\\n * matchRecursiveRegExp(\\\"<t<<e>><s>>t<>\\\", \\\"<\\\", \\\">\\\", \\\"g\\\")\\n * returns: [\\\"t<<e>><s>\\\", \\\"\\\"]\\n * matchRecursiveRegExp(\\\"<div id=\\\\\\\"x\\\\\\\">test</div>\\\", \\\"<div\\\\\\\\b[^>]*>\\\", \\\"</div>\\\", \\\"gi\\\")\\n * returns: [\\\"test\\\"]\\n */\\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\\n  'use strict';\\n\\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\\n      results = [];\\n\\n  for (var i = 0; i < matchPos.length; ++i) {\\n    results.push([\\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\\n    ]);\\n  }\\n  return results;\\n};\\n\\n/**\\n *\\n * @param {string} str\\n * @param {string|function} replacement\\n * @param {string} left\\n * @param {string} right\\n * @param {string} flags\\n * @returns {string}\\n */\\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\\n  'use strict';\\n\\n  if (!showdown.helper.isFunction(replacement)) {\\n    var repStr = replacement;\\n    replacement = function () {\\n      return repStr;\\n    };\\n  }\\n\\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\\n      finalStr = str,\\n      lng = matchPos.length;\\n\\n  if (lng > 0) {\\n    var bits = [];\\n    if (matchPos[0].wholeMatch.start !== 0) {\\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\\n    }\\n    for (var i = 0; i < lng; ++i) {\\n      bits.push(\\n        replacement(\\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\\n        )\\n      );\\n      if (i < lng - 1) {\\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\\n      }\\n    }\\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\\n    }\\n    finalStr = bits.join('');\\n  }\\n  return finalStr;\\n};\\n\\n/**\\n * Returns the index within the passed String object of the first occurrence of the specified regex,\\n * starting the search at fromIndex. Returns -1 if the value is not found.\\n *\\n * @param {string} str string to search\\n * @param {RegExp} regex Regular expression to search\\n * @param {int} [fromIndex = 0] Index to start the search\\n * @returns {Number}\\n * @throws InvalidArgumentError\\n */\\nshowdown.helper.regexIndexOf = function (str, regex, fromIndex) {\\n  'use strict';\\n  if (!showdown.helper.isString(str)) {\\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\\n  }\\n  if (regex instanceof RegExp === false) {\\n    throw 'InvalidArgumentError: second parameter of showdown.helper.regexIndexOf function must be an instance of RegExp';\\n  }\\n  var indexOf = str.substring(fromIndex || 0).search(regex);\\n  return (indexOf >= 0) ? (indexOf + (fromIndex || 0)) : indexOf;\\n};\\n\\n/**\\n * Splits the passed string object at the defined index, and returns an array composed of the two substrings\\n * @param {string} str string to split\\n * @param {int} index index to split string at\\n * @returns {[string,string]}\\n * @throws InvalidArgumentError\\n */\\nshowdown.helper.splitAtIndex = function (str, index) {\\n  'use strict';\\n  if (!showdown.helper.isString(str)) {\\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\\n  }\\n  return [str.substring(0, index), str.substring(index)];\\n};\\n\\n/**\\n * Obfuscate an e-mail address through the use of Character Entities,\\n * transforming ASCII characters into their equivalent decimal or hex entities.\\n *\\n * Since it has a random component, subsequent calls to this function produce different results\\n *\\n * @param {string} mail\\n * @returns {string}\\n */\\nshowdown.helper.encodeEmailAddress = function (mail) {\\n  'use strict';\\n  var encode = [\\n    function (ch) {\\n      return '&#' + ch.charCodeAt(0) + ';';\\n    },\\n    function (ch) {\\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\\n    },\\n    function (ch) {\\n      return ch;\\n    }\\n  ];\\n\\n  mail = mail.replace(/./g, function (ch) {\\n    if (ch === '@') {\\n      // this *must* be encoded. I insist.\\n      ch = encode[Math.floor(Math.random() * 2)](ch);\\n    } else {\\n      var r = Math.random();\\n      // roughly 10% raw, 45% hex, 45% dec\\n      ch = (\\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\\n      );\\n    }\\n    return ch;\\n  });\\n\\n  return mail;\\n};\\n\\n/**\\n *\\n * @param str\\n * @param targetLength\\n * @param padString\\n * @returns {string}\\n */\\nshowdown.helper.padEnd = function padEnd (str, targetLength, padString) {\\n  'use strict';\\n  /*jshint bitwise: false*/\\n  // eslint-disable-next-line space-infix-ops\\n  targetLength = targetLength>>0; //floor if number or convert non-number to 0;\\n  /*jshint bitwise: true*/\\n  padString = String(padString || ' ');\\n  if (str.length > targetLength) {\\n    return String(str);\\n  } else {\\n    targetLength = targetLength - str.length;\\n    if (targetLength > padString.length) {\\n      padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\\n    }\\n    return String(str) + padString.slice(0,targetLength);\\n  }\\n};\\n\\n/**\\n * POLYFILLS\\n */\\n// use this instead of builtin is undefined for IE8 compatibility\\nif (typeof (console) === 'undefined') {\\n  console = {\\n    warn: function (msg) {\\n      'use strict';\\n      alert(msg);\\n    },\\n    log: function (msg) {\\n      'use strict';\\n      alert(msg);\\n    },\\n    error: function (msg) {\\n      'use strict';\\n      throw msg;\\n    }\\n  };\\n}\\n\\n/**\\n * Common regexes.\\n * We declare some common regexes to improve performance\\n */\\nshowdown.helper.regexes = {\\n  asteriskDashAndColon: /([*_:~])/g\\n};\\n\\n/**\\n * EMOJIS LIST\\n */\\nshowdown.helper.emojis = {\\n  '+1':'\\\\ud83d\\\\udc4d',\\n  '-1':'\\\\ud83d\\\\udc4e',\\n  '100':'\\\\ud83d\\\\udcaf',\\n  '1234':'\\\\ud83d\\\\udd22',\\n  '1st_place_medal':'\\\\ud83e\\\\udd47',\\n  '2nd_place_medal':'\\\\ud83e\\\\udd48',\\n  '3rd_place_medal':'\\\\ud83e\\\\udd49',\\n  '8ball':'\\\\ud83c\\\\udfb1',\\n  'a':'\\\\ud83c\\\\udd70\\\\ufe0f',\\n  'ab':'\\\\ud83c\\\\udd8e',\\n  'abc':'\\\\ud83d\\\\udd24',\\n  'abcd':'\\\\ud83d\\\\udd21',\\n  'accept':'\\\\ud83c\\\\ude51',\\n  'aerial_tramway':'\\\\ud83d\\\\udea1',\\n  'airplane':'\\\\u2708\\\\ufe0f',\\n  'alarm_clock':'\\\\u23f0',\\n  'alembic':'\\\\u2697\\\\ufe0f',\\n  'alien':'\\\\ud83d\\\\udc7d',\\n  'ambulance':'\\\\ud83d\\\\ude91',\\n  'amphora':'\\\\ud83c\\\\udffa',\\n  'anchor':'\\\\u2693\\\\ufe0f',\\n  'angel':'\\\\ud83d\\\\udc7c',\\n  'anger':'\\\\ud83d\\\\udca2',\\n  'angry':'\\\\ud83d\\\\ude20',\\n  'anguished':'\\\\ud83d\\\\ude27',\\n  'ant':'\\\\ud83d\\\\udc1c',\\n  'apple':'\\\\ud83c\\\\udf4e',\\n  'aquarius':'\\\\u2652\\\\ufe0f',\\n  'aries':'\\\\u2648\\\\ufe0f',\\n  'arrow_backward':'\\\\u25c0\\\\ufe0f',\\n  'arrow_double_down':'\\\\u23ec',\\n  'arrow_double_up':'\\\\u23eb',\\n  'arrow_down':'\\\\u2b07\\\\ufe0f',\\n  'arrow_down_small':'\\\\ud83d\\\\udd3d',\\n  'arrow_forward':'\\\\u25b6\\\\ufe0f',\\n  'arrow_heading_down':'\\\\u2935\\\\ufe0f',\\n  'arrow_heading_up':'\\\\u2934\\\\ufe0f',\\n  'arrow_left':'\\\\u2b05\\\\ufe0f',\\n  'arrow_lower_left':'\\\\u2199\\\\ufe0f',\\n  'arrow_lower_right':'\\\\u2198\\\\ufe0f',\\n  'arrow_right':'\\\\u27a1\\\\ufe0f',\\n  'arrow_right_hook':'\\\\u21aa\\\\ufe0f',\\n  'arrow_up':'\\\\u2b06\\\\ufe0f',\\n  'arrow_up_down':'\\\\u2195\\\\ufe0f',\\n  'arrow_up_small':'\\\\ud83d\\\\udd3c',\\n  'arrow_upper_left':'\\\\u2196\\\\ufe0f',\\n  'arrow_upper_right':'\\\\u2197\\\\ufe0f',\\n  'arrows_clockwise':'\\\\ud83d\\\\udd03',\\n  'arrows_counterclockwise':'\\\\ud83d\\\\udd04',\\n  'art':'\\\\ud83c\\\\udfa8',\\n  'articulated_lorry':'\\\\ud83d\\\\ude9b',\\n  'artificial_satellite':'\\\\ud83d\\\\udef0',\\n  'astonished':'\\\\ud83d\\\\ude32',\\n  'athletic_shoe':'\\\\ud83d\\\\udc5f',\\n  'atm':'\\\\ud83c\\\\udfe7',\\n  'atom_symbol':'\\\\u269b\\\\ufe0f',\\n  'avocado':'\\\\ud83e\\\\udd51',\\n  'b':'\\\\ud83c\\\\udd71\\\\ufe0f',\\n  'baby':'\\\\ud83d\\\\udc76',\\n  'baby_bottle':'\\\\ud83c\\\\udf7c',\\n  'baby_chick':'\\\\ud83d\\\\udc24',\\n  'baby_symbol':'\\\\ud83d\\\\udebc',\\n  'back':'\\\\ud83d\\\\udd19',\\n  'bacon':'\\\\ud83e\\\\udd53',\\n  'badminton':'\\\\ud83c\\\\udff8',\\n  'baggage_claim':'\\\\ud83d\\\\udec4',\\n  'baguette_bread':'\\\\ud83e\\\\udd56',\\n  'balance_scale':'\\\\u2696\\\\ufe0f',\\n  'balloon':'\\\\ud83c\\\\udf88',\\n  'ballot_box':'\\\\ud83d\\\\uddf3',\\n  'ballot_box_with_check':'\\\\u2611\\\\ufe0f',\\n  'bamboo':'\\\\ud83c\\\\udf8d',\\n  'banana':'\\\\ud83c\\\\udf4c',\\n  'bangbang':'\\\\u203c\\\\ufe0f',\\n  'bank':'\\\\ud83c\\\\udfe6',\\n  'bar_chart':'\\\\ud83d\\\\udcca',\\n  'barber':'\\\\ud83d\\\\udc88',\\n  'baseball':'\\\\u26be\\\\ufe0f',\\n  'basketball':'\\\\ud83c\\\\udfc0',\\n  'basketball_man':'\\\\u26f9\\\\ufe0f',\\n  'basketball_woman':'\\\\u26f9\\\\ufe0f&zwj;\\\\u2640\\\\ufe0f',\\n  'bat':'\\\\ud83e\\\\udd87',\\n  'bath':'\\\\ud83d\\\\udec0',\\n  'bathtub':'\\\\ud83d\\\\udec1',\\n  'battery':'\\\\ud83d\\\\udd0b',\\n  'beach_umbrella':'\\\\ud83c\\\\udfd6',\\n  'bear':'\\\\ud83d\\\\udc3b',\\n  'bed':'\\\\ud83d\\\\udecf',\\n  'bee':'\\\\ud83d\\\\udc1d',\\n  'beer':'\\\\ud83c\\\\udf7a',\\n  'beers':'\\\\ud83c\\\\udf7b',\\n  'beetle':'\\\\ud83d\\\\udc1e',\\n  'beginner':'\\\\ud83d\\\\udd30',\\n  'bell':'\\\\ud83d\\\\udd14',\\n  'bellhop_bell':'\\\\ud83d\\\\udece',\\n  'bento':'\\\\ud83c\\\\udf71',\\n  'biking_man':'\\\\ud83d\\\\udeb4',\\n  'bike':'\\\\ud83d\\\\udeb2',\\n  'biking_woman':'\\\\ud83d\\\\udeb4&zwj;\\\\u2640\\\\ufe0f',\\n  'bikini':'\\\\ud83d\\\\udc59',\\n  'biohazard':'\\\\u2623\\\\ufe0f',\\n  'bird':'\\\\ud83d\\\\udc26',\\n  'birthday':'\\\\ud83c\\\\udf82',\\n  'black_circle':'\\\\u26ab\\\\ufe0f',\\n  'black_flag':'\\\\ud83c\\\\udff4',\\n  'black_heart':'\\\\ud83d\\\\udda4',\\n  'black_joker':'\\\\ud83c\\\\udccf',\\n  'black_large_square':'\\\\u2b1b\\\\ufe0f',\\n  'black_medium_small_square':'\\\\u25fe\\\\ufe0f',\\n  'black_medium_square':'\\\\u25fc\\\\ufe0f',\\n  'black_nib':'\\\\u2712\\\\ufe0f',\\n  'black_small_square':'\\\\u25aa\\\\ufe0f',\\n  'black_square_button':'\\\\ud83d\\\\udd32',\\n  'blonde_man':'\\\\ud83d\\\\udc71',\\n  'blonde_woman':'\\\\ud83d\\\\udc71&zwj;\\\\u2640\\\\ufe0f',\\n  'blossom':'\\\\ud83c\\\\udf3c',\\n  'blowfish':'\\\\ud83d\\\\udc21',\\n  'blue_book':'\\\\ud83d\\\\udcd8',\\n  'blue_car':'\\\\ud83d\\\\ude99',\\n  'blue_heart':'\\\\ud83d\\\\udc99',\\n  'blush':'\\\\ud83d\\\\ude0a',\\n  'boar':'\\\\ud83d\\\\udc17',\\n  'boat':'\\\\u26f5\\\\ufe0f',\\n  'bomb':'\\\\ud83d\\\\udca3',\\n  'book':'\\\\ud83d\\\\udcd6',\\n  'bookmark':'\\\\ud83d\\\\udd16',\\n  'bookmark_tabs':'\\\\ud83d\\\\udcd1',\\n  'books':'\\\\ud83d\\\\udcda',\\n  'boom':'\\\\ud83d\\\\udca5',\\n  'boot':'\\\\ud83d\\\\udc62',\\n  'bouquet':'\\\\ud83d\\\\udc90',\\n  'bowing_man':'\\\\ud83d\\\\ude47',\\n  'bow_and_arrow':'\\\\ud83c\\\\udff9',\\n  'bowing_woman':'\\\\ud83d\\\\ude47&zwj;\\\\u2640\\\\ufe0f',\\n  'bowling':'\\\\ud83c\\\\udfb3',\\n  'boxing_glove':'\\\\ud83e\\\\udd4a',\\n  'boy':'\\\\ud83d\\\\udc66',\\n  'bread':'\\\\ud83c\\\\udf5e',\\n  'bride_with_veil':'\\\\ud83d\\\\udc70',\\n  'bridge_at_night':'\\\\ud83c\\\\udf09',\\n  'briefcase':'\\\\ud83d\\\\udcbc',\\n  'broken_heart':'\\\\ud83d\\\\udc94',\\n  'bug':'\\\\ud83d\\\\udc1b',\\n  'building_construction':'\\\\ud83c\\\\udfd7',\\n  'bulb':'\\\\ud83d\\\\udca1',\\n  'bullettrain_front':'\\\\ud83d\\\\ude85',\\n  'bullettrain_side':'\\\\ud83d\\\\ude84',\\n  'burrito':'\\\\ud83c\\\\udf2f',\\n  'bus':'\\\\ud83d\\\\ude8c',\\n  'business_suit_levitating':'\\\\ud83d\\\\udd74',\\n  'busstop':'\\\\ud83d\\\\ude8f',\\n  'bust_in_silhouette':'\\\\ud83d\\\\udc64',\\n  'busts_in_silhouette':'\\\\ud83d\\\\udc65',\\n  'butterfly':'\\\\ud83e\\\\udd8b',\\n  'cactus':'\\\\ud83c\\\\udf35',\\n  'cake':'\\\\ud83c\\\\udf70',\\n  'calendar':'\\\\ud83d\\\\udcc6',\\n  'call_me_hand':'\\\\ud83e\\\\udd19',\\n  'calling':'\\\\ud83d\\\\udcf2',\\n  'camel':'\\\\ud83d\\\\udc2b',\\n  'camera':'\\\\ud83d\\\\udcf7',\\n  'camera_flash':'\\\\ud83d\\\\udcf8',\\n  'camping':'\\\\ud83c\\\\udfd5',\\n  'cancer':'\\\\u264b\\\\ufe0f',\\n  'candle':'\\\\ud83d\\\\udd6f',\\n  'candy':'\\\\ud83c\\\\udf6c',\\n  'canoe':'\\\\ud83d\\\\udef6',\\n  'capital_abcd':'\\\\ud83d\\\\udd20',\\n  'capricorn':'\\\\u2651\\\\ufe0f',\\n  'car':'\\\\ud83d\\\\ude97',\\n  'card_file_box':'\\\\ud83d\\\\uddc3',\\n  'card_index':'\\\\ud83d\\\\udcc7',\\n  'card_index_dividers':'\\\\ud83d\\\\uddc2',\\n  'carousel_horse':'\\\\ud83c\\\\udfa0',\\n  'carrot':'\\\\ud83e\\\\udd55',\\n  'cat':'\\\\ud83d\\\\udc31',\\n  'cat2':'\\\\ud83d\\\\udc08',\\n  'cd':'\\\\ud83d\\\\udcbf',\\n  'chains':'\\\\u26d3',\\n  'champagne':'\\\\ud83c\\\\udf7e',\\n  'chart':'\\\\ud83d\\\\udcb9',\\n  'chart_with_downwards_trend':'\\\\ud83d\\\\udcc9',\\n  'chart_with_upwards_trend':'\\\\ud83d\\\\udcc8',\\n  'checkered_flag':'\\\\ud83c\\\\udfc1',\\n  'cheese':'\\\\ud83e\\\\uddc0',\\n  'cherries':'\\\\ud83c\\\\udf52',\\n  'cherry_blossom':'\\\\ud83c\\\\udf38',\\n  'chestnut':'\\\\ud83c\\\\udf30',\\n  'chicken':'\\\\ud83d\\\\udc14',\\n  'children_crossing':'\\\\ud83d\\\\udeb8',\\n  'chipmunk':'\\\\ud83d\\\\udc3f',\\n  'chocolate_bar':'\\\\ud83c\\\\udf6b',\\n  'christmas_tree':'\\\\ud83c\\\\udf84',\\n  'church':'\\\\u26ea\\\\ufe0f',\\n  'cinema':'\\\\ud83c\\\\udfa6',\\n  'circus_tent':'\\\\ud83c\\\\udfaa',\\n  'city_sunrise':'\\\\ud83c\\\\udf07',\\n  'city_sunset':'\\\\ud83c\\\\udf06',\\n  'cityscape':'\\\\ud83c\\\\udfd9',\\n  'cl':'\\\\ud83c\\\\udd91',\\n  'clamp':'\\\\ud83d\\\\udddc',\\n  'clap':'\\\\ud83d\\\\udc4f',\\n  'clapper':'\\\\ud83c\\\\udfac',\\n  'classical_building':'\\\\ud83c\\\\udfdb',\\n  'clinking_glasses':'\\\\ud83e\\\\udd42',\\n  'clipboard':'\\\\ud83d\\\\udccb',\\n  'clock1':'\\\\ud83d\\\\udd50',\\n  'clock10':'\\\\ud83d\\\\udd59',\\n  'clock1030':'\\\\ud83d\\\\udd65',\\n  'clock11':'\\\\ud83d\\\\udd5a',\\n  'clock1130':'\\\\ud83d\\\\udd66',\\n  'clock12':'\\\\ud83d\\\\udd5b',\\n  'clock1230':'\\\\ud83d\\\\udd67',\\n  'clock130':'\\\\ud83d\\\\udd5c',\\n  'clock2':'\\\\ud83d\\\\udd51',\\n  'clock230':'\\\\ud83d\\\\udd5d',\\n  'clock3':'\\\\ud83d\\\\udd52',\\n  'clock330':'\\\\ud83d\\\\udd5e',\\n  'clock4':'\\\\ud83d\\\\udd53',\\n  'clock430':'\\\\ud83d\\\\udd5f',\\n  'clock5':'\\\\ud83d\\\\udd54',\\n  'clock530':'\\\\ud83d\\\\udd60',\\n  'clock6':'\\\\ud83d\\\\udd55',\\n  'clock630':'\\\\ud83d\\\\udd61',\\n  'clock7':'\\\\ud83d\\\\udd56',\\n  'clock730':'\\\\ud83d\\\\udd62',\\n  'clock8':'\\\\ud83d\\\\udd57',\\n  'clock830':'\\\\ud83d\\\\udd63',\\n  'clock9':'\\\\ud83d\\\\udd58',\\n  'clock930':'\\\\ud83d\\\\udd64',\\n  'closed_book':'\\\\ud83d\\\\udcd5',\\n  'closed_lock_with_key':'\\\\ud83d\\\\udd10',\\n  'closed_umbrella':'\\\\ud83c\\\\udf02',\\n  'cloud':'\\\\u2601\\\\ufe0f',\\n  'cloud_with_lightning':'\\\\ud83c\\\\udf29',\\n  'cloud_with_lightning_and_rain':'\\\\u26c8',\\n  'cloud_with_rain':'\\\\ud83c\\\\udf27',\\n  'cloud_with_snow':'\\\\ud83c\\\\udf28',\\n  'clown_face':'\\\\ud83e\\\\udd21',\\n  'clubs':'\\\\u2663\\\\ufe0f',\\n  'cocktail':'\\\\ud83c\\\\udf78',\\n  'coffee':'\\\\u2615\\\\ufe0f',\\n  'coffin':'\\\\u26b0\\\\ufe0f',\\n  'cold_sweat':'\\\\ud83d\\\\ude30',\\n  'comet':'\\\\u2604\\\\ufe0f',\\n  'computer':'\\\\ud83d\\\\udcbb',\\n  'computer_mouse':'\\\\ud83d\\\\uddb1',\\n  'confetti_ball':'\\\\ud83c\\\\udf8a',\\n  'confounded':'\\\\ud83d\\\\ude16',\\n  'confused':'\\\\ud83d\\\\ude15',\\n  'congratulations':'\\\\u3297\\\\ufe0f',\\n  'construction':'\\\\ud83d\\\\udea7',\\n  'construction_worker_man':'\\\\ud83d\\\\udc77',\\n  'construction_worker_woman':'\\\\ud83d\\\\udc77&zwj;\\\\u2640\\\\ufe0f',\\n  'control_knobs':'\\\\ud83c\\\\udf9b',\\n  'convenience_store':'\\\\ud83c\\\\udfea',\\n  'cookie':'\\\\ud83c\\\\udf6a',\\n  'cool':'\\\\ud83c\\\\udd92',\\n  'policeman':'\\\\ud83d\\\\udc6e',\\n  'copyright':'\\\\u00a9\\\\ufe0f',\\n  'corn':'\\\\ud83c\\\\udf3d',\\n  'couch_and_lamp':'\\\\ud83d\\\\udecb',\\n  'couple':'\\\\ud83d\\\\udc6b',\\n  'couple_with_heart_woman_man':'\\\\ud83d\\\\udc91',\\n  'couple_with_heart_man_man':'\\\\ud83d\\\\udc68&zwj;\\\\u2764\\\\ufe0f&zwj;\\\\ud83d\\\\udc68',\\n  'couple_with_heart_woman_woman':'\\\\ud83d\\\\udc69&zwj;\\\\u2764\\\\ufe0f&zwj;\\\\ud83d\\\\udc69',\\n  'couplekiss_man_man':'\\\\ud83d\\\\udc68&zwj;\\\\u2764\\\\ufe0f&zwj;\\\\ud83d\\\\udc8b&zwj;\\\\ud83d\\\\udc68',\\n  'couplekiss_man_woman':'\\\\ud83d\\\\udc8f',\\n  'couplekiss_woman_woman':'\\\\ud83d\\\\udc69&zwj;\\\\u2764\\\\ufe0f&zwj;\\\\ud83d\\\\udc8b&zwj;\\\\ud83d\\\\udc69',\\n  'cow':'\\\\ud83d\\\\udc2e',\\n  'cow2':'\\\\ud83d\\\\udc04',\\n  'cowboy_hat_face':'\\\\ud83e\\\\udd20',\\n  'crab':'\\\\ud83e\\\\udd80',\\n  'crayon':'\\\\ud83d\\\\udd8d',\\n  'credit_card':'\\\\ud83d\\\\udcb3',\\n  'crescent_moon':'\\\\ud83c\\\\udf19',\\n  'cricket':'\\\\ud83c\\\\udfcf',\\n  'crocodile':'\\\\ud83d\\\\udc0a',\\n  'croissant':'\\\\ud83e\\\\udd50',\\n  'crossed_fingers':'\\\\ud83e\\\\udd1e',\\n  'crossed_flags':'\\\\ud83c\\\\udf8c',\\n  'crossed_swords':'\\\\u2694\\\\ufe0f',\\n  'crown':'\\\\ud83d\\\\udc51',\\n  'cry':'\\\\ud83d\\\\ude22',\\n  'crying_cat_face':'\\\\ud83d\\\\ude3f',\\n  'crystal_ball':'\\\\ud83d\\\\udd2e',\\n  'cucumber':'\\\\ud83e\\\\udd52',\\n  'cupid':'\\\\ud83d\\\\udc98',\\n  'curly_loop':'\\\\u27b0',\\n  'currency_exchange':'\\\\ud83d\\\\udcb1',\\n  'curry':'\\\\ud83c\\\\udf5b',\\n  'custard':'\\\\ud83c\\\\udf6e',\\n  'customs':'\\\\ud83d\\\\udec3',\\n  'cyclone':'\\\\ud83c\\\\udf00',\\n  'dagger':'\\\\ud83d\\\\udde1',\\n  'dancer':'\\\\ud83d\\\\udc83',\\n  'dancing_women':'\\\\ud83d\\\\udc6f',\\n  'dancing_men':'\\\\ud83d\\\\udc6f&zwj;\\\\u2642\\\\ufe0f',\\n  'dango':'\\\\ud83c\\\\udf61',\\n  'dark_sunglasses':'\\\\ud83d\\\\udd76',\\n  'dart':'\\\\ud83c\\\\udfaf',\\n  'dash':'\\\\ud83d\\\\udca8',\\n  'date':'\\\\ud83d\\\\udcc5',\\n  'deciduous_tree':'\\\\ud83c\\\\udf33',\\n  'deer':'\\\\ud83e\\\\udd8c',\\n  'department_store':'\\\\ud83c\\\\udfec',\\n  'derelict_house':'\\\\ud83c\\\\udfda',\\n  'desert':'\\\\ud83c\\\\udfdc',\\n  'desert_island':'\\\\ud83c\\\\udfdd',\\n  'desktop_computer':'\\\\ud83d\\\\udda5',\\n  'male_detective':'\\\\ud83d\\\\udd75\\\\ufe0f',\\n  'diamond_shape_with_a_dot_inside':'\\\\ud83d\\\\udca0',\\n  'diamonds':'\\\\u2666\\\\ufe0f',\\n  'disappointed':'\\\\ud83d\\\\ude1e',\\n  'disappointed_relieved':'\\\\ud83d\\\\ude25',\\n  'dizzy':'\\\\ud83d\\\\udcab',\\n  'dizzy_face':'\\\\ud83d\\\\ude35',\\n  'do_not_litter':'\\\\ud83d\\\\udeaf',\\n  'dog':'\\\\ud83d\\\\udc36',\\n  'dog2':'\\\\ud83d\\\\udc15',\\n  'dollar':'\\\\ud83d\\\\udcb5',\\n  'dolls':'\\\\ud83c\\\\udf8e',\\n  'dolphin':'\\\\ud83d\\\\udc2c',\\n  'door':'\\\\ud83d\\\\udeaa',\\n  'doughnut':'\\\\ud83c\\\\udf69',\\n  'dove':'\\\\ud83d\\\\udd4a',\\n  'dragon':'\\\\ud83d\\\\udc09',\\n  'dragon_face':'\\\\ud83d\\\\udc32',\\n  'dress':'\\\\ud83d\\\\udc57',\\n  'dromedary_camel':'\\\\ud83d\\\\udc2a',\\n  'drooling_face':'\\\\ud83e\\\\udd24',\\n  'droplet':'\\\\ud83d\\\\udca7',\\n  'drum':'\\\\ud83e\\\\udd41',\\n  'duck':'\\\\ud83e\\\\udd86',\\n  'dvd':'\\\\ud83d\\\\udcc0',\\n  'e-mail':'\\\\ud83d\\\\udce7',\\n  'eagle':'\\\\ud83e\\\\udd85',\\n  'ear':'\\\\ud83d\\\\udc42',\\n  'ear_of_rice':'\\\\ud83c\\\\udf3e',\\n  'earth_africa':'\\\\ud83c\\\\udf0d',\\n  'earth_americas':'\\\\ud83c\\\\udf0e',\\n  'earth_asia':'\\\\ud83c\\\\udf0f',\\n  'egg':'\\\\ud83e\\\\udd5a',\\n  'eggplant':'\\\\ud83c\\\\udf46',\\n  'eight_pointed_black_star':'\\\\u2734\\\\ufe0f',\\n  'eight_spoked_asterisk':'\\\\u2733\\\\ufe0f',\\n  'electric_plug':'\\\\ud83d\\\\udd0c',\\n  'elephant':'\\\\ud83d\\\\udc18',\\n  'email':'\\\\u2709\\\\ufe0f',\\n  'end':'\\\\ud83d\\\\udd1a',\\n  'envelope_with_arrow':'\\\\ud83d\\\\udce9',\\n  'euro':'\\\\ud83d\\\\udcb6',\\n  'european_castle':'\\\\ud83c\\\\udff0',\\n  'european_post_office':'\\\\ud83c\\\\udfe4',\\n  'evergreen_tree':'\\\\ud83c\\\\udf32',\\n  'exclamation':'\\\\u2757\\\\ufe0f',\\n  'expressionless':'\\\\ud83d\\\\ude11',\\n  'eye':'\\\\ud83d\\\\udc41',\\n  'eye_speech_bubble':'\\\\ud83d\\\\udc41&zwj;\\\\ud83d\\\\udde8',\\n  'eyeglasses':'\\\\ud83d\\\\udc53',\\n  'eyes':'\\\\ud83d\\\\udc40',\\n  'face_with_head_bandage':'\\\\ud83e\\\\udd15',\\n  'face_with_thermometer':'\\\\ud83e\\\\udd12',\\n  'fist_oncoming':'\\\\ud83d\\\\udc4a',\\n  'factory':'\\\\ud83c\\\\udfed',\\n  'fallen_leaf':'\\\\ud83c\\\\udf42',\\n  'family_man_woman_boy':'\\\\ud83d\\\\udc6a',\\n  'family_man_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_boy_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc66&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67',\\n  'family_man_girl_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_girl_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc67',\\n  'family_man_man_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_man_boy_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc66&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_man_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67',\\n  'family_man_man_girl_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_man_girl_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc67',\\n  'family_man_woman_boy_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc66&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_woman_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67',\\n  'family_man_woman_girl_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_woman_girl_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc67',\\n  'family_woman_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_boy_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc66&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_girl':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67',\\n  'family_woman_girl_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_girl_girl':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc67',\\n  'family_woman_woman_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_woman_boy_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc66&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_woman_girl':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67',\\n  'family_woman_woman_girl_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_woman_girl_girl':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc67',\\n  'fast_forward':'\\\\u23e9',\\n  'fax':'\\\\ud83d\\\\udce0',\\n  'fearful':'\\\\ud83d\\\\ude28',\\n  'feet':'\\\\ud83d\\\\udc3e',\\n  'female_detective':'\\\\ud83d\\\\udd75\\\\ufe0f&zwj;\\\\u2640\\\\ufe0f',\\n  'ferris_wheel':'\\\\ud83c\\\\udfa1',\\n  'ferry':'\\\\u26f4',\\n  'field_hockey':'\\\\ud83c\\\\udfd1',\\n  'file_cabinet':'\\\\ud83d\\\\uddc4',\\n  'file_folder':'\\\\ud83d\\\\udcc1',\\n  'film_projector':'\\\\ud83d\\\\udcfd',\\n  'film_strip':'\\\\ud83c\\\\udf9e',\\n  'fire':'\\\\ud83d\\\\udd25',\\n  'fire_engine':'\\\\ud83d\\\\ude92',\\n  'fireworks':'\\\\ud83c\\\\udf86',\\n  'first_quarter_moon':'\\\\ud83c\\\\udf13',\\n  'first_quarter_moon_with_face':'\\\\ud83c\\\\udf1b',\\n  'fish':'\\\\ud83d\\\\udc1f',\\n  'fish_cake':'\\\\ud83c\\\\udf65',\\n  'fishing_pole_and_fish':'\\\\ud83c\\\\udfa3',\\n  'fist_raised':'\\\\u270a',\\n  'fist_left':'\\\\ud83e\\\\udd1b',\\n  'fist_right':'\\\\ud83e\\\\udd1c',\\n  'flags':'\\\\ud83c\\\\udf8f',\\n  'flashlight':'\\\\ud83d\\\\udd26',\\n  'fleur_de_lis':'\\\\u269c\\\\ufe0f',\\n  'flight_arrival':'\\\\ud83d\\\\udeec',\\n  'flight_departure':'\\\\ud83d\\\\udeeb',\\n  'floppy_disk':'\\\\ud83d\\\\udcbe',\\n  'flower_playing_cards':'\\\\ud83c\\\\udfb4',\\n  'flushed':'\\\\ud83d\\\\ude33',\\n  'fog':'\\\\ud83c\\\\udf2b',\\n  'foggy':'\\\\ud83c\\\\udf01',\\n  'football':'\\\\ud83c\\\\udfc8',\\n  'footprints':'\\\\ud83d\\\\udc63',\\n  'fork_and_knife':'\\\\ud83c\\\\udf74',\\n  'fountain':'\\\\u26f2\\\\ufe0f',\\n  'fountain_pen':'\\\\ud83d\\\\udd8b',\\n  'four_leaf_clover':'\\\\ud83c\\\\udf40',\\n  'fox_face':'\\\\ud83e\\\\udd8a',\\n  'framed_picture':'\\\\ud83d\\\\uddbc',\\n  'free':'\\\\ud83c\\\\udd93',\\n  'fried_egg':'\\\\ud83c\\\\udf73',\\n  'fried_shrimp':'\\\\ud83c\\\\udf64',\\n  'fries':'\\\\ud83c\\\\udf5f',\\n  'frog':'\\\\ud83d\\\\udc38',\\n  'frowning':'\\\\ud83d\\\\ude26',\\n  'frowning_face':'\\\\u2639\\\\ufe0f',\\n  'frowning_man':'\\\\ud83d\\\\ude4d&zwj;\\\\u2642\\\\ufe0f',\\n  'frowning_woman':'\\\\ud83d\\\\ude4d',\\n  'middle_finger':'\\\\ud83d\\\\udd95',\\n  'fuelpump':'\\\\u26fd\\\\ufe0f',\\n  'full_moon':'\\\\ud83c\\\\udf15',\\n  'full_moon_with_face':'\\\\ud83c\\\\udf1d',\\n  'funeral_urn':'\\\\u26b1\\\\ufe0f',\\n  'game_die':'\\\\ud83c\\\\udfb2',\\n  'gear':'\\\\u2699\\\\ufe0f',\\n  'gem':'\\\\ud83d\\\\udc8e',\\n  'gemini':'\\\\u264a\\\\ufe0f',\\n  'ghost':'\\\\ud83d\\\\udc7b',\\n  'gift':'\\\\ud83c\\\\udf81',\\n  'gift_heart':'\\\\ud83d\\\\udc9d',\\n  'girl':'\\\\ud83d\\\\udc67',\\n  'globe_with_meridians':'\\\\ud83c\\\\udf10',\\n  'goal_net':'\\\\ud83e\\\\udd45',\\n  'goat':'\\\\ud83d\\\\udc10',\\n  'golf':'\\\\u26f3\\\\ufe0f',\\n  'golfing_man':'\\\\ud83c\\\\udfcc\\\\ufe0f',\\n  'golfing_woman':'\\\\ud83c\\\\udfcc\\\\ufe0f&zwj;\\\\u2640\\\\ufe0f',\\n  'gorilla':'\\\\ud83e\\\\udd8d',\\n  'grapes':'\\\\ud83c\\\\udf47',\\n  'green_apple':'\\\\ud83c\\\\udf4f',\\n  'green_book':'\\\\ud83d\\\\udcd7',\\n  'green_heart':'\\\\ud83d\\\\udc9a',\\n  'green_salad':'\\\\ud83e\\\\udd57',\\n  'grey_exclamation':'\\\\u2755',\\n  'grey_question':'\\\\u2754',\\n  'grimacing':'\\\\ud83d\\\\ude2c',\\n  'grin':'\\\\ud83d\\\\ude01',\\n  'grinning':'\\\\ud83d\\\\ude00',\\n  'guardsman':'\\\\ud83d\\\\udc82',\\n  'guardswoman':'\\\\ud83d\\\\udc82&zwj;\\\\u2640\\\\ufe0f',\\n  'guitar':'\\\\ud83c\\\\udfb8',\\n  'gun':'\\\\ud83d\\\\udd2b',\\n  'haircut_woman':'\\\\ud83d\\\\udc87',\\n  'haircut_man':'\\\\ud83d\\\\udc87&zwj;\\\\u2642\\\\ufe0f',\\n  'hamburger':'\\\\ud83c\\\\udf54',\\n  'hammer':'\\\\ud83d\\\\udd28',\\n  'hammer_and_pick':'\\\\u2692',\\n  'hammer_and_wrench':'\\\\ud83d\\\\udee0',\\n  'hamster':'\\\\ud83d\\\\udc39',\\n  'hand':'\\\\u270b',\\n  'handbag':'\\\\ud83d\\\\udc5c',\\n  'handshake':'\\\\ud83e\\\\udd1d',\\n  'hankey':'\\\\ud83d\\\\udca9',\\n  'hatched_chick':'\\\\ud83d\\\\udc25',\\n  'hatching_chick':'\\\\ud83d\\\\udc23',\\n  'headphones':'\\\\ud83c\\\\udfa7',\\n  'hear_no_evil':'\\\\ud83d\\\\ude49',\\n  'heart':'\\\\u2764\\\\ufe0f',\\n  'heart_decoration':'\\\\ud83d\\\\udc9f',\\n  'heart_eyes':'\\\\ud83d\\\\ude0d',\\n  'heart_eyes_cat':'\\\\ud83d\\\\ude3b',\\n  'heartbeat':'\\\\ud83d\\\\udc93',\\n  'heartpulse':'\\\\ud83d\\\\udc97',\\n  'hearts':'\\\\u2665\\\\ufe0f',\\n  'heavy_check_mark':'\\\\u2714\\\\ufe0f',\\n  'heavy_division_sign':'\\\\u2797',\\n  'heavy_dollar_sign':'\\\\ud83d\\\\udcb2',\\n  'heavy_heart_exclamation':'\\\\u2763\\\\ufe0f',\\n  'heavy_minus_sign':'\\\\u2796',\\n  'heavy_multiplication_x':'\\\\u2716\\\\ufe0f',\\n  'heavy_plus_sign':'\\\\u2795',\\n  'helicopter':'\\\\ud83d\\\\ude81',\\n  'herb':'\\\\ud83c\\\\udf3f',\\n  'hibiscus':'\\\\ud83c\\\\udf3a',\\n  'high_brightness':'\\\\ud83d\\\\udd06',\\n  'high_heel':'\\\\ud83d\\\\udc60',\\n  'hocho':'\\\\ud83d\\\\udd2a',\\n  'hole':'\\\\ud83d\\\\udd73',\\n  'honey_pot':'\\\\ud83c\\\\udf6f',\\n  'horse':'\\\\ud83d\\\\udc34',\\n  'horse_racing':'\\\\ud83c\\\\udfc7',\\n  'hospital':'\\\\ud83c\\\\udfe5',\\n  'hot_pepper':'\\\\ud83c\\\\udf36',\\n  'hotdog':'\\\\ud83c\\\\udf2d',\\n  'hotel':'\\\\ud83c\\\\udfe8',\\n  'hotsprings':'\\\\u2668\\\\ufe0f',\\n  'hourglass':'\\\\u231b\\\\ufe0f',\\n  'hourglass_flowing_sand':'\\\\u23f3',\\n  'house':'\\\\ud83c\\\\udfe0',\\n  'house_with_garden':'\\\\ud83c\\\\udfe1',\\n  'houses':'\\\\ud83c\\\\udfd8',\\n  'hugs':'\\\\ud83e\\\\udd17',\\n  'hushed':'\\\\ud83d\\\\ude2f',\\n  'ice_cream':'\\\\ud83c\\\\udf68',\\n  'ice_hockey':'\\\\ud83c\\\\udfd2',\\n  'ice_skate':'\\\\u26f8',\\n  'icecream':'\\\\ud83c\\\\udf66',\\n  'id':'\\\\ud83c\\\\udd94',\\n  'ideograph_advantage':'\\\\ud83c\\\\ude50',\\n  'imp':'\\\\ud83d\\\\udc7f',\\n  'inbox_tray':'\\\\ud83d\\\\udce5',\\n  'incoming_envelope':'\\\\ud83d\\\\udce8',\\n  'tipping_hand_woman':'\\\\ud83d\\\\udc81',\\n  'information_source':'\\\\u2139\\\\ufe0f',\\n  'innocent':'\\\\ud83d\\\\ude07',\\n  'interrobang':'\\\\u2049\\\\ufe0f',\\n  'iphone':'\\\\ud83d\\\\udcf1',\\n  'izakaya_lantern':'\\\\ud83c\\\\udfee',\\n  'jack_o_lantern':'\\\\ud83c\\\\udf83',\\n  'japan':'\\\\ud83d\\\\uddfe',\\n  'japanese_castle':'\\\\ud83c\\\\udfef',\\n  'japanese_goblin':'\\\\ud83d\\\\udc7a',\\n  'japanese_ogre':'\\\\ud83d\\\\udc79',\\n  'jeans':'\\\\ud83d\\\\udc56',\\n  'joy':'\\\\ud83d\\\\ude02',\\n  'joy_cat':'\\\\ud83d\\\\ude39',\\n  'joystick':'\\\\ud83d\\\\udd79',\\n  'kaaba':'\\\\ud83d\\\\udd4b',\\n  'key':'\\\\ud83d\\\\udd11',\\n  'keyboard':'\\\\u2328\\\\ufe0f',\\n  'keycap_ten':'\\\\ud83d\\\\udd1f',\\n  'kick_scooter':'\\\\ud83d\\\\udef4',\\n  'kimono':'\\\\ud83d\\\\udc58',\\n  'kiss':'\\\\ud83d\\\\udc8b',\\n  'kissing':'\\\\ud83d\\\\ude17',\\n  'kissing_cat':'\\\\ud83d\\\\ude3d',\\n  'kissing_closed_eyes':'\\\\ud83d\\\\ude1a',\\n  'kissing_heart':'\\\\ud83d\\\\ude18',\\n  'kissing_smiling_eyes':'\\\\ud83d\\\\ude19',\\n  'kiwi_fruit':'\\\\ud83e\\\\udd5d',\\n  'koala':'\\\\ud83d\\\\udc28',\\n  'koko':'\\\\ud83c\\\\ude01',\\n  'label':'\\\\ud83c\\\\udff7',\\n  'large_blue_circle':'\\\\ud83d\\\\udd35',\\n  'large_blue_diamond':'\\\\ud83d\\\\udd37',\\n  'large_orange_diamond':'\\\\ud83d\\\\udd36',\\n  'last_quarter_moon':'\\\\ud83c\\\\udf17',\\n  'last_quarter_moon_with_face':'\\\\ud83c\\\\udf1c',\\n  'latin_cross':'\\\\u271d\\\\ufe0f',\\n  'laughing':'\\\\ud83d\\\\ude06',\\n  'leaves':'\\\\ud83c\\\\udf43',\\n  'ledger':'\\\\ud83d\\\\udcd2',\\n  'left_luggage':'\\\\ud83d\\\\udec5',\\n  'left_right_arrow':'\\\\u2194\\\\ufe0f',\\n  'leftwards_arrow_with_hook':'\\\\u21a9\\\\ufe0f',\\n  'lemon':'\\\\ud83c\\\\udf4b',\\n  'leo':'\\\\u264c\\\\ufe0f',\\n  'leopard':'\\\\ud83d\\\\udc06',\\n  'level_slider':'\\\\ud83c\\\\udf9a',\\n  'libra':'\\\\u264e\\\\ufe0f',\\n  'light_rail':'\\\\ud83d\\\\ude88',\\n  'link':'\\\\ud83d\\\\udd17',\\n  'lion':'\\\\ud83e\\\\udd81',\\n  'lips':'\\\\ud83d\\\\udc44',\\n  'lipstick':'\\\\ud83d\\\\udc84',\\n  'lizard':'\\\\ud83e\\\\udd8e',\\n  'lock':'\\\\ud83d\\\\udd12',\\n  'lock_with_ink_pen':'\\\\ud83d\\\\udd0f',\\n  'lollipop':'\\\\ud83c\\\\udf6d',\\n  'loop':'\\\\u27bf',\\n  'loud_sound':'\\\\ud83d\\\\udd0a',\\n  'loudspeaker':'\\\\ud83d\\\\udce2',\\n  'love_hotel':'\\\\ud83c\\\\udfe9',\\n  'love_letter':'\\\\ud83d\\\\udc8c',\\n  'low_brightness':'\\\\ud83d\\\\udd05',\\n  'lying_face':'\\\\ud83e\\\\udd25',\\n  'm':'\\\\u24c2\\\\ufe0f',\\n  'mag':'\\\\ud83d\\\\udd0d',\\n  'mag_right':'\\\\ud83d\\\\udd0e',\\n  'mahjong':'\\\\ud83c\\\\udc04\\\\ufe0f',\\n  'mailbox':'\\\\ud83d\\\\udceb',\\n  'mailbox_closed':'\\\\ud83d\\\\udcea',\\n  'mailbox_with_mail':'\\\\ud83d\\\\udcec',\\n  'mailbox_with_no_mail':'\\\\ud83d\\\\udced',\\n  'man':'\\\\ud83d\\\\udc68',\\n  'man_artist':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udfa8',\\n  'man_astronaut':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\ude80',\\n  'man_cartwheeling':'\\\\ud83e\\\\udd38&zwj;\\\\u2642\\\\ufe0f',\\n  'man_cook':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udf73',\\n  'man_dancing':'\\\\ud83d\\\\udd7a',\\n  'man_facepalming':'\\\\ud83e\\\\udd26&zwj;\\\\u2642\\\\ufe0f',\\n  'man_factory_worker':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udfed',\\n  'man_farmer':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udf3e',\\n  'man_firefighter':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\ude92',\\n  'man_health_worker':'\\\\ud83d\\\\udc68&zwj;\\\\u2695\\\\ufe0f',\\n  'man_in_tuxedo':'\\\\ud83e\\\\udd35',\\n  'man_judge':'\\\\ud83d\\\\udc68&zwj;\\\\u2696\\\\ufe0f',\\n  'man_juggling':'\\\\ud83e\\\\udd39&zwj;\\\\u2642\\\\ufe0f',\\n  'man_mechanic':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udd27',\\n  'man_office_worker':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udcbc',\\n  'man_pilot':'\\\\ud83d\\\\udc68&zwj;\\\\u2708\\\\ufe0f',\\n  'man_playing_handball':'\\\\ud83e\\\\udd3e&zwj;\\\\u2642\\\\ufe0f',\\n  'man_playing_water_polo':'\\\\ud83e\\\\udd3d&zwj;\\\\u2642\\\\ufe0f',\\n  'man_scientist':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udd2c',\\n  'man_shrugging':'\\\\ud83e\\\\udd37&zwj;\\\\u2642\\\\ufe0f',\\n  'man_singer':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udfa4',\\n  'man_student':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udf93',\\n  'man_teacher':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udfeb',\\n  'man_technologist':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udcbb',\\n  'man_with_gua_pi_mao':'\\\\ud83d\\\\udc72',\\n  'man_with_turban':'\\\\ud83d\\\\udc73',\\n  'tangerine':'\\\\ud83c\\\\udf4a',\\n  'mans_shoe':'\\\\ud83d\\\\udc5e',\\n  'mantelpiece_clock':'\\\\ud83d\\\\udd70',\\n  'maple_leaf':'\\\\ud83c\\\\udf41',\\n  'martial_arts_uniform':'\\\\ud83e\\\\udd4b',\\n  'mask':'\\\\ud83d\\\\ude37',\\n  'massage_woman':'\\\\ud83d\\\\udc86',\\n  'massage_man':'\\\\ud83d\\\\udc86&zwj;\\\\u2642\\\\ufe0f',\\n  'meat_on_bone':'\\\\ud83c\\\\udf56',\\n  'medal_military':'\\\\ud83c\\\\udf96',\\n  'medal_sports':'\\\\ud83c\\\\udfc5',\\n  'mega':'\\\\ud83d\\\\udce3',\\n  'melon':'\\\\ud83c\\\\udf48',\\n  'memo':'\\\\ud83d\\\\udcdd',\\n  'men_wrestling':'\\\\ud83e\\\\udd3c&zwj;\\\\u2642\\\\ufe0f',\\n  'menorah':'\\\\ud83d\\\\udd4e',\\n  'mens':'\\\\ud83d\\\\udeb9',\\n  'metal':'\\\\ud83e\\\\udd18',\\n  'metro':'\\\\ud83d\\\\ude87',\\n  'microphone':'\\\\ud83c\\\\udfa4',\\n  'microscope':'\\\\ud83d\\\\udd2c',\\n  'milk_glass':'\\\\ud83e\\\\udd5b',\\n  'milky_way':'\\\\ud83c\\\\udf0c',\\n  'minibus':'\\\\ud83d\\\\ude90',\\n  'minidisc':'\\\\ud83d\\\\udcbd',\\n  'mobile_phone_off':'\\\\ud83d\\\\udcf4',\\n  'money_mouth_face':'\\\\ud83e\\\\udd11',\\n  'money_with_wings':'\\\\ud83d\\\\udcb8',\\n  'moneybag':'\\\\ud83d\\\\udcb0',\\n  'monkey':'\\\\ud83d\\\\udc12',\\n  'monkey_face':'\\\\ud83d\\\\udc35',\\n  'monorail':'\\\\ud83d\\\\ude9d',\\n  'moon':'\\\\ud83c\\\\udf14',\\n  'mortar_board':'\\\\ud83c\\\\udf93',\\n  'mosque':'\\\\ud83d\\\\udd4c',\\n  'motor_boat':'\\\\ud83d\\\\udee5',\\n  'motor_scooter':'\\\\ud83d\\\\udef5',\\n  'motorcycle':'\\\\ud83c\\\\udfcd',\\n  'motorway':'\\\\ud83d\\\\udee3',\\n  'mount_fuji':'\\\\ud83d\\\\uddfb',\\n  'mountain':'\\\\u26f0',\\n  'mountain_biking_man':'\\\\ud83d\\\\udeb5',\\n  'mountain_biking_woman':'\\\\ud83d\\\\udeb5&zwj;\\\\u2640\\\\ufe0f',\\n  'mountain_cableway':'\\\\ud83d\\\\udea0',\\n  'mountain_railway':'\\\\ud83d\\\\ude9e',\\n  'mountain_snow':'\\\\ud83c\\\\udfd4',\\n  'mouse':'\\\\ud83d\\\\udc2d',\\n  'mouse2':'\\\\ud83d\\\\udc01',\\n  'movie_camera':'\\\\ud83c\\\\udfa5',\\n  'moyai':'\\\\ud83d\\\\uddff',\\n  'mrs_claus':'\\\\ud83e\\\\udd36',\\n  'muscle':'\\\\ud83d\\\\udcaa',\\n  'mushroom':'\\\\ud83c\\\\udf44',\\n  'musical_keyboard':'\\\\ud83c\\\\udfb9',\\n  'musical_note':'\\\\ud83c\\\\udfb5',\\n  'musical_score':'\\\\ud83c\\\\udfbc',\\n  'mute':'\\\\ud83d\\\\udd07',\\n  'nail_care':'\\\\ud83d\\\\udc85',\\n  'name_badge':'\\\\ud83d\\\\udcdb',\\n  'national_park':'\\\\ud83c\\\\udfde',\\n  'nauseated_face':'\\\\ud83e\\\\udd22',\\n  'necktie':'\\\\ud83d\\\\udc54',\\n  'negative_squared_cross_mark':'\\\\u274e',\\n  'nerd_face':'\\\\ud83e\\\\udd13',\\n  'neutral_face':'\\\\ud83d\\\\ude10',\\n  'new':'\\\\ud83c\\\\udd95',\\n  'new_moon':'\\\\ud83c\\\\udf11',\\n  'new_moon_with_face':'\\\\ud83c\\\\udf1a',\\n  'newspaper':'\\\\ud83d\\\\udcf0',\\n  'newspaper_roll':'\\\\ud83d\\\\uddde',\\n  'next_track_button':'\\\\u23ed',\\n  'ng':'\\\\ud83c\\\\udd96',\\n  'no_good_man':'\\\\ud83d\\\\ude45&zwj;\\\\u2642\\\\ufe0f',\\n  'no_good_woman':'\\\\ud83d\\\\ude45',\\n  'night_with_stars':'\\\\ud83c\\\\udf03',\\n  'no_bell':'\\\\ud83d\\\\udd15',\\n  'no_bicycles':'\\\\ud83d\\\\udeb3',\\n  'no_entry':'\\\\u26d4\\\\ufe0f',\\n  'no_entry_sign':'\\\\ud83d\\\\udeab',\\n  'no_mobile_phones':'\\\\ud83d\\\\udcf5',\\n  'no_mouth':'\\\\ud83d\\\\ude36',\\n  'no_pedestrians':'\\\\ud83d\\\\udeb7',\\n  'no_smoking':'\\\\ud83d\\\\udead',\\n  'non-potable_water':'\\\\ud83d\\\\udeb1',\\n  'nose':'\\\\ud83d\\\\udc43',\\n  'notebook':'\\\\ud83d\\\\udcd3',\\n  'notebook_with_decorative_cover':'\\\\ud83d\\\\udcd4',\\n  'notes':'\\\\ud83c\\\\udfb6',\\n  'nut_and_bolt':'\\\\ud83d\\\\udd29',\\n  'o':'\\\\u2b55\\\\ufe0f',\\n  'o2':'\\\\ud83c\\\\udd7e\\\\ufe0f',\\n  'ocean':'\\\\ud83c\\\\udf0a',\\n  'octopus':'\\\\ud83d\\\\udc19',\\n  'oden':'\\\\ud83c\\\\udf62',\\n  'office':'\\\\ud83c\\\\udfe2',\\n  'oil_drum':'\\\\ud83d\\\\udee2',\\n  'ok':'\\\\ud83c\\\\udd97',\\n  'ok_hand':'\\\\ud83d\\\\udc4c',\\n  'ok_man':'\\\\ud83d\\\\ude46&zwj;\\\\u2642\\\\ufe0f',\\n  'ok_woman':'\\\\ud83d\\\\ude46',\\n  'old_key':'\\\\ud83d\\\\udddd',\\n  'older_man':'\\\\ud83d\\\\udc74',\\n  'older_woman':'\\\\ud83d\\\\udc75',\\n  'om':'\\\\ud83d\\\\udd49',\\n  'on':'\\\\ud83d\\\\udd1b',\\n  'oncoming_automobile':'\\\\ud83d\\\\ude98',\\n  'oncoming_bus':'\\\\ud83d\\\\ude8d',\\n  'oncoming_police_car':'\\\\ud83d\\\\ude94',\\n  'oncoming_taxi':'\\\\ud83d\\\\ude96',\\n  'open_file_folder':'\\\\ud83d\\\\udcc2',\\n  'open_hands':'\\\\ud83d\\\\udc50',\\n  'open_mouth':'\\\\ud83d\\\\ude2e',\\n  'open_umbrella':'\\\\u2602\\\\ufe0f',\\n  'ophiuchus':'\\\\u26ce',\\n  'orange_book':'\\\\ud83d\\\\udcd9',\\n  'orthodox_cross':'\\\\u2626\\\\ufe0f',\\n  'outbox_tray':'\\\\ud83d\\\\udce4',\\n  'owl':'\\\\ud83e\\\\udd89',\\n  'ox':'\\\\ud83d\\\\udc02',\\n  'package':'\\\\ud83d\\\\udce6',\\n  'page_facing_up':'\\\\ud83d\\\\udcc4',\\n  'page_with_curl':'\\\\ud83d\\\\udcc3',\\n  'pager':'\\\\ud83d\\\\udcdf',\\n  'paintbrush':'\\\\ud83d\\\\udd8c',\\n  'palm_tree':'\\\\ud83c\\\\udf34',\\n  'pancakes':'\\\\ud83e\\\\udd5e',\\n  'panda_face':'\\\\ud83d\\\\udc3c',\\n  'paperclip':'\\\\ud83d\\\\udcce',\\n  'paperclips':'\\\\ud83d\\\\udd87',\\n  'parasol_on_ground':'\\\\u26f1',\\n  'parking':'\\\\ud83c\\\\udd7f\\\\ufe0f',\\n  'part_alternation_mark':'\\\\u303d\\\\ufe0f',\\n  'partly_sunny':'\\\\u26c5\\\\ufe0f',\\n  'passenger_ship':'\\\\ud83d\\\\udef3',\\n  'passport_control':'\\\\ud83d\\\\udec2',\\n  'pause_button':'\\\\u23f8',\\n  'peace_symbol':'\\\\u262e\\\\ufe0f',\\n  'peach':'\\\\ud83c\\\\udf51',\\n  'peanuts':'\\\\ud83e\\\\udd5c',\\n  'pear':'\\\\ud83c\\\\udf50',\\n  'pen':'\\\\ud83d\\\\udd8a',\\n  'pencil2':'\\\\u270f\\\\ufe0f',\\n  'penguin':'\\\\ud83d\\\\udc27',\\n  'pensive':'\\\\ud83d\\\\ude14',\\n  'performing_arts':'\\\\ud83c\\\\udfad',\\n  'persevere':'\\\\ud83d\\\\ude23',\\n  'person_fencing':'\\\\ud83e\\\\udd3a',\\n  'pouting_woman':'\\\\ud83d\\\\ude4e',\\n  'phone':'\\\\u260e\\\\ufe0f',\\n  'pick':'\\\\u26cf',\\n  'pig':'\\\\ud83d\\\\udc37',\\n  'pig2':'\\\\ud83d\\\\udc16',\\n  'pig_nose':'\\\\ud83d\\\\udc3d',\\n  'pill':'\\\\ud83d\\\\udc8a',\\n  'pineapple':'\\\\ud83c\\\\udf4d',\\n  'ping_pong':'\\\\ud83c\\\\udfd3',\\n  'pisces':'\\\\u2653\\\\ufe0f',\\n  'pizza':'\\\\ud83c\\\\udf55',\\n  'place_of_worship':'\\\\ud83d\\\\uded0',\\n  'plate_with_cutlery':'\\\\ud83c\\\\udf7d',\\n  'play_or_pause_button':'\\\\u23ef',\\n  'point_down':'\\\\ud83d\\\\udc47',\\n  'point_left':'\\\\ud83d\\\\udc48',\\n  'point_right':'\\\\ud83d\\\\udc49',\\n  'point_up':'\\\\u261d\\\\ufe0f',\\n  'point_up_2':'\\\\ud83d\\\\udc46',\\n  'police_car':'\\\\ud83d\\\\ude93',\\n  'policewoman':'\\\\ud83d\\\\udc6e&zwj;\\\\u2640\\\\ufe0f',\\n  'poodle':'\\\\ud83d\\\\udc29',\\n  'popcorn':'\\\\ud83c\\\\udf7f',\\n  'post_office':'\\\\ud83c\\\\udfe3',\\n  'postal_horn':'\\\\ud83d\\\\udcef',\\n  'postbox':'\\\\ud83d\\\\udcee',\\n  'potable_water':'\\\\ud83d\\\\udeb0',\\n  'potato':'\\\\ud83e\\\\udd54',\\n  'pouch':'\\\\ud83d\\\\udc5d',\\n  'poultry_leg':'\\\\ud83c\\\\udf57',\\n  'pound':'\\\\ud83d\\\\udcb7',\\n  'rage':'\\\\ud83d\\\\ude21',\\n  'pouting_cat':'\\\\ud83d\\\\ude3e',\\n  'pouting_man':'\\\\ud83d\\\\ude4e&zwj;\\\\u2642\\\\ufe0f',\\n  'pray':'\\\\ud83d\\\\ude4f',\\n  'prayer_beads':'\\\\ud83d\\\\udcff',\\n  'pregnant_woman':'\\\\ud83e\\\\udd30',\\n  'previous_track_button':'\\\\u23ee',\\n  'prince':'\\\\ud83e\\\\udd34',\\n  'princess':'\\\\ud83d\\\\udc78',\\n  'printer':'\\\\ud83d\\\\udda8',\\n  'purple_heart':'\\\\ud83d\\\\udc9c',\\n  'purse':'\\\\ud83d\\\\udc5b',\\n  'pushpin':'\\\\ud83d\\\\udccc',\\n  'put_litter_in_its_place':'\\\\ud83d\\\\udeae',\\n  'question':'\\\\u2753',\\n  'rabbit':'\\\\ud83d\\\\udc30',\\n  'rabbit2':'\\\\ud83d\\\\udc07',\\n  'racehorse':'\\\\ud83d\\\\udc0e',\\n  'racing_car':'\\\\ud83c\\\\udfce',\\n  'radio':'\\\\ud83d\\\\udcfb',\\n  'radio_button':'\\\\ud83d\\\\udd18',\\n  'radioactive':'\\\\u2622\\\\ufe0f',\\n  'railway_car':'\\\\ud83d\\\\ude83',\\n  'railway_track':'\\\\ud83d\\\\udee4',\\n  'rainbow':'\\\\ud83c\\\\udf08',\\n  'rainbow_flag':'\\\\ud83c\\\\udff3\\\\ufe0f&zwj;\\\\ud83c\\\\udf08',\\n  'raised_back_of_hand':'\\\\ud83e\\\\udd1a',\\n  'raised_hand_with_fingers_splayed':'\\\\ud83d\\\\udd90',\\n  'raised_hands':'\\\\ud83d\\\\ude4c',\\n  'raising_hand_woman':'\\\\ud83d\\\\ude4b',\\n  'raising_hand_man':'\\\\ud83d\\\\ude4b&zwj;\\\\u2642\\\\ufe0f',\\n  'ram':'\\\\ud83d\\\\udc0f',\\n  'ramen':'\\\\ud83c\\\\udf5c',\\n  'rat':'\\\\ud83d\\\\udc00',\\n  'record_button':'\\\\u23fa',\\n  'recycle':'\\\\u267b\\\\ufe0f',\\n  'red_circle':'\\\\ud83d\\\\udd34',\\n  'registered':'\\\\u00ae\\\\ufe0f',\\n  'relaxed':'\\\\u263a\\\\ufe0f',\\n  'relieved':'\\\\ud83d\\\\ude0c',\\n  'reminder_ribbon':'\\\\ud83c\\\\udf97',\\n  'repeat':'\\\\ud83d\\\\udd01',\\n  'repeat_one':'\\\\ud83d\\\\udd02',\\n  'rescue_worker_helmet':'\\\\u26d1',\\n  'restroom':'\\\\ud83d\\\\udebb',\\n  'revolving_hearts':'\\\\ud83d\\\\udc9e',\\n  'rewind':'\\\\u23ea',\\n  'rhinoceros':'\\\\ud83e\\\\udd8f',\\n  'ribbon':'\\\\ud83c\\\\udf80',\\n  'rice':'\\\\ud83c\\\\udf5a',\\n  'rice_ball':'\\\\ud83c\\\\udf59',\\n  'rice_cracker':'\\\\ud83c\\\\udf58',\\n  'rice_scene':'\\\\ud83c\\\\udf91',\\n  'right_anger_bubble':'\\\\ud83d\\\\uddef',\\n  'ring':'\\\\ud83d\\\\udc8d',\\n  'robot':'\\\\ud83e\\\\udd16',\\n  'rocket':'\\\\ud83d\\\\ude80',\\n  'rofl':'\\\\ud83e\\\\udd23',\\n  'roll_eyes':'\\\\ud83d\\\\ude44',\\n  'roller_coaster':'\\\\ud83c\\\\udfa2',\\n  'rooster':'\\\\ud83d\\\\udc13',\\n  'rose':'\\\\ud83c\\\\udf39',\\n  'rosette':'\\\\ud83c\\\\udff5',\\n  'rotating_light':'\\\\ud83d\\\\udea8',\\n  'round_pushpin':'\\\\ud83d\\\\udccd',\\n  'rowing_man':'\\\\ud83d\\\\udea3',\\n  'rowing_woman':'\\\\ud83d\\\\udea3&zwj;\\\\u2640\\\\ufe0f',\\n  'rugby_football':'\\\\ud83c\\\\udfc9',\\n  'running_man':'\\\\ud83c\\\\udfc3',\\n  'running_shirt_with_sash':'\\\\ud83c\\\\udfbd',\\n  'running_woman':'\\\\ud83c\\\\udfc3&zwj;\\\\u2640\\\\ufe0f',\\n  'sa':'\\\\ud83c\\\\ude02\\\\ufe0f',\\n  'sagittarius':'\\\\u2650\\\\ufe0f',\\n  'sake':'\\\\ud83c\\\\udf76',\\n  'sandal':'\\\\ud83d\\\\udc61',\\n  'santa':'\\\\ud83c\\\\udf85',\\n  'satellite':'\\\\ud83d\\\\udce1',\\n  'saxophone':'\\\\ud83c\\\\udfb7',\\n  'school':'\\\\ud83c\\\\udfeb',\\n  'school_satchel':'\\\\ud83c\\\\udf92',\\n  'scissors':'\\\\u2702\\\\ufe0f',\\n  'scorpion':'\\\\ud83e\\\\udd82',\\n  'scorpius':'\\\\u264f\\\\ufe0f',\\n  'scream':'\\\\ud83d\\\\ude31',\\n  'scream_cat':'\\\\ud83d\\\\ude40',\\n  'scroll':'\\\\ud83d\\\\udcdc',\\n  'seat':'\\\\ud83d\\\\udcba',\\n  'secret':'\\\\u3299\\\\ufe0f',\\n  'see_no_evil':'\\\\ud83d\\\\ude48',\\n  'seedling':'\\\\ud83c\\\\udf31',\\n  'selfie':'\\\\ud83e\\\\udd33',\\n  'shallow_pan_of_food':'\\\\ud83e\\\\udd58',\\n  'shamrock':'\\\\u2618\\\\ufe0f',\\n  'shark':'\\\\ud83e\\\\udd88',\\n  'shaved_ice':'\\\\ud83c\\\\udf67',\\n  'sheep':'\\\\ud83d\\\\udc11',\\n  'shell':'\\\\ud83d\\\\udc1a',\\n  'shield':'\\\\ud83d\\\\udee1',\\n  'shinto_shrine':'\\\\u26e9',\\n  'ship':'\\\\ud83d\\\\udea2',\\n  'shirt':'\\\\ud83d\\\\udc55',\\n  'shopping':'\\\\ud83d\\\\udecd',\\n  'shopping_cart':'\\\\ud83d\\\\uded2',\\n  'shower':'\\\\ud83d\\\\udebf',\\n  'shrimp':'\\\\ud83e\\\\udd90',\\n  'signal_strength':'\\\\ud83d\\\\udcf6',\\n  'six_pointed_star':'\\\\ud83d\\\\udd2f',\\n  'ski':'\\\\ud83c\\\\udfbf',\\n  'skier':'\\\\u26f7',\\n  'skull':'\\\\ud83d\\\\udc80',\\n  'skull_and_crossbones':'\\\\u2620\\\\ufe0f',\\n  'sleeping':'\\\\ud83d\\\\ude34',\\n  'sleeping_bed':'\\\\ud83d\\\\udecc',\\n  'sleepy':'\\\\ud83d\\\\ude2a',\\n  'slightly_frowning_face':'\\\\ud83d\\\\ude41',\\n  'slightly_smiling_face':'\\\\ud83d\\\\ude42',\\n  'slot_machine':'\\\\ud83c\\\\udfb0',\\n  'small_airplane':'\\\\ud83d\\\\udee9',\\n  'small_blue_diamond':'\\\\ud83d\\\\udd39',\\n  'small_orange_diamond':'\\\\ud83d\\\\udd38',\\n  'small_red_triangle':'\\\\ud83d\\\\udd3a',\\n  'small_red_triangle_down':'\\\\ud83d\\\\udd3b',\\n  'smile':'\\\\ud83d\\\\ude04',\\n  'smile_cat':'\\\\ud83d\\\\ude38',\\n  'smiley':'\\\\ud83d\\\\ude03',\\n  'smiley_cat':'\\\\ud83d\\\\ude3a',\\n  'smiling_imp':'\\\\ud83d\\\\ude08',\\n  'smirk':'\\\\ud83d\\\\ude0f',\\n  'smirk_cat':'\\\\ud83d\\\\ude3c',\\n  'smoking':'\\\\ud83d\\\\udeac',\\n  'snail':'\\\\ud83d\\\\udc0c',\\n  'snake':'\\\\ud83d\\\\udc0d',\\n  'sneezing_face':'\\\\ud83e\\\\udd27',\\n  'snowboarder':'\\\\ud83c\\\\udfc2',\\n  'snowflake':'\\\\u2744\\\\ufe0f',\\n  'snowman':'\\\\u26c4\\\\ufe0f',\\n  'snowman_with_snow':'\\\\u2603\\\\ufe0f',\\n  'sob':'\\\\ud83d\\\\ude2d',\\n  'soccer':'\\\\u26bd\\\\ufe0f',\\n  'soon':'\\\\ud83d\\\\udd1c',\\n  'sos':'\\\\ud83c\\\\udd98',\\n  'sound':'\\\\ud83d\\\\udd09',\\n  'space_invader':'\\\\ud83d\\\\udc7e',\\n  'spades':'\\\\u2660\\\\ufe0f',\\n  'spaghetti':'\\\\ud83c\\\\udf5d',\\n  'sparkle':'\\\\u2747\\\\ufe0f',\\n  'sparkler':'\\\\ud83c\\\\udf87',\\n  'sparkles':'\\\\u2728',\\n  'sparkling_heart':'\\\\ud83d\\\\udc96',\\n  'speak_no_evil':'\\\\ud83d\\\\ude4a',\\n  'speaker':'\\\\ud83d\\\\udd08',\\n  'speaking_head':'\\\\ud83d\\\\udde3',\\n  'speech_balloon':'\\\\ud83d\\\\udcac',\\n  'speedboat':'\\\\ud83d\\\\udea4',\\n  'spider':'\\\\ud83d\\\\udd77',\\n  'spider_web':'\\\\ud83d\\\\udd78',\\n  'spiral_calendar':'\\\\ud83d\\\\uddd3',\\n  'spiral_notepad':'\\\\ud83d\\\\uddd2',\\n  'spoon':'\\\\ud83e\\\\udd44',\\n  'squid':'\\\\ud83e\\\\udd91',\\n  'stadium':'\\\\ud83c\\\\udfdf',\\n  'star':'\\\\u2b50\\\\ufe0f',\\n  'star2':'\\\\ud83c\\\\udf1f',\\n  'star_and_crescent':'\\\\u262a\\\\ufe0f',\\n  'star_of_david':'\\\\u2721\\\\ufe0f',\\n  'stars':'\\\\ud83c\\\\udf20',\\n  'station':'\\\\ud83d\\\\ude89',\\n  'statue_of_liberty':'\\\\ud83d\\\\uddfd',\\n  'steam_locomotive':'\\\\ud83d\\\\ude82',\\n  'stew':'\\\\ud83c\\\\udf72',\\n  'stop_button':'\\\\u23f9',\\n  'stop_sign':'\\\\ud83d\\\\uded1',\\n  'stopwatch':'\\\\u23f1',\\n  'straight_ruler':'\\\\ud83d\\\\udccf',\\n  'strawberry':'\\\\ud83c\\\\udf53',\\n  'stuck_out_tongue':'\\\\ud83d\\\\ude1b',\\n  'stuck_out_tongue_closed_eyes':'\\\\ud83d\\\\ude1d',\\n  'stuck_out_tongue_winking_eye':'\\\\ud83d\\\\ude1c',\\n  'studio_microphone':'\\\\ud83c\\\\udf99',\\n  'stuffed_flatbread':'\\\\ud83e\\\\udd59',\\n  'sun_behind_large_cloud':'\\\\ud83c\\\\udf25',\\n  'sun_behind_rain_cloud':'\\\\ud83c\\\\udf26',\\n  'sun_behind_small_cloud':'\\\\ud83c\\\\udf24',\\n  'sun_with_face':'\\\\ud83c\\\\udf1e',\\n  'sunflower':'\\\\ud83c\\\\udf3b',\\n  'sunglasses':'\\\\ud83d\\\\ude0e',\\n  'sunny':'\\\\u2600\\\\ufe0f',\\n  'sunrise':'\\\\ud83c\\\\udf05',\\n  'sunrise_over_mountains':'\\\\ud83c\\\\udf04',\\n  'surfing_man':'\\\\ud83c\\\\udfc4',\\n  'surfing_woman':'\\\\ud83c\\\\udfc4&zwj;\\\\u2640\\\\ufe0f',\\n  'sushi':'\\\\ud83c\\\\udf63',\\n  'suspension_railway':'\\\\ud83d\\\\ude9f',\\n  'sweat':'\\\\ud83d\\\\ude13',\\n  'sweat_drops':'\\\\ud83d\\\\udca6',\\n  'sweat_smile':'\\\\ud83d\\\\ude05',\\n  'sweet_potato':'\\\\ud83c\\\\udf60',\\n  'swimming_man':'\\\\ud83c\\\\udfca',\\n  'swimming_woman':'\\\\ud83c\\\\udfca&zwj;\\\\u2640\\\\ufe0f',\\n  'symbols':'\\\\ud83d\\\\udd23',\\n  'synagogue':'\\\\ud83d\\\\udd4d',\\n  'syringe':'\\\\ud83d\\\\udc89',\\n  'taco':'\\\\ud83c\\\\udf2e',\\n  'tada':'\\\\ud83c\\\\udf89',\\n  'tanabata_tree':'\\\\ud83c\\\\udf8b',\\n  'taurus':'\\\\u2649\\\\ufe0f',\\n  'taxi':'\\\\ud83d\\\\ude95',\\n  'tea':'\\\\ud83c\\\\udf75',\\n  'telephone_receiver':'\\\\ud83d\\\\udcde',\\n  'telescope':'\\\\ud83d\\\\udd2d',\\n  'tennis':'\\\\ud83c\\\\udfbe',\\n  'tent':'\\\\u26fa\\\\ufe0f',\\n  'thermometer':'\\\\ud83c\\\\udf21',\\n  'thinking':'\\\\ud83e\\\\udd14',\\n  'thought_balloon':'\\\\ud83d\\\\udcad',\\n  'ticket':'\\\\ud83c\\\\udfab',\\n  'tickets':'\\\\ud83c\\\\udf9f',\\n  'tiger':'\\\\ud83d\\\\udc2f',\\n  'tiger2':'\\\\ud83d\\\\udc05',\\n  'timer_clock':'\\\\u23f2',\\n  'tipping_hand_man':'\\\\ud83d\\\\udc81&zwj;\\\\u2642\\\\ufe0f',\\n  'tired_face':'\\\\ud83d\\\\ude2b',\\n  'tm':'\\\\u2122\\\\ufe0f',\\n  'toilet':'\\\\ud83d\\\\udebd',\\n  'tokyo_tower':'\\\\ud83d\\\\uddfc',\\n  'tomato':'\\\\ud83c\\\\udf45',\\n  'tongue':'\\\\ud83d\\\\udc45',\\n  'top':'\\\\ud83d\\\\udd1d',\\n  'tophat':'\\\\ud83c\\\\udfa9',\\n  'tornado':'\\\\ud83c\\\\udf2a',\\n  'trackball':'\\\\ud83d\\\\uddb2',\\n  'tractor':'\\\\ud83d\\\\ude9c',\\n  'traffic_light':'\\\\ud83d\\\\udea5',\\n  'train':'\\\\ud83d\\\\ude8b',\\n  'train2':'\\\\ud83d\\\\ude86',\\n  'tram':'\\\\ud83d\\\\ude8a',\\n  'triangular_flag_on_post':'\\\\ud83d\\\\udea9',\\n  'triangular_ruler':'\\\\ud83d\\\\udcd0',\\n  'trident':'\\\\ud83d\\\\udd31',\\n  'triumph':'\\\\ud83d\\\\ude24',\\n  'trolleybus':'\\\\ud83d\\\\ude8e',\\n  'trophy':'\\\\ud83c\\\\udfc6',\\n  'tropical_drink':'\\\\ud83c\\\\udf79',\\n  'tropical_fish':'\\\\ud83d\\\\udc20',\\n  'truck':'\\\\ud83d\\\\ude9a',\\n  'trumpet':'\\\\ud83c\\\\udfba',\\n  'tulip':'\\\\ud83c\\\\udf37',\\n  'tumbler_glass':'\\\\ud83e\\\\udd43',\\n  'turkey':'\\\\ud83e\\\\udd83',\\n  'turtle':'\\\\ud83d\\\\udc22',\\n  'tv':'\\\\ud83d\\\\udcfa',\\n  'twisted_rightwards_arrows':'\\\\ud83d\\\\udd00',\\n  'two_hearts':'\\\\ud83d\\\\udc95',\\n  'two_men_holding_hands':'\\\\ud83d\\\\udc6c',\\n  'two_women_holding_hands':'\\\\ud83d\\\\udc6d',\\n  'u5272':'\\\\ud83c\\\\ude39',\\n  'u5408':'\\\\ud83c\\\\ude34',\\n  'u55b6':'\\\\ud83c\\\\ude3a',\\n  'u6307':'\\\\ud83c\\\\ude2f\\\\ufe0f',\\n  'u6708':'\\\\ud83c\\\\ude37\\\\ufe0f',\\n  'u6709':'\\\\ud83c\\\\ude36',\\n  'u6e80':'\\\\ud83c\\\\ude35',\\n  'u7121':'\\\\ud83c\\\\ude1a\\\\ufe0f',\\n  'u7533':'\\\\ud83c\\\\ude38',\\n  'u7981':'\\\\ud83c\\\\ude32',\\n  'u7a7a':'\\\\ud83c\\\\ude33',\\n  'umbrella':'\\\\u2614\\\\ufe0f',\\n  'unamused':'\\\\ud83d\\\\ude12',\\n  'underage':'\\\\ud83d\\\\udd1e',\\n  'unicorn':'\\\\ud83e\\\\udd84',\\n  'unlock':'\\\\ud83d\\\\udd13',\\n  'up':'\\\\ud83c\\\\udd99',\\n  'upside_down_face':'\\\\ud83d\\\\ude43',\\n  'v':'\\\\u270c\\\\ufe0f',\\n  'vertical_traffic_light':'\\\\ud83d\\\\udea6',\\n  'vhs':'\\\\ud83d\\\\udcfc',\\n  'vibration_mode':'\\\\ud83d\\\\udcf3',\\n  'video_camera':'\\\\ud83d\\\\udcf9',\\n  'video_game':'\\\\ud83c\\\\udfae',\\n  'violin':'\\\\ud83c\\\\udfbb',\\n  'virgo':'\\\\u264d\\\\ufe0f',\\n  'volcano':'\\\\ud83c\\\\udf0b',\\n  'volleyball':'\\\\ud83c\\\\udfd0',\\n  'vs':'\\\\ud83c\\\\udd9a',\\n  'vulcan_salute':'\\\\ud83d\\\\udd96',\\n  'walking_man':'\\\\ud83d\\\\udeb6',\\n  'walking_woman':'\\\\ud83d\\\\udeb6&zwj;\\\\u2640\\\\ufe0f',\\n  'waning_crescent_moon':'\\\\ud83c\\\\udf18',\\n  'waning_gibbous_moon':'\\\\ud83c\\\\udf16',\\n  'warning':'\\\\u26a0\\\\ufe0f',\\n  'wastebasket':'\\\\ud83d\\\\uddd1',\\n  'watch':'\\\\u231a\\\\ufe0f',\\n  'water_buffalo':'\\\\ud83d\\\\udc03',\\n  'watermelon':'\\\\ud83c\\\\udf49',\\n  'wave':'\\\\ud83d\\\\udc4b',\\n  'wavy_dash':'\\\\u3030\\\\ufe0f',\\n  'waxing_crescent_moon':'\\\\ud83c\\\\udf12',\\n  'wc':'\\\\ud83d\\\\udebe',\\n  'weary':'\\\\ud83d\\\\ude29',\\n  'wedding':'\\\\ud83d\\\\udc92',\\n  'weight_lifting_man':'\\\\ud83c\\\\udfcb\\\\ufe0f',\\n  'weight_lifting_woman':'\\\\ud83c\\\\udfcb\\\\ufe0f&zwj;\\\\u2640\\\\ufe0f',\\n  'whale':'\\\\ud83d\\\\udc33',\\n  'whale2':'\\\\ud83d\\\\udc0b',\\n  'wheel_of_dharma':'\\\\u2638\\\\ufe0f',\\n  'wheelchair':'\\\\u267f\\\\ufe0f',\\n  'white_check_mark':'\\\\u2705',\\n  'white_circle':'\\\\u26aa\\\\ufe0f',\\n  'white_flag':'\\\\ud83c\\\\udff3\\\\ufe0f',\\n  'white_flower':'\\\\ud83d\\\\udcae',\\n  'white_large_square':'\\\\u2b1c\\\\ufe0f',\\n  'white_medium_small_square':'\\\\u25fd\\\\ufe0f',\\n  'white_medium_square':'\\\\u25fb\\\\ufe0f',\\n  'white_small_square':'\\\\u25ab\\\\ufe0f',\\n  'white_square_button':'\\\\ud83d\\\\udd33',\\n  'wilted_flower':'\\\\ud83e\\\\udd40',\\n  'wind_chime':'\\\\ud83c\\\\udf90',\\n  'wind_face':'\\\\ud83c\\\\udf2c',\\n  'wine_glass':'\\\\ud83c\\\\udf77',\\n  'wink':'\\\\ud83d\\\\ude09',\\n  'wolf':'\\\\ud83d\\\\udc3a',\\n  'woman':'\\\\ud83d\\\\udc69',\\n  'woman_artist':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udfa8',\\n  'woman_astronaut':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\ude80',\\n  'woman_cartwheeling':'\\\\ud83e\\\\udd38&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_cook':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udf73',\\n  'woman_facepalming':'\\\\ud83e\\\\udd26&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_factory_worker':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udfed',\\n  'woman_farmer':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udf3e',\\n  'woman_firefighter':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\ude92',\\n  'woman_health_worker':'\\\\ud83d\\\\udc69&zwj;\\\\u2695\\\\ufe0f',\\n  'woman_judge':'\\\\ud83d\\\\udc69&zwj;\\\\u2696\\\\ufe0f',\\n  'woman_juggling':'\\\\ud83e\\\\udd39&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_mechanic':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udd27',\\n  'woman_office_worker':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udcbc',\\n  'woman_pilot':'\\\\ud83d\\\\udc69&zwj;\\\\u2708\\\\ufe0f',\\n  'woman_playing_handball':'\\\\ud83e\\\\udd3e&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_playing_water_polo':'\\\\ud83e\\\\udd3d&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_scientist':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udd2c',\\n  'woman_shrugging':'\\\\ud83e\\\\udd37&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_singer':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udfa4',\\n  'woman_student':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udf93',\\n  'woman_teacher':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udfeb',\\n  'woman_technologist':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udcbb',\\n  'woman_with_turban':'\\\\ud83d\\\\udc73&zwj;\\\\u2640\\\\ufe0f',\\n  'womans_clothes':'\\\\ud83d\\\\udc5a',\\n  'womans_hat':'\\\\ud83d\\\\udc52',\\n  'women_wrestling':'\\\\ud83e\\\\udd3c&zwj;\\\\u2640\\\\ufe0f',\\n  'womens':'\\\\ud83d\\\\udeba',\\n  'world_map':'\\\\ud83d\\\\uddfa',\\n  'worried':'\\\\ud83d\\\\ude1f',\\n  'wrench':'\\\\ud83d\\\\udd27',\\n  'writing_hand':'\\\\u270d\\\\ufe0f',\\n  'x':'\\\\u274c',\\n  'yellow_heart':'\\\\ud83d\\\\udc9b',\\n  'yen':'\\\\ud83d\\\\udcb4',\\n  'yin_yang':'\\\\u262f\\\\ufe0f',\\n  'yum':'\\\\ud83d\\\\ude0b',\\n  'zap':'\\\\u26a1\\\\ufe0f',\\n  'zipper_mouth_face':'\\\\ud83e\\\\udd10',\\n  'zzz':'\\\\ud83d\\\\udca4',\\n\\n  /* special emojis :P */\\n  'octocat':  '<img alt=\\\":octocat:\\\" height=\\\"20\\\" width=\\\"20\\\" align=\\\"absmiddle\\\" src=\\\"https://assets-cdn.github.com/images/icons/emoji/octocat.png\\\">',\\n  'showdown': '<span style=\\\"font-family: \\\\'Anonymous Pro\\\\', monospace; text-decoration: underline; text-decoration-style: dashed; text-decoration-color: #3e8b8a;text-underline-position: under;\\\">S</span>'\\n};\\n\\r\\n/**\\n * Created by Estevao on 31-05-2015.\\n */\\n\\n/**\\n * Showdown Converter class\\n * @class\\n * @param {object} [converterOptions]\\n * @returns {Converter}\\n */\\nshowdown.Converter = function (converterOptions) {\\n  'use strict';\\n\\n  var\\n      /**\\n       * Options used by this converter\\n       * @private\\n       * @type {{}}\\n       */\\n      options = {},\\n\\n      /**\\n       * Language extensions used by this converter\\n       * @private\\n       * @type {Array}\\n       */\\n      langExtensions = [],\\n\\n      /**\\n       * Output modifiers extensions used by this converter\\n       * @private\\n       * @type {Array}\\n       */\\n      outputModifiers = [],\\n\\n      /**\\n       * Event listeners\\n       * @private\\n       * @type {{}}\\n       */\\n      listeners = {},\\n\\n      /**\\n       * The flavor set in this converter\\n       */\\n      setConvFlavor = setFlavor,\\n\\n      /**\\n       * Metadata of the document\\n       * @type {{parsed: {}, raw: string, format: string}}\\n       */\\n      metadata = {\\n        parsed: {},\\n        raw: '',\\n        format: ''\\n      };\\n\\n  _constructor();\\n\\n  /**\\n   * Converter constructor\\n   * @private\\n   */\\n  function _constructor () {\\n    converterOptions = converterOptions || {};\\n\\n    for (var gOpt in globalOptions) {\\n      if (globalOptions.hasOwnProperty(gOpt)) {\\n        options[gOpt] = globalOptions[gOpt];\\n      }\\n    }\\n\\n    // Merge options\\n    if (typeof converterOptions === 'object') {\\n      for (var opt in converterOptions) {\\n        if (converterOptions.hasOwnProperty(opt)) {\\n          options[opt] = converterOptions[opt];\\n        }\\n      }\\n    } else {\\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\\n      ' was passed instead.');\\n    }\\n\\n    if (options.extensions) {\\n      showdown.helper.forEach(options.extensions, _parseExtension);\\n    }\\n  }\\n\\n  /**\\n   * Parse extension\\n   * @param {*} ext\\n   * @param {string} [name='']\\n   * @private\\n   */\\n  function _parseExtension (ext, name) {\\n\\n    name = name || null;\\n    // If it's a string, the extension was previously loaded\\n    if (showdown.helper.isString(ext)) {\\n      ext = showdown.helper.stdExtName(ext);\\n      name = ext;\\n\\n      // LEGACY_SUPPORT CODE\\n      if (showdown.extensions[ext]) {\\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\\n          'Please inform the developer that the extension should be updated!');\\n        legacyExtensionLoading(showdown.extensions[ext], ext);\\n        return;\\n        // END LEGACY SUPPORT CODE\\n\\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\\n        ext = extensions[ext];\\n\\n      } else {\\n        throw Error('Extension \\\"' + ext + '\\\" could not be loaded. It was either not found or is not a valid extension.');\\n      }\\n    }\\n\\n    if (typeof ext === 'function') {\\n      ext = ext();\\n    }\\n\\n    if (!showdown.helper.isArray(ext)) {\\n      ext = [ext];\\n    }\\n\\n    var validExt = validate(ext, name);\\n    if (!validExt.valid) {\\n      throw Error(validExt.error);\\n    }\\n\\n    for (var i = 0; i < ext.length; ++i) {\\n      switch (ext[i].type) {\\n\\n        case 'lang':\\n          langExtensions.push(ext[i]);\\n          break;\\n\\n        case 'output':\\n          outputModifiers.push(ext[i]);\\n          break;\\n      }\\n      if (ext[i].hasOwnProperty('listeners')) {\\n        for (var ln in ext[i].listeners) {\\n          if (ext[i].listeners.hasOwnProperty(ln)) {\\n            listen(ln, ext[i].listeners[ln]);\\n          }\\n        }\\n      }\\n    }\\n\\n  }\\n\\n  /**\\n   * LEGACY_SUPPORT\\n   * @param {*} ext\\n   * @param {string} name\\n   */\\n  function legacyExtensionLoading (ext, name) {\\n    if (typeof ext === 'function') {\\n      ext = ext(new showdown.Converter());\\n    }\\n    if (!showdown.helper.isArray(ext)) {\\n      ext = [ext];\\n    }\\n    var valid = validate(ext, name);\\n\\n    if (!valid.valid) {\\n      throw Error(valid.error);\\n    }\\n\\n    for (var i = 0; i < ext.length; ++i) {\\n      switch (ext[i].type) {\\n        case 'lang':\\n          langExtensions.push(ext[i]);\\n          break;\\n        case 'output':\\n          outputModifiers.push(ext[i]);\\n          break;\\n        default:// should never reach here\\n          throw Error('Extension loader error: Type unrecognized!!!');\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Listen to an event\\n   * @param {string} name\\n   * @param {function} callback\\n   */\\n  function listen (name, callback) {\\n    if (!showdown.helper.isString(name)) {\\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\\n    }\\n\\n    if (typeof callback !== 'function') {\\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\\n    }\\n\\n    if (!listeners.hasOwnProperty(name)) {\\n      listeners[name] = [];\\n    }\\n    listeners[name].push(callback);\\n  }\\n\\n  function rTrimInputText (text) {\\n    var rsp = text.match(/^\\\\s*/)[0].length,\\n        rgx = new RegExp('^\\\\\\\\s{0,' + rsp + '}', 'gm');\\n    return text.replace(rgx, '');\\n  }\\n\\n  /**\\n   * Dispatch an event\\n   * @private\\n   * @param {string} evtName Event name\\n   * @param {string} text Text\\n   * @param {{}} options Converter Options\\n   * @param {{}} globals\\n   * @returns {string}\\n   */\\n  this._dispatch = function dispatch (evtName, text, options, globals) {\\n    if (listeners.hasOwnProperty(evtName)) {\\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\\n        if (nText && typeof nText !== 'undefined') {\\n          text = nText;\\n        }\\n      }\\n    }\\n    return text;\\n  };\\n\\n  /**\\n   * Listen to an event\\n   * @param {string} name\\n   * @param {function} callback\\n   * @returns {showdown.Converter}\\n   */\\n  this.listen = function (name, callback) {\\n    listen(name, callback);\\n    return this;\\n  };\\n\\n  /**\\n   * Converts a markdown string into HTML\\n   * @param {string} text\\n   * @returns {*}\\n   */\\n  this.makeHtml = function (text) {\\n    //check if text is not falsy\\n    if (!text) {\\n      return text;\\n    }\\n\\n    var globals = {\\n      gHtmlBlocks:     [],\\n      gHtmlMdBlocks:   [],\\n      gHtmlSpans:      [],\\n      gUrls:           {},\\n      gTitles:         {},\\n      gDimensions:     {},\\n      gListLevel:      0,\\n      hashLinkCounts:  {},\\n      langExtensions:  langExtensions,\\n      outputModifiers: outputModifiers,\\n      converter:       this,\\n      ghCodeBlocks:    [],\\n      metadata: {\\n        parsed: {},\\n        raw: '',\\n        format: ''\\n      }\\n    };\\n\\n    // This lets us use \\u00a8 trema as an escape char to avoid md5 hashes\\n    // The choice of character is arbitrary; anything that isn't\\n    // magic in Markdown will work.\\n    text = text.replace(/\\u00a8/g, '\\u00a8T');\\n\\n    // Replace $ with \\u00a8D\\n    // RegExp interprets $ as a special character\\n    // when it's in a replacement string\\n    text = text.replace(/\\\\$/g, '\\u00a8D');\\n\\n    // Standardize line endings\\n    text = text.replace(/\\\\r\\\\n/g, '\\\\n'); // DOS to Unix\\n    text = text.replace(/\\\\r/g, '\\\\n'); // Mac to Unix\\n\\n    // Stardardize line spaces\\n    text = text.replace(/\\\\u00A0/g, '&nbsp;');\\n\\n    if (options.smartIndentationFix) {\\n      text = rTrimInputText(text);\\n    }\\n\\n    // Make sure text begins and ends with a couple of newlines:\\n    text = '\\\\n\\\\n' + text + '\\\\n\\\\n';\\n\\n    // detab\\n    text = showdown.subParser('detab')(text, options, globals);\\n\\n    /**\\n     * Strip any lines consisting only of spaces and tabs.\\n     * This makes subsequent regexs easier to write, because we can\\n     * match consecutive blank lines with /\\\\n+/ instead of something\\n     * contorted like /[ \\\\t]*\\\\n+/\\n     */\\n    text = text.replace(/^[ \\\\t]+$/mg, '');\\n\\n    //run languageExtensions\\n    showdown.helper.forEach(langExtensions, function (ext) {\\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\\n    });\\n\\n    // run the sub parsers\\n    text = showdown.subParser('metadata')(text, options, globals);\\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\\n    text = showdown.subParser('hashCodeTags')(text, options, globals);\\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\\n    text = showdown.subParser('blockGamut')(text, options, globals);\\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\\n\\n    // attacklab: Restore dollar signs\\n    text = text.replace(/\\u00a8D/g, '$$');\\n\\n    // attacklab: Restore tremas\\n    text = text.replace(/\\u00a8T/g, '\\u00a8');\\n\\n    // render a complete html document instead of a partial if the option is enabled\\n    text = showdown.subParser('completeHTMLDocument')(text, options, globals);\\n\\n    // Run output modifiers\\n    showdown.helper.forEach(outputModifiers, function (ext) {\\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\\n    });\\n\\n    // update metadata\\n    metadata = globals.metadata;\\n    return text;\\n  };\\n\\n  /**\\n   * Converts an HTML string into a markdown string\\n   * @param src\\n   * @param [HTMLParser] A WHATWG DOM and HTML parser, such as JSDOM. If none is supplied, window.document will be used.\\n   * @returns {string}\\n   */\\n  this.makeMarkdown = this.makeMd = function (src, HTMLParser) {\\n\\n    // replace \\\\r\\\\n with \\\\n\\n    src = src.replace(/\\\\r\\\\n/g, '\\\\n');\\n    src = src.replace(/\\\\r/g, '\\\\n'); // old macs\\n\\n    // due to an edge case, we need to find this: > <\\n    // to prevent removing of non silent white spaces\\n    // ex: <em>this is</em> <strong>sparta</strong>\\n    src = src.replace(/>[ \\\\t]+</, '>\\u00a8NBSP;<');\\n\\n    if (!HTMLParser) {\\n      if (window && window.document) {\\n        HTMLParser = window.document;\\n      } else {\\n        throw new Error('HTMLParser is undefined. If in a webworker or nodejs environment, you need to provide a WHATWG DOM and HTML such as JSDOM');\\n      }\\n    }\\n\\n    var doc = HTMLParser.createElement('div');\\n    doc.innerHTML = src;\\n\\n    var globals = {\\n      preList: substitutePreCodeTags(doc)\\n    };\\n\\n    // remove all newlines and collapse spaces\\n    clean(doc);\\n\\n    // some stuff, like accidental reference links must now be escaped\\n    // TODO\\n    // doc.innerHTML = doc.innerHTML.replace(/\\\\[[\\\\S\\\\t ]]/);\\n\\n    var nodes = doc.childNodes,\\n        mdDoc = '';\\n\\n    for (var i = 0; i < nodes.length; i++) {\\n      mdDoc += showdown.subParser('makeMarkdown.node')(nodes[i], globals);\\n    }\\n\\n    function clean (node) {\\n      for (var n = 0; n < node.childNodes.length; ++n) {\\n        var child = node.childNodes[n];\\n        if (child.nodeType === 3) {\\n          if (!/\\\\S/.test(child.nodeValue) && !/^[ ]+$/.test(child.nodeValue)) {\\n            node.removeChild(child);\\n            --n;\\n          } else {\\n            child.nodeValue = child.nodeValue.split('\\\\n').join(' ');\\n            child.nodeValue = child.nodeValue.replace(/(\\\\s)+/g, '$1');\\n          }\\n        } else if (child.nodeType === 1) {\\n          clean(child);\\n        }\\n      }\\n    }\\n\\n    // find all pre tags and replace contents with placeholder\\n    // we need this so that we can remove all indentation from html\\n    // to ease up parsing\\n    function substitutePreCodeTags (doc) {\\n\\n      var pres = doc.querySelectorAll('pre'),\\n          presPH = [];\\n\\n      for (var i = 0; i < pres.length; ++i) {\\n\\n        if (pres[i].childElementCount === 1 && pres[i].firstChild.tagName.toLowerCase() === 'code') {\\n          var content = pres[i].firstChild.innerHTML.trim(),\\n              language = pres[i].firstChild.getAttribute('data-language') || '';\\n\\n          // if data-language attribute is not defined, then we look for class language-*\\n          if (language === '') {\\n            var classes = pres[i].firstChild.className.split(' ');\\n            for (var c = 0; c < classes.length; ++c) {\\n              var matches = classes[c].match(/^language-(.+)$/);\\n              if (matches !== null) {\\n                language = matches[1];\\n                break;\\n              }\\n            }\\n          }\\n\\n          // unescape html entities in content\\n          content = showdown.helper.unescapeHTMLEntities(content);\\n\\n          presPH.push(content);\\n          pres[i].outerHTML = '<precode language=\\\"' + language + '\\\" precodenum=\\\"' + i.toString() + '\\\"></precode>';\\n        } else {\\n          presPH.push(pres[i].innerHTML);\\n          pres[i].innerHTML = '';\\n          pres[i].setAttribute('prenum', i.toString());\\n        }\\n      }\\n      return presPH;\\n    }\\n\\n    return mdDoc;\\n  };\\n\\n  /**\\n   * Set an option of this Converter instance\\n   * @param {string} key\\n   * @param {*} value\\n   */\\n  this.setOption = function (key, value) {\\n    options[key] = value;\\n  };\\n\\n  /**\\n   * Get the option of this Converter instance\\n   * @param {string} key\\n   * @returns {*}\\n   */\\n  this.getOption = function (key) {\\n    return options[key];\\n  };\\n\\n  /**\\n   * Get the options of this Converter instance\\n   * @returns {{}}\\n   */\\n  this.getOptions = function () {\\n    return options;\\n  };\\n\\n  /**\\n   * Add extension to THIS converter\\n   * @param {{}} extension\\n   * @param {string} [name=null]\\n   */\\n  this.addExtension = function (extension, name) {\\n    name = name || null;\\n    _parseExtension(extension, name);\\n  };\\n\\n  /**\\n   * Use a global registered extension with THIS converter\\n   * @param {string} extensionName Name of the previously registered extension\\n   */\\n  this.useExtension = function (extensionName) {\\n    _parseExtension(extensionName);\\n  };\\n\\n  /**\\n   * Set the flavor THIS converter should use\\n   * @param {string} name\\n   */\\n  this.setFlavor = function (name) {\\n    if (!flavor.hasOwnProperty(name)) {\\n      throw Error(name + ' flavor was not found');\\n    }\\n    var preset = flavor[name];\\n    setConvFlavor = name;\\n    for (var option in preset) {\\n      if (preset.hasOwnProperty(option)) {\\n        options[option] = preset[option];\\n      }\\n    }\\n  };\\n\\n  /**\\n   * Get the currently set flavor of this converter\\n   * @returns {string}\\n   */\\n  this.getFlavor = function () {\\n    return setConvFlavor;\\n  };\\n\\n  /**\\n   * Remove an extension from THIS converter.\\n   * Note: This is a costly operation. It's better to initialize a new converter\\n   * and specify the extensions you wish to use\\n   * @param {Array} extension\\n   */\\n  this.removeExtension = function (extension) {\\n    if (!showdown.helper.isArray(extension)) {\\n      extension = [extension];\\n    }\\n    for (var a = 0; a < extension.length; ++a) {\\n      var ext = extension[a];\\n      for (var i = 0; i < langExtensions.length; ++i) {\\n        if (langExtensions[i] === ext) {\\n          langExtensions.splice(i, 1);\\n        }\\n      }\\n      for (var ii = 0; ii < outputModifiers.length; ++ii) {\\n        if (outputModifiers[ii] === ext) {\\n          outputModifiers.splice(ii, 1);\\n        }\\n      }\\n    }\\n  };\\n\\n  /**\\n   * Get all extension of THIS converter\\n   * @returns {{language: Array, output: Array}}\\n   */\\n  this.getAllExtensions = function () {\\n    return {\\n      language: langExtensions,\\n      output: outputModifiers\\n    };\\n  };\\n\\n  /**\\n   * Get the metadata of the previously parsed document\\n   * @param raw\\n   * @returns {string|{}}\\n   */\\n  this.getMetadata = function (raw) {\\n    if (raw) {\\n      return metadata.raw;\\n    } else {\\n      return metadata.parsed;\\n    }\\n  };\\n\\n  /**\\n   * Get the metadata format of the previously parsed document\\n   * @returns {string}\\n   */\\n  this.getMetadataFormat = function () {\\n    return metadata.format;\\n  };\\n\\n  /**\\n   * Private: set a single key, value metadata pair\\n   * @param {string} key\\n   * @param {string} value\\n   */\\n  this._setMetadataPair = function (key, value) {\\n    metadata.parsed[key] = value;\\n  };\\n\\n  /**\\n   * Private: set metadata format\\n   * @param {string} format\\n   */\\n  this._setMetadataFormat = function (format) {\\n    metadata.format = format;\\n  };\\n\\n  /**\\n   * Private: set metadata raw text\\n   * @param {string} raw\\n   */\\n  this._setMetadataRaw = function (raw) {\\n    metadata.raw = raw;\\n  };\\n};\\n\\r\\n/**\\n * Turn Markdown link shortcuts into XHTML <a> tags.\\n */\\nshowdown.subParser('anchors', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\\n\\n  var writeAnchorTag = function (wholeMatch, linkText, linkId, url, m5, m6, title) {\\n    if (showdown.helper.isUndefined(title)) {\\n      title = '';\\n    }\\n    linkId = linkId.toLowerCase();\\n\\n    // Special case for explicit empty url\\n    if (wholeMatch.search(/\\\\(<?\\\\s*>? ?(['\\\"].*['\\\"])?\\\\)$/m) > -1) {\\n      url = '';\\n    } else if (!url) {\\n      if (!linkId) {\\n        // lower-case and turn embedded newlines into spaces\\n        linkId = linkText.toLowerCase().replace(/ ?\\\\n/g, ' ');\\n      }\\n      url = '#' + linkId;\\n\\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\\n        url = globals.gUrls[linkId];\\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\\n          title = globals.gTitles[linkId];\\n        }\\n      } else {\\n        return wholeMatch;\\n      }\\n    }\\n\\n    //url = showdown.helper.escapeCharacters(url, '*_', false); // replaced line to improve performance\\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n\\n    var result = '<a href=\\\"' + url + '\\\"';\\n\\n    if (title !== '' && title !== null) {\\n      title = title.replace(/\\\"/g, '&quot;');\\n      //title = showdown.helper.escapeCharacters(title, '*_', false); // replaced line to improve performance\\n      title = title.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n      result += ' title=\\\"' + title + '\\\"';\\n    }\\n\\n    // optionLinksInNewWindow only applies\\n    // to external links. Hash links (#) open in same page\\n    if (options.openLinksInNewWindow && !/^#/.test(url)) {\\n      // escaped _\\n      result += ' rel=\\\"noopener noreferrer\\\" target=\\\"\\u00a8E95Eblank\\\"';\\n    }\\n\\n    result += '>' + linkText + '</a>';\\n\\n    return result;\\n  };\\n\\n  // First, handle reference-style links: [link text] [id]\\n  text = text.replace(/\\\\[((?:\\\\[[^\\\\]]*]|[^\\\\[\\\\]])*)] ?(?:\\\\n *)?\\\\[(.*?)]()()()()/g, writeAnchorTag);\\n\\n  // Next, inline-style links: [link text](url \\\"optional title\\\")\\n  // cases with crazy urls like ./image/cat1).png\\n  text = text.replace(/\\\\[((?:\\\\[[^\\\\]]*]|[^\\\\[\\\\]])*)]()[ \\\\t]*\\\\([ \\\\t]?<([^>]*)>(?:[ \\\\t]*(([\\\"'])([^\\\"]*?)\\\\5))?[ \\\\t]?\\\\)/g,\\n    writeAnchorTag);\\n\\n  // normal cases\\n  text = text.replace(/\\\\[((?:\\\\[[^\\\\]]*]|[^\\\\[\\\\]])*)]()[ \\\\t]*\\\\([ \\\\t]?<?([\\\\S]+?(?:\\\\([\\\\S]*?\\\\)[\\\\S]*?)?)>?(?:[ \\\\t]*(([\\\"'])([^\\\"]*?)\\\\5))?[ \\\\t]?\\\\)/g,\\n    writeAnchorTag);\\n\\n  // handle reference-style shortcuts: [link text]\\n  // These must come last in case you've also got [link test][1]\\n  // or [link test](/foo)\\n  text = text.replace(/\\\\[([^\\\\[\\\\]]+)]()()()()()/g, writeAnchorTag);\\n\\n  // Lastly handle GithubMentions if option is enabled\\n  if (options.ghMentions) {\\n    text = text.replace(/(^|\\\\s)(\\\\\\\\)?(@([a-z\\\\d]+(?:[a-z\\\\d.-]+?[a-z\\\\d]+)*))/gmi, function (wm, st, escape, mentions, username) {\\n      if (escape === '\\\\\\\\') {\\n        return st + mentions;\\n      }\\n\\n      //check if options.ghMentionsLink is a string\\n      if (!showdown.helper.isString(options.ghMentionsLink)) {\\n        throw new Error('ghMentionsLink option must be a string');\\n      }\\n      var lnk = options.ghMentionsLink.replace(/\\\\{u}/g, username),\\n          target = '';\\n      if (options.openLinksInNewWindow) {\\n        target = ' rel=\\\"noopener noreferrer\\\" target=\\\"\\u00a8E95Eblank\\\"';\\n      }\\n      return st + '<a href=\\\"' + lnk + '\\\"' + target + '>' + mentions + '</a>';\\n    });\\n  }\\n\\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n// url allowed chars [a-z\\\\d_.~:/?#[]@!$&'()*+,;=-]\\n\\nvar simpleURLRegex  = /([*~_]+|\\\\b)(((https?|ftp|dict):\\\\/\\\\/|www\\\\.)[^'\\\">\\\\s]+?\\\\.[^'\\\">\\\\s]+?)()(\\\\1)?(?=\\\\s|$)(?![\\\"<>])/gi,\\n    simpleURLRegex2 = /([*~_]+|\\\\b)(((https?|ftp|dict):\\\\/\\\\/|www\\\\.)[^'\\\">\\\\s]+\\\\.[^'\\\">\\\\s]+?)([.!?,()\\\\[\\\\]])?(\\\\1)?(?=\\\\s|$)(?![\\\"<>])/gi,\\n    delimUrlRegex   = /()<(((https?|ftp|dict):\\\\/\\\\/|www\\\\.)[^'\\\">\\\\s]+)()>()/gi,\\n    simpleMailRegex = /(^|\\\\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\\\.[-a-z0-9]+)*\\\\.[a-z]+)(?=$|\\\\s)/gmi,\\n    delimMailRegex  = /<()(?:mailto:)?([-.\\\\w]+@[-a-z0-9]+(\\\\.[-a-z0-9]+)*\\\\.[a-z]+)>/gi,\\n\\n    replaceLink = function (options) {\\n      'use strict';\\n      return function (wm, leadingMagicChars, link, m2, m3, trailingPunctuation, trailingMagicChars) {\\n        link = link.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n        var lnkTxt = link,\\n            append = '',\\n            target = '',\\n            lmc    = leadingMagicChars || '',\\n            tmc    = trailingMagicChars || '';\\n        if (/^www\\\\./i.test(link)) {\\n          link = link.replace(/^www\\\\./i, 'http://www.');\\n        }\\n        if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\\n          append = trailingPunctuation;\\n        }\\n        if (options.openLinksInNewWindow) {\\n          target = ' rel=\\\"noopener noreferrer\\\" target=\\\"\\u00a8E95Eblank\\\"';\\n        }\\n        return lmc + '<a href=\\\"' + link + '\\\"' + target + '>' + lnkTxt + '</a>' + append + tmc;\\n      };\\n    },\\n\\n    replaceMail = function (options, globals) {\\n      'use strict';\\n      return function (wholeMatch, b, mail) {\\n        var href = 'mailto:';\\n        b = b || '';\\n        mail = showdown.subParser('unescapeSpecialChars')(mail, options, globals);\\n        if (options.encodeEmails) {\\n          href = showdown.helper.encodeEmailAddress(href + mail);\\n          mail = showdown.helper.encodeEmailAddress(mail);\\n        } else {\\n          href = href + mail;\\n        }\\n        return b + '<a href=\\\"' + href + '\\\">' + mail + '</a>';\\n      };\\n    };\\n\\nshowdown.subParser('autoLinks', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\\n\\n  text = text.replace(delimUrlRegex, replaceLink(options));\\n  text = text.replace(delimMailRegex, replaceMail(options, globals));\\n\\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\\n\\n  return text;\\n});\\n\\nshowdown.subParser('simplifiedAutoLinks', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.simplifiedAutoLink) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('simplifiedAutoLinks.before', text, options, globals);\\n\\n  if (options.excludeTrailingPunctuationFromURLs) {\\n    text = text.replace(simpleURLRegex2, replaceLink(options));\\n  } else {\\n    text = text.replace(simpleURLRegex, replaceLink(options));\\n  }\\n  text = text.replace(simpleMailRegex, replaceMail(options, globals));\\n\\n  text = globals.converter._dispatch('simplifiedAutoLinks.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\n/**\\n * These are all the transformations that form block-level\\n * tags like paragraphs, headers, and list items.\\n */\\nshowdown.subParser('blockGamut', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\\n\\n  // we parse blockquotes first so that we can have headings and hrs\\n  // inside blockquotes\\n  text = showdown.subParser('blockQuotes')(text, options, globals);\\n  text = showdown.subParser('headers')(text, options, globals);\\n\\n  // Do Horizontal Rules:\\n  text = showdown.subParser('horizontalRule')(text, options, globals);\\n\\n  text = showdown.subParser('lists')(text, options, globals);\\n  text = showdown.subParser('codeBlocks')(text, options, globals);\\n  text = showdown.subParser('tables')(text, options, globals);\\n\\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\\n  // was to escape raw HTML in the original Markdown source. This time,\\n  // we're escaping the markup we've just created, so that we don't wrap\\n  // <p> tags around block-level tags.\\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\\n  text = showdown.subParser('paragraphs')(text, options, globals);\\n\\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\nshowdown.subParser('blockQuotes', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\\n\\n  // add a couple extra lines after the text and endtext mark\\n  text = text + '\\\\n\\\\n';\\n\\n  var rgx = /(^ {0,3}>[ \\\\t]?.+\\\\n(.+\\\\n)*\\\\n*)+/gm;\\n\\n  if (options.splitAdjacentBlockquotes) {\\n    rgx = /^ {0,3}>[\\\\s\\\\S]*?(?:\\\\n\\\\n)/gm;\\n  }\\n\\n  text = text.replace(rgx, function (bq) {\\n    // attacklab: hack around Konqueror 3.5.4 bug:\\n    // \\\"----------bug\\\".replace(/^-/g,\\\"\\\") == \\\"bug\\\"\\n    bq = bq.replace(/^[ \\\\t]*>[ \\\\t]?/gm, ''); // trim one level of quoting\\n\\n    // attacklab: clean up hack\\n    bq = bq.replace(/\\u00a80/g, '');\\n\\n    bq = bq.replace(/^[ \\\\t]+$/gm, ''); // trim whitespace-only lines\\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\\n\\n    bq = bq.replace(/(^|\\\\n)/g, '$1  ');\\n    // These leading spaces screw with <pre> content, so we need to fix that:\\n    bq = bq.replace(/(\\\\s*<pre>[^\\\\r]+?<\\\\/pre>)/gm, function (wholeMatch, m1) {\\n      var pre = m1;\\n      // attacklab: hack around Konqueror 3.5.4 bug:\\n      pre = pre.replace(/^  /mg, '\\u00a80');\\n      pre = pre.replace(/\\u00a80/g, '');\\n      return pre;\\n    });\\n\\n    return showdown.subParser('hashBlock')('<blockquote>\\\\n' + bq + '\\\\n</blockquote>', options, globals);\\n  });\\n\\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Process Markdown `<pre><code>` blocks.\\n */\\nshowdown.subParser('codeBlocks', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\\n\\n  // sentinel workarounds for lack of \\\\A and \\\\Z, safari\\\\khtml bug\\n  text += '\\u00a80';\\n\\n  var pattern = /(?:\\\\n\\\\n|^)((?:(?:[ ]{4}|\\\\t).*\\\\n+)+)(\\\\n*[ ]{0,3}[^ \\\\t\\\\n]|(?=\\u00a80))/g;\\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\\n    var codeblock = m1,\\n        nextChar = m2,\\n        end = '\\\\n';\\n\\n    codeblock = showdown.subParser('outdent')(codeblock, options, globals);\\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\\n    codeblock = codeblock.replace(/^\\\\n+/g, ''); // trim leading newlines\\n    codeblock = codeblock.replace(/\\\\n+$/g, ''); // trim trailing newlines\\n\\n    if (options.omitExtraWLInCodeBlocks) {\\n      end = '';\\n    }\\n\\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\\n\\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\\n  });\\n\\n  // strip sentinel\\n  text = text.replace(/\\u00a80/, '');\\n\\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n *\\n *   *  Backtick quotes are used for <code></code> spans.\\n *\\n *   *  You can use multiple backticks as the delimiters if you want to\\n *     include literal backticks in the code span. So, this input:\\n *\\n *         Just type ``foo `bar` baz`` at the prompt.\\n *\\n *       Will translate to:\\n *\\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\\n *\\n *    There's no arbitrary limit to the number of backticks you\\n *    can use as delimters. If you need three consecutive backticks\\n *    in your code, use four for delimiters, etc.\\n *\\n *  *  You can use spaces to get literal backticks at the edges:\\n *\\n *         ... type `` `bar` `` ...\\n *\\n *       Turns to:\\n *\\n *         ... type <code>`bar`</code> ...\\n */\\nshowdown.subParser('codeSpans', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\\n\\n  if (typeof (text) === 'undefined') {\\n    text = '';\\n  }\\n  text = text.replace(/(^|[^\\\\\\\\])(`+)([^\\\\r]*?[^`])\\\\2(?!`)/gm,\\n    function (wholeMatch, m1, m2, m3) {\\n      var c = m3;\\n      c = c.replace(/^([ \\\\t]*)/g, '');\\t// leading whitespace\\n      c = c.replace(/[ \\\\t]*$/g, '');\\t// trailing whitespace\\n      c = showdown.subParser('encodeCode')(c, options, globals);\\n      c = m1 + '<code>' + c + '</code>';\\n      c = showdown.subParser('hashHTMLSpans')(c, options, globals);\\n      return c;\\n    }\\n  );\\n\\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Create a full HTML document from the processed markdown\\n */\\nshowdown.subParser('completeHTMLDocument', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.completeHTMLDocument) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('completeHTMLDocument.before', text, options, globals);\\n\\n  var doctype = 'html',\\n      doctypeParsed = '<!DOCTYPE HTML>\\\\n',\\n      title = '',\\n      charset = '<meta charset=\\\"utf-8\\\">\\\\n',\\n      lang = '',\\n      metadata = '';\\n\\n  if (typeof globals.metadata.parsed.doctype !== 'undefined') {\\n    doctypeParsed = '<!DOCTYPE ' +  globals.metadata.parsed.doctype + '>\\\\n';\\n    doctype = globals.metadata.parsed.doctype.toString().toLowerCase();\\n    if (doctype === 'html' || doctype === 'html5') {\\n      charset = '<meta charset=\\\"utf-8\\\">';\\n    }\\n  }\\n\\n  for (var meta in globals.metadata.parsed) {\\n    if (globals.metadata.parsed.hasOwnProperty(meta)) {\\n      switch (meta.toLowerCase()) {\\n        case 'doctype':\\n          break;\\n\\n        case 'title':\\n          title = '<title>' +  globals.metadata.parsed.title + '</title>\\\\n';\\n          break;\\n\\n        case 'charset':\\n          if (doctype === 'html' || doctype === 'html5') {\\n            charset = '<meta charset=\\\"' + globals.metadata.parsed.charset + '\\\">\\\\n';\\n          } else {\\n            charset = '<meta name=\\\"charset\\\" content=\\\"' + globals.metadata.parsed.charset + '\\\">\\\\n';\\n          }\\n          break;\\n\\n        case 'language':\\n        case 'lang':\\n          lang = ' lang=\\\"' + globals.metadata.parsed[meta] + '\\\"';\\n          metadata += '<meta name=\\\"' + meta + '\\\" content=\\\"' + globals.metadata.parsed[meta] + '\\\">\\\\n';\\n          break;\\n\\n        default:\\n          metadata += '<meta name=\\\"' + meta + '\\\" content=\\\"' + globals.metadata.parsed[meta] + '\\\">\\\\n';\\n      }\\n    }\\n  }\\n\\n  text = doctypeParsed + '<html' + lang + '>\\\\n<head>\\\\n' + title + charset + metadata + '</head>\\\\n<body>\\\\n' + text.trim() + '\\\\n</body>\\\\n</html>';\\n\\n  text = globals.converter._dispatch('completeHTMLDocument.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Convert all tabs to spaces\\n */\\nshowdown.subParser('detab', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('detab.before', text, options, globals);\\n\\n  // expand first n-1 tabs\\n  text = text.replace(/\\\\t(?=\\\\t)/g, '    '); // g_tab_width\\n\\n  // replace the nth with two sentinels\\n  text = text.replace(/\\\\t/g, '\\u00a8A\\u00a8B');\\n\\n  // use the sentinel to anchor our regex so it doesn't explode\\n  text = text.replace(/\\u00a8B(.+?)\\u00a8A/g, function (wholeMatch, m1) {\\n    var leadingText = m1,\\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\\n\\n    // there *must* be a better way to do this:\\n    for (var i = 0; i < numSpaces; i++) {\\n      leadingText += ' ';\\n    }\\n\\n    return leadingText;\\n  });\\n\\n  // clean up sentinels\\n  text = text.replace(/\\u00a8A/g, '    ');  // g_tab_width\\n  text = text.replace(/\\u00a8B/g, '');\\n\\n  text = globals.converter._dispatch('detab.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nshowdown.subParser('ellipsis', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.ellipsis) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('ellipsis.before', text, options, globals);\\n\\n  text = text.replace(/\\\\.\\\\.\\\\./g, '\\u2026');\\n\\n  text = globals.converter._dispatch('ellipsis.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\n/**\\n * Turn emoji codes into emojis\\n *\\n * List of supported emojis: https://github.com/showdownjs/showdown/wiki/Emojis\\n */\\nshowdown.subParser('emoji', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.emoji) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('emoji.before', text, options, globals);\\n\\n  var emojiRgx = /:([\\\\S]+?):/g;\\n\\n  text = text.replace(emojiRgx, function (wm, emojiCode) {\\n    if (showdown.helper.emojis.hasOwnProperty(emojiCode)) {\\n      return showdown.helper.emojis[emojiCode];\\n    }\\n    return wm;\\n  });\\n\\n  text = globals.converter._dispatch('emoji.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\n/**\\n * Smart processing for ampersands and angle brackets that need to be encoded.\\n */\\nshowdown.subParser('encodeAmpsAndAngles', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('encodeAmpsAndAngles.before', text, options, globals);\\n\\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\\n  // http://bumppo.net/projects/amputator/\\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\\\w+);)/g, '&amp;');\\n\\n  // Encode naked <'s\\n  text = text.replace(/<(?![a-z\\\\/?$!])/gi, '&lt;');\\n\\n  // Encode <\\n  text = text.replace(/</g, '&lt;');\\n\\n  // Encode >\\n  text = text.replace(/>/g, '&gt;');\\n\\n  text = globals.converter._dispatch('encodeAmpsAndAngles.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Returns the string, with after processing the following backslash escape sequences.\\n *\\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\\n *\\n *    text = escapeCharacters(text,\\\"\\\\\\\\\\\",true);\\n *    text = escapeCharacters(text,\\\"`*_{}[]()>#+-.!\\\",true);\\n *\\n * ...but we're sidestepping its use of the (slow) RegExp constructor\\n * as an optimization for Firefox.  This function gets called a LOT.\\n */\\nshowdown.subParser('encodeBackslashEscapes', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('encodeBackslashEscapes.before', text, options, globals);\\n\\n  text = text.replace(/\\\\\\\\(\\\\\\\\)/g, showdown.helper.escapeCharactersCallback);\\n  text = text.replace(/\\\\\\\\([`*_{}\\\\[\\\\]()>#+.!~=|:-])/g, showdown.helper.escapeCharactersCallback);\\n\\n  text = globals.converter._dispatch('encodeBackslashEscapes.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Encode/escape certain characters inside Markdown code runs.\\n * The point is that in code, these characters are literals,\\n * and lose their special Markdown meanings.\\n */\\nshowdown.subParser('encodeCode', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('encodeCode.before', text, options, globals);\\n\\n  // Encode all ampersands; HTML entities are not\\n  // entities within a Markdown code span.\\n  text = text\\n    .replace(/&/g, '&amp;')\\n  // Do the angle bracket song and dance:\\n    .replace(/</g, '&lt;')\\n    .replace(/>/g, '&gt;')\\n  // Now, escape characters that are magic in Markdown:\\n    .replace(/([*_{}\\\\[\\\\]\\\\\\\\=~-])/g, showdown.helper.escapeCharactersCallback);\\n\\n  text = globals.converter._dispatch('encodeCode.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Within tags -- meaning between < and > -- encode [\\\\ ` * _ ~ =] so they\\n * don't conflict with their use in Markdown for code, italics and strong.\\n */\\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.before', text, options, globals);\\n\\n  // Build a regex to find HTML tags.\\n  var tags     = /<\\\\/?[a-z\\\\d_:-]+(?:[\\\\s]+[\\\\s\\\\S]+?)?>/gi,\\n      comments = /<!(--(?:(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>/gi;\\n\\n  text = text.replace(tags, function (wholeMatch) {\\n    return wholeMatch\\n      .replace(/(.)<\\\\/?code>(?=.)/g, '$1`')\\n      .replace(/([\\\\\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\\n  });\\n\\n  text = text.replace(comments, function (wholeMatch) {\\n    return wholeMatch\\n      .replace(/([\\\\\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\\n  });\\n\\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Handle github codeblocks prior to running HashHTML so that\\n * HTML contained within the codeblock gets escaped properly\\n * Example:\\n * ```ruby\\n *     def hello_world(x)\\n *       puts \\\"Hello, #{x}\\\"\\n *     end\\n * ```\\n */\\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\\n  'use strict';\\n\\n  // early exit if option is not enabled\\n  if (!options.ghCodeBlocks) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\\n\\n  text += '\\u00a80';\\n\\n  text = text.replace(/(?:^|\\\\n)(?: {0,3})(```+|~~~+)(?: *)([^\\\\s`~]*)\\\\n([\\\\s\\\\S]*?)\\\\n(?: {0,3})\\\\1/g, function (wholeMatch, delim, language, codeblock) {\\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\\\n';\\n\\n    // First parse the github code block\\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\\n    codeblock = codeblock.replace(/^\\\\n+/g, ''); // trim leading newlines\\n    codeblock = codeblock.replace(/\\\\n+$/g, ''); // trim trailing whitespace\\n\\n    codeblock = '<pre><code' + (language ? ' class=\\\"' + language + ' language-' + language + '\\\"' : '') + '>' + codeblock + end + '</code></pre>';\\n\\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\\n\\n    // Since GHCodeblocks can be false positives, we need to\\n    // store the primitive text and the parsed text in a global var,\\n    // and then return a token\\n    return '\\\\n\\\\n\\u00a8G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\\\n\\\\n';\\n  });\\n\\n  // attacklab: strip sentinel\\n  text = text.replace(/\\u00a80/, '');\\n\\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\\n});\\n\\r\\nshowdown.subParser('hashBlock', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('hashBlock.before', text, options, globals);\\n  text = text.replace(/(^\\\\n+|\\\\n+$)/g, '');\\n  text = '\\\\n\\\\n\\u00a8K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\\\n\\\\n';\\n  text = globals.converter._dispatch('hashBlock.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Hash and escape <code> elements that should not be parsed as markdown\\n */\\nshowdown.subParser('hashCodeTags', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('hashCodeTags.before', text, options, globals);\\n\\n  var repFunc = function (wholeMatch, match, left, right) {\\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\\n    return '\\u00a8C' + (globals.gHtmlSpans.push(codeblock) - 1) + 'C';\\n  };\\n\\n  // Hash naked <code>\\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '<code\\\\\\\\b[^>]*>', '</code>', 'gim');\\n\\n  text = globals.converter._dispatch('hashCodeTags.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nshowdown.subParser('hashElement', function (text, options, globals) {\\n  'use strict';\\n\\n  return function (wholeMatch, m1) {\\n    var blockText = m1;\\n\\n    // Undo double lines\\n    blockText = blockText.replace(/\\\\n\\\\n/g, '\\\\n');\\n    blockText = blockText.replace(/^\\\\n/, '');\\n\\n    // strip trailing blank lines\\n    blockText = blockText.replace(/\\\\n+$/g, '');\\n\\n    // Replace the element text with a marker (\\\"\\u00a8KxK\\\" where x is its key)\\n    blockText = '\\\\n\\\\n\\u00a8K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\\\n\\\\n';\\n\\n    return blockText;\\n  };\\n});\\n\\r\\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('hashHTMLBlocks.before', text, options, globals);\\n\\n  var blockTags = [\\n        'pre',\\n        'div',\\n        'h1',\\n        'h2',\\n        'h3',\\n        'h4',\\n        'h5',\\n        'h6',\\n        'blockquote',\\n        'table',\\n        'dl',\\n        'ol',\\n        'ul',\\n        'script',\\n        'noscript',\\n        'form',\\n        'fieldset',\\n        'iframe',\\n        'math',\\n        'style',\\n        'section',\\n        'header',\\n        'footer',\\n        'nav',\\n        'article',\\n        'aside',\\n        'address',\\n        'audio',\\n        'canvas',\\n        'figure',\\n        'hgroup',\\n        'output',\\n        'video',\\n        'p'\\n      ],\\n      repFunc = function (wholeMatch, match, left, right) {\\n        var txt = wholeMatch;\\n        // check if this html element is marked as markdown\\n        // if so, it's contents should be parsed as markdown\\n        if (left.search(/\\\\bmarkdown\\\\b/) !== -1) {\\n          txt = left + globals.converter.makeHtml(match) + right;\\n        }\\n        return '\\\\n\\\\n\\u00a8K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\\\n\\\\n';\\n      };\\n\\n  if (options.backslashEscapesHTMLTags) {\\n    // encode backslash escaped HTML tags\\n    text = text.replace(/\\\\\\\\<(\\\\/?[^>]+?)>/g, function (wm, inside) {\\n      return '&lt;' + inside + '&gt;';\\n    });\\n  }\\n\\n  // hash HTML Blocks\\n  for (var i = 0; i < blockTags.length; ++i) {\\n\\n    var opTagPos,\\n        rgx1     = new RegExp('^ {0,3}(<' + blockTags[i] + '\\\\\\\\b[^>]*>)', 'im'),\\n        patLeft  = '<' + blockTags[i] + '\\\\\\\\b[^>]*>',\\n        patRight = '</' + blockTags[i] + '>';\\n    // 1. Look for the first position of the first opening HTML tag in the text\\n    while ((opTagPos = showdown.helper.regexIndexOf(text, rgx1)) !== -1) {\\n\\n      // if the HTML tag is \\\\ escaped, we need to escape it and break\\n\\n\\n      //2. Split the text in that position\\n      var subTexts = showdown.helper.splitAtIndex(text, opTagPos),\\n          //3. Match recursively\\n          newSubText1 = showdown.helper.replaceRecursiveRegExp(subTexts[1], repFunc, patLeft, patRight, 'im');\\n\\n      // prevent an infinite loop\\n      if (newSubText1 === subTexts[1]) {\\n        break;\\n      }\\n      text = subTexts[0].concat(newSubText1);\\n    }\\n  }\\n  // HR SPECIAL CASE\\n  text = text.replace(/(\\\\n {0,3}(<(hr)\\\\b([^<>])*?\\\\/?>)[ \\\\t]*(?=\\\\n{2,}))/g,\\n    showdown.subParser('hashElement')(text, options, globals));\\n\\n  // Special case for standalone HTML comments\\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\\n    return '\\\\n\\\\n\\u00a8K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\\\n\\\\n';\\n  }, '^ {0,3}\\u003c!--', '--\\u003e', 'gm');\\n\\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\\n  text = text.replace(/(?:\\\\n\\\\n)( {0,3}(?:<([?%])[^\\\\r]*?\\\\2>)[ \\\\t]*(?=\\\\n{2,}))/g,\\n    showdown.subParser('hashElement')(text, options, globals));\\n\\n  text = globals.converter._dispatch('hashHTMLBlocks.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Hash span elements that should not be parsed as markdown\\n */\\nshowdown.subParser('hashHTMLSpans', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('hashHTMLSpans.before', text, options, globals);\\n\\n  function hashHTMLSpan (html) {\\n    return '\\u00a8C' + (globals.gHtmlSpans.push(html) - 1) + 'C';\\n  }\\n\\n  // Hash Self Closing tags\\n  text = text.replace(/<[^>]+?\\\\/>/gi, function (wm) {\\n    return hashHTMLSpan(wm);\\n  });\\n\\n  // Hash tags without properties\\n  text = text.replace(/<([^>]+?)>[\\\\s\\\\S]*?<\\\\/\\\\1>/g, function (wm) {\\n    return hashHTMLSpan(wm);\\n  });\\n\\n  // Hash tags with properties\\n  text = text.replace(/<([^>]+?)\\\\s[^>]+?>[\\\\s\\\\S]*?<\\\\/\\\\1>/g, function (wm) {\\n    return hashHTMLSpan(wm);\\n  });\\n\\n  // Hash self closing tags without />\\n  text = text.replace(/<[^>]+?>/gi, function (wm) {\\n    return hashHTMLSpan(wm);\\n  });\\n\\n  /*showdown.helper.matchRecursiveRegExp(text, '<code\\\\\\\\b[^>]*>', '</code>', 'gi');*/\\n\\n  text = globals.converter._dispatch('hashHTMLSpans.after', text, options, globals);\\n  return text;\\n});\\n\\n/**\\n * Unhash HTML spans\\n */\\nshowdown.subParser('unhashHTMLSpans', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('unhashHTMLSpans.before', text, options, globals);\\n\\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\\n    var repText = globals.gHtmlSpans[i],\\n        // limiter to prevent infinite loop (assume 10 as limit for recurse)\\n        limit = 0;\\n\\n    while (/\\u00a8C(\\\\d+)C/.test(repText)) {\\n      var num = RegExp.$1;\\n      repText = repText.replace('\\u00a8C' + num + 'C', globals.gHtmlSpans[num]);\\n      if (limit === 10) {\\n        console.error('maximum nesting of 10 spans reached!!!');\\n        break;\\n      }\\n      ++limit;\\n    }\\n    text = text.replace('\\u00a8C' + i + 'C', repText);\\n  }\\n\\n  text = globals.converter._dispatch('unhashHTMLSpans.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Hash and escape <pre><code> elements that should not be parsed as markdown\\n */\\nshowdown.subParser('hashPreCodeTags', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('hashPreCodeTags.before', text, options, globals);\\n\\n  var repFunc = function (wholeMatch, match, left, right) {\\n    // encode html entities\\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\\n    return '\\\\n\\\\n\\u00a8G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\\\n\\\\n';\\n  };\\n\\n  // Hash <pre><code>\\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\\\\\b[^>]*>\\\\\\\\s*<code\\\\\\\\b[^>]*>', '^ {0,3}</code>\\\\\\\\s*</pre>', 'gim');\\n\\n  text = globals.converter._dispatch('hashPreCodeTags.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nshowdown.subParser('headers', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('headers.before', text, options, globals);\\n\\n  var headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\\n\\n      // Set text-style headers:\\n      //\\tHeader 1\\n      //\\t========\\n      //\\n      //\\tHeader 2\\n      //\\t--------\\n      //\\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\\\t]*\\\\n={2,}[ \\\\t]*\\\\n+/gm : /^(.+)[ \\\\t]*\\\\n=+[ \\\\t]*\\\\n+/gm,\\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\\\t]*\\\\n-{2,}[ \\\\t]*\\\\n+/gm : /^(.+)[ \\\\t]*\\\\n-+[ \\\\t]*\\\\n+/gm;\\n\\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\\n\\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\\n        hID = (options.noHeaderId) ? '' : ' id=\\\"' + headerId(m1) + '\\\"',\\n        hLevel = headerLevelStart,\\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\\n  });\\n\\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\\n        hID = (options.noHeaderId) ? '' : ' id=\\\"' + headerId(m1) + '\\\"',\\n        hLevel = headerLevelStart + 1,\\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\\n  });\\n\\n  // atx-style headers:\\n  //  # Header 1\\n  //  ## Header 2\\n  //  ## Header 2 with closing hashes ##\\n  //  ...\\n  //  ###### Header 6\\n  //\\n  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \\\\t]+(.+?)[ \\\\t]*#*\\\\n+/gm : /^(#{1,6})[ \\\\t]*(.+?)[ \\\\t]*#*\\\\n+/gm;\\n\\n  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\\n    var hText = m2;\\n    if (options.customizedHeaderId) {\\n      hText = m2.replace(/\\\\s?\\\\{([^{]+?)}\\\\s*$/, '');\\n    }\\n\\n    var span = showdown.subParser('spanGamut')(hText, options, globals),\\n        hID = (options.noHeaderId) ? '' : ' id=\\\"' + headerId(m2) + '\\\"',\\n        hLevel = headerLevelStart - 1 + m1.length,\\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\\n\\n    return showdown.subParser('hashBlock')(header, options, globals);\\n  });\\n\\n  function headerId (m) {\\n    var title,\\n        prefix;\\n\\n    // It is separate from other options to allow combining prefix and customized\\n    if (options.customizedHeaderId) {\\n      var match = m.match(/\\\\{([^{]+?)}\\\\s*$/);\\n      if (match && match[1]) {\\n        m = match[1];\\n      }\\n    }\\n\\n    title = m;\\n\\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\\n    if (showdown.helper.isString(options.prefixHeaderId)) {\\n      prefix = options.prefixHeaderId;\\n    } else if (options.prefixHeaderId === true) {\\n      prefix = 'section-';\\n    } else {\\n      prefix = '';\\n    }\\n\\n    if (!options.rawPrefixHeaderId) {\\n      title = prefix + title;\\n    }\\n\\n    if (options.ghCompatibleHeaderId) {\\n      title = title\\n        .replace(/ /g, '-')\\n        // replace previously escaped chars (&, \\u00a8 and $)\\n        .replace(/&amp;/g, '')\\n        .replace(/\\u00a8T/g, '')\\n        .replace(/\\u00a8D/g, '')\\n        // replace rest of the chars (&~$ are repeated as they might have been escaped)\\n        // borrowed from github's redcarpet (some they should produce similar results)\\n        .replace(/[&+$,\\\\/:;=?@\\\"#{}|^\\u00a8~\\\\[\\\\]`\\\\\\\\*)(%.!'<>]/g, '')\\n        .toLowerCase();\\n    } else if (options.rawHeaderId) {\\n      title = title\\n        .replace(/ /g, '-')\\n        // replace previously escaped chars (&, \\u00a8 and $)\\n        .replace(/&amp;/g, '&')\\n        .replace(/\\u00a8T/g, '\\u00a8')\\n        .replace(/\\u00a8D/g, '$')\\n        // replace \\\" and '\\n        .replace(/[\\\"']/g, '-')\\n        .toLowerCase();\\n    } else {\\n      title = title\\n        .replace(/[^\\\\w]/g, '')\\n        .toLowerCase();\\n    }\\n\\n    if (options.rawPrefixHeaderId) {\\n      title = prefix + title;\\n    }\\n\\n    if (globals.hashLinkCounts[title]) {\\n      title = title + '-' + (globals.hashLinkCounts[title]++);\\n    } else {\\n      globals.hashLinkCounts[title] = 1;\\n    }\\n    return title;\\n  }\\n\\n  text = globals.converter._dispatch('headers.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Turn Markdown link shortcuts into XHTML <a> tags.\\n */\\nshowdown.subParser('horizontalRule', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('horizontalRule.before', text, options, globals);\\n\\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\\n  text = text.replace(/^ {0,2}( ?-){3,}[ \\\\t]*$/gm, key);\\n  text = text.replace(/^ {0,2}( ?\\\\*){3,}[ \\\\t]*$/gm, key);\\n  text = text.replace(/^ {0,2}( ?_){3,}[ \\\\t]*$/gm, key);\\n\\n  text = globals.converter._dispatch('horizontalRule.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Turn Markdown image shortcuts into <img> tags.\\n */\\nshowdown.subParser('images', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('images.before', text, options, globals);\\n\\n  var inlineRegExp      = /!\\\\[([^\\\\]]*?)][ \\\\t]*()\\\\([ \\\\t]?<?([\\\\S]+?(?:\\\\([\\\\S]*?\\\\)[\\\\S]*?)?)>?(?: =([*\\\\d]+[A-Za-z%]{0,4})x([*\\\\d]+[A-Za-z%]{0,4}))?[ \\\\t]*(?:([\\\"'])([^\\\"]*?)\\\\6)?[ \\\\t]?\\\\)/g,\\n      crazyRegExp       = /!\\\\[([^\\\\]]*?)][ \\\\t]*()\\\\([ \\\\t]?<([^>]*)>(?: =([*\\\\d]+[A-Za-z%]{0,4})x([*\\\\d]+[A-Za-z%]{0,4}))?[ \\\\t]*(?:(?:([\\\"'])([^\\\"]*?)\\\\6))?[ \\\\t]?\\\\)/g,\\n      base64RegExp      = /!\\\\[([^\\\\]]*?)][ \\\\t]*()\\\\([ \\\\t]?<?(data:.+?\\\\/.+?;base64,[A-Za-z0-9+/=\\\\n]+?)>?(?: =([*\\\\d]+[A-Za-z%]{0,4})x([*\\\\d]+[A-Za-z%]{0,4}))?[ \\\\t]*(?:([\\\"'])([^\\\"]*?)\\\\6)?[ \\\\t]?\\\\)/g,\\n      referenceRegExp   = /!\\\\[([^\\\\]]*?)] ?(?:\\\\n *)?\\\\[([\\\\s\\\\S]*?)]()()()()()/g,\\n      refShortcutRegExp = /!\\\\[([^\\\\[\\\\]]+)]()()()()()/g;\\n\\n  function writeImageTagBase64 (wholeMatch, altText, linkId, url, width, height, m5, title) {\\n    url = url.replace(/\\\\s/g, '');\\n    return writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title);\\n  }\\n\\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\\n\\n    var gUrls   = globals.gUrls,\\n        gTitles = globals.gTitles,\\n        gDims   = globals.gDimensions;\\n\\n    linkId = linkId.toLowerCase();\\n\\n    if (!title) {\\n      title = '';\\n    }\\n    // Special case for explicit empty url\\n    if (wholeMatch.search(/\\\\(<?\\\\s*>? ?(['\\\"].*['\\\"])?\\\\)$/m) > -1) {\\n      url = '';\\n\\n    } else if (url === '' || url === null) {\\n      if (linkId === '' || linkId === null) {\\n        // lower-case and turn embedded newlines into spaces\\n        linkId = altText.toLowerCase().replace(/ ?\\\\n/g, ' ');\\n      }\\n      url = '#' + linkId;\\n\\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\\n        url = gUrls[linkId];\\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\\n          title = gTitles[linkId];\\n        }\\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\\n          width = gDims[linkId].width;\\n          height = gDims[linkId].height;\\n        }\\n      } else {\\n        return wholeMatch;\\n      }\\n    }\\n\\n    altText = altText\\n      .replace(/\\\"/g, '&quot;')\\n    //altText = showdown.helper.escapeCharacters(altText, '*_', false);\\n      .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n    //url = showdown.helper.escapeCharacters(url, '*_', false);\\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n    var result = '<img src=\\\"' + url + '\\\" alt=\\\"' + altText + '\\\"';\\n\\n    if (title && showdown.helper.isString(title)) {\\n      title = title\\n        .replace(/\\\"/g, '&quot;')\\n      //title = showdown.helper.escapeCharacters(title, '*_', false);\\n        .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n      result += ' title=\\\"' + title + '\\\"';\\n    }\\n\\n    if (width && height) {\\n      width  = (width === '*') ? 'auto' : width;\\n      height = (height === '*') ? 'auto' : height;\\n\\n      result += ' width=\\\"' + width + '\\\"';\\n      result += ' height=\\\"' + height + '\\\"';\\n    }\\n\\n    result += ' />';\\n\\n    return result;\\n  }\\n\\n  // First, handle reference-style labeled images: ![alt text][id]\\n  text = text.replace(referenceRegExp, writeImageTag);\\n\\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \\\"optional title\\\")\\n\\n  // base64 encoded images\\n  text = text.replace(base64RegExp, writeImageTagBase64);\\n\\n  // cases with crazy urls like ./image/cat1).png\\n  text = text.replace(crazyRegExp, writeImageTag);\\n\\n  // normal cases\\n  text = text.replace(inlineRegExp, writeImageTag);\\n\\n  // handle reference-style shortcuts: ![img text]\\n  text = text.replace(refShortcutRegExp, writeImageTag);\\n\\n  text = globals.converter._dispatch('images.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\\n\\n  // it's faster to have 3 separate regexes for each case than have just one\\n  // because of backtracing, in some cases, it could lead to an exponential effect\\n  // called \\\"catastrophic backtrace\\\". Ominous!\\n\\n  function parseInside (txt, left, right) {\\n    /*\\n    if (options.simplifiedAutoLink) {\\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\\n    }\\n    */\\n    return left + txt + right;\\n  }\\n\\n  // Parse underscores\\n  if (options.literalMidWordUnderscores) {\\n    text = text.replace(/\\\\b___(\\\\S[\\\\s\\\\S]*?)___\\\\b/g, function (wm, txt) {\\n      return parseInside (txt, '<strong><em>', '</em></strong>');\\n    });\\n    text = text.replace(/\\\\b__(\\\\S[\\\\s\\\\S]*?)__\\\\b/g, function (wm, txt) {\\n      return parseInside (txt, '<strong>', '</strong>');\\n    });\\n    text = text.replace(/\\\\b_(\\\\S[\\\\s\\\\S]*?)_\\\\b/g, function (wm, txt) {\\n      return parseInside (txt, '<em>', '</em>');\\n    });\\n  } else {\\n    text = text.replace(/___(\\\\S[\\\\s\\\\S]*?)___/g, function (wm, m) {\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\\n    });\\n    text = text.replace(/__(\\\\S[\\\\s\\\\S]*?)__/g, function (wm, m) {\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\\n    });\\n    text = text.replace(/_([^\\\\s_][\\\\s\\\\S]*?)_/g, function (wm, m) {\\n      // !/^_[^_]/.test(m) - test if it doesn't start with __ (since it seems redundant, we removed it)\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\\n    });\\n  }\\n\\n  // Now parse asterisks\\n  if (options.literalMidWordAsterisks) {\\n    text = text.replace(/([^*]|^)\\\\B\\\\*\\\\*\\\\*(\\\\S[\\\\s\\\\S]*?)\\\\*\\\\*\\\\*\\\\B(?!\\\\*)/g, function (wm, lead, txt) {\\n      return parseInside (txt, lead + '<strong><em>', '</em></strong>');\\n    });\\n    text = text.replace(/([^*]|^)\\\\B\\\\*\\\\*(\\\\S[\\\\s\\\\S]*?)\\\\*\\\\*\\\\B(?!\\\\*)/g, function (wm, lead, txt) {\\n      return parseInside (txt, lead + '<strong>', '</strong>');\\n    });\\n    text = text.replace(/([^*]|^)\\\\B\\\\*(\\\\S[\\\\s\\\\S]*?)\\\\*\\\\B(?!\\\\*)/g, function (wm, lead, txt) {\\n      return parseInside (txt, lead + '<em>', '</em>');\\n    });\\n  } else {\\n    text = text.replace(/\\\\*\\\\*\\\\*(\\\\S[\\\\s\\\\S]*?)\\\\*\\\\*\\\\*/g, function (wm, m) {\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\\n    });\\n    text = text.replace(/\\\\*\\\\*(\\\\S[\\\\s\\\\S]*?)\\\\*\\\\*/g, function (wm, m) {\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\\n    });\\n    text = text.replace(/\\\\*([^\\\\s*][\\\\s\\\\S]*?)\\\\*/g, function (wm, m) {\\n      // !/^\\\\*[^*]/.test(m) - test if it doesn't start with ** (since it seems redundant, we removed it)\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\\n    });\\n  }\\n\\n\\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\\n */\\nshowdown.subParser('lists', function (text, options, globals) {\\n  'use strict';\\n\\n  /**\\n   * Process the contents of a single ordered or unordered list, splitting it\\n   * into individual list items.\\n   * @param {string} listStr\\n   * @param {boolean} trimTrailing\\n   * @returns {string}\\n   */\\n  function processListItems (listStr, trimTrailing) {\\n    // The $g_list_level global keeps track of when we're inside a list.\\n    // Each time we enter a list, we increment it; when we leave a list,\\n    // we decrement. If it's zero, we're not in a list anymore.\\n    //\\n    // We do this because when we're not inside a list, we want to treat\\n    // something like this:\\n    //\\n    //    I recommend upgrading to version\\n    //    8. Oops, now this line is treated\\n    //    as a sub-list.\\n    //\\n    // As a single paragraph, despite the fact that the second line starts\\n    // with a digit-period-space sequence.\\n    //\\n    // Whereas when we're inside a list (or sub-list), that line will be\\n    // treated as the start of a sub-list. What a kludge, huh? This is\\n    // an aspect of Markdown's syntax that's hard to parse perfectly\\n    // without resorting to mind-reading. Perhaps the solution is to\\n    // change the syntax rules such that sub-lists must start with a\\n    // starting cardinal number; e.g. \\\"1.\\\" or \\\"a.\\\".\\n    globals.gListLevel++;\\n\\n    // trim trailing blank lines:\\n    listStr = listStr.replace(/\\\\n{2,}$/, '\\\\n');\\n\\n    // attacklab: add sentinel to emulate \\\\z\\n    listStr += '\\u00a80';\\n\\n    var rgx = /(\\\\n)?(^ {0,3})([*+-]|\\\\d+[.])[ \\\\t]+((\\\\[(x|X| )?])?[ \\\\t]*[^\\\\r]+?(\\\\n{1,2}))(?=\\\\n*(\\u00a80| {0,3}([*+-]|\\\\d+[.])[ \\\\t]+))/gm,\\n        isParagraphed = (/\\\\n[ \\\\t]*\\\\n(?!\\u00a80)/.test(listStr));\\n\\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\\n    // which is a syntax breaking change\\n    // activating this option reverts to old behavior\\n    if (options.disableForced4SpacesIndentedSublists) {\\n      rgx = /(\\\\n)?(^ {0,3})([*+-]|\\\\d+[.])[ \\\\t]+((\\\\[(x|X| )?])?[ \\\\t]*[^\\\\r]+?(\\\\n{1,2}))(?=\\\\n*(\\u00a80|\\\\2([*+-]|\\\\d+[.])[ \\\\t]+))/gm;\\n    }\\n\\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\\n      checked = (checked && checked.trim() !== '');\\n\\n      var item = showdown.subParser('outdent')(m4, options, globals),\\n          bulletStyle = '';\\n\\n      // Support for github tasklists\\n      if (taskbtn && options.tasklists) {\\n        bulletStyle = ' class=\\\"task-list-item\\\" style=\\\"list-style-type: none;\\\"';\\n        item = item.replace(/^[ \\\\t]*\\\\[(x|X| )?]/m, function () {\\n          var otp = '<input type=\\\"checkbox\\\" disabled style=\\\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\\\"';\\n          if (checked) {\\n            otp += ' checked';\\n          }\\n          otp += '>';\\n          return otp;\\n        });\\n      }\\n\\n      // ISSUE #312\\n      // This input: - - - a\\n      // causes trouble to the parser, since it interprets it as:\\n      // <ul><li><li><li>a</li></li></li></ul>\\n      // instead of:\\n      // <ul><li>- - a</li></ul>\\n      // So, to prevent it, we will put a marker (\\u00a8A)in the beginning of the line\\n      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\\n      item = item.replace(/^([-*+]|\\\\d\\\\.)[ \\\\t]+[\\\\S\\\\n ]*/g, function (wm2) {\\n        return '\\u00a8A' + wm2;\\n      });\\n\\n      // m1 - Leading line or\\n      // Has a double return (multi paragraph) or\\n      // Has sublist\\n      if (m1 || (item.search(/\\\\n{2,}/) > -1)) {\\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\\n        item = showdown.subParser('blockGamut')(item, options, globals);\\n      } else {\\n        // Recursion for sub-lists:\\n        item = showdown.subParser('lists')(item, options, globals);\\n        item = item.replace(/\\\\n$/, ''); // chomp(item)\\n        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\\n\\n        // Colapse double linebreaks\\n        item = item.replace(/\\\\n\\\\n+/g, '\\\\n\\\\n');\\n        if (isParagraphed) {\\n          item = showdown.subParser('paragraphs')(item, options, globals);\\n        } else {\\n          item = showdown.subParser('spanGamut')(item, options, globals);\\n        }\\n      }\\n\\n      // now we need to remove the marker (\\u00a8A)\\n      item = item.replace('\\u00a8A', '');\\n      // we can finally wrap the line in list item tags\\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\\\n';\\n\\n      return item;\\n    });\\n\\n    // attacklab: strip sentinel\\n    listStr = listStr.replace(/\\u00a80/g, '');\\n\\n    globals.gListLevel--;\\n\\n    if (trimTrailing) {\\n      listStr = listStr.replace(/\\\\s+$/, '');\\n    }\\n\\n    return listStr;\\n  }\\n\\n  function styleStartNumber (list, listType) {\\n    // check if ol and starts by a number different than 1\\n    if (listType === 'ol') {\\n      var res = list.match(/^ *(\\\\d+)\\\\./);\\n      if (res && res[1] !== '1') {\\n        return ' start=\\\"' + res[1] + '\\\"';\\n      }\\n    }\\n    return '';\\n  }\\n\\n  /**\\n   * Check and parse consecutive lists (better fix for issue #142)\\n   * @param {string} list\\n   * @param {string} listType\\n   * @param {boolean} trimTrailing\\n   * @returns {string}\\n   */\\n  function parseConsecutiveLists (list, listType, trimTrailing) {\\n    // check if we caught 2 or more consecutive lists by mistake\\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\\\d+\\\\.[ \\\\t]/gm : /^ {0,3}\\\\d+\\\\.[ \\\\t]/gm,\\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\\\t]/gm : /^ {0,3}[*+-][ \\\\t]/gm,\\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\\n        result = '';\\n\\n    if (list.search(counterRxg) !== -1) {\\n      (function parseCL (txt) {\\n        var pos = txt.search(counterRxg),\\n            style = styleStartNumber(list, listType);\\n        if (pos !== -1) {\\n          // slice\\n          result += '\\\\n\\\\n<' + listType + style + '>\\\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\\\n';\\n\\n          // invert counterType and listType\\n          listType = (listType === 'ul') ? 'ol' : 'ul';\\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\\n\\n          //recurse\\n          parseCL(txt.slice(pos));\\n        } else {\\n          result += '\\\\n\\\\n<' + listType + style + '>\\\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\\\n';\\n        }\\n      })(list);\\n    } else {\\n      var style = styleStartNumber(list, listType);\\n      result = '\\\\n\\\\n<' + listType + style + '>\\\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\\\n';\\n    }\\n\\n    return result;\\n  }\\n\\n  /** Start of list parsing **/\\n  text = globals.converter._dispatch('lists.before', text, options, globals);\\n  // add sentinel to hack around khtml/safari bug:\\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\\n  text += '\\u00a80';\\n\\n  if (globals.gListLevel) {\\n    text = text.replace(/^(( {0,3}([*+-]|\\\\d+[.])[ \\\\t]+)[^\\\\r]+?(\\u00a80|\\\\n{2,}(?=\\\\S)(?![ \\\\t]*(?:[*+-]|\\\\d+[.])[ \\\\t]+)))/gm,\\n      function (wholeMatch, list, m2) {\\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\\n        return parseConsecutiveLists(list, listType, true);\\n      }\\n    );\\n  } else {\\n    text = text.replace(/(\\\\n\\\\n|^\\\\n?)(( {0,3}([*+-]|\\\\d+[.])[ \\\\t]+)[^\\\\r]+?(\\u00a80|\\\\n{2,}(?=\\\\S)(?![ \\\\t]*(?:[*+-]|\\\\d+[.])[ \\\\t]+)))/gm,\\n      function (wholeMatch, m1, list, m3) {\\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\\n        return parseConsecutiveLists(list, listType, false);\\n      }\\n    );\\n  }\\n\\n  // strip sentinel\\n  text = text.replace(/\\u00a80/, '');\\n  text = globals.converter._dispatch('lists.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Parse metadata at the top of the document\\n */\\nshowdown.subParser('metadata', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.metadata) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('metadata.before', text, options, globals);\\n\\n  function parseMetadataContents (content) {\\n    // raw is raw so it's not changed in any way\\n    globals.metadata.raw = content;\\n\\n    // escape chars forbidden in html attributes\\n    // double quotes\\n    content = content\\n      // ampersand first\\n      .replace(/&/g, '&amp;')\\n      // double quotes\\n      .replace(/\\\"/g, '&quot;');\\n\\n    content = content.replace(/\\\\n {4}/g, ' ');\\n    content.replace(/^([\\\\S ]+): +([\\\\s\\\\S]+?)$/gm, function (wm, key, value) {\\n      globals.metadata.parsed[key] = value;\\n      return '';\\n    });\\n  }\\n\\n  text = text.replace(/^\\\\s*\\u00ab\\u00ab\\u00ab+(\\\\S*?)\\\\n([\\\\s\\\\S]+?)\\\\n\\u00bb\\u00bb\\u00bb+\\\\n/, function (wholematch, format, content) {\\n    parseMetadataContents(content);\\n    return '\\u00a8M';\\n  });\\n\\n  text = text.replace(/^\\\\s*---+(\\\\S*?)\\\\n([\\\\s\\\\S]+?)\\\\n---+\\\\n/, function (wholematch, format, content) {\\n    if (format) {\\n      globals.metadata.format = format;\\n    }\\n    parseMetadataContents(content);\\n    return '\\u00a8M';\\n  });\\n\\n  text = text.replace(/\\u00a8M/g, '');\\n\\n  text = globals.converter._dispatch('metadata.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Remove one level of line-leading tabs or spaces\\n */\\nshowdown.subParser('outdent', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('outdent.before', text, options, globals);\\n\\n  // attacklab: hack around Konqueror 3.5.4 bug:\\n  // \\\"----------bug\\\".replace(/^-/g,\\\"\\\") == \\\"bug\\\"\\n  text = text.replace(/^(\\\\t|[ ]{1,4})/gm, '\\u00a80'); // attacklab: g_tab_width\\n\\n  // attacklab: clean up hack\\n  text = text.replace(/\\u00a80/g, '');\\n\\n  text = globals.converter._dispatch('outdent.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n *\\n */\\nshowdown.subParser('paragraphs', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\\n  // Strip leading and trailing lines:\\n  text = text.replace(/^\\\\n+/g, '');\\n  text = text.replace(/\\\\n+$/g, '');\\n\\n  var grafs = text.split(/\\\\n{2,}/g),\\n      grafsOut = [],\\n      end = grafs.length; // Wrap <p> tags\\n\\n  for (var i = 0; i < end; i++) {\\n    var str = grafs[i];\\n    // if this is an HTML marker, copy it\\n    if (str.search(/\\u00a8(K|G)(\\\\d+)\\\\1/g) >= 0) {\\n      grafsOut.push(str);\\n\\n    // test for presence of characters to prevent empty lines being parsed\\n    // as paragraphs (resulting in undesired extra empty paragraphs)\\n    } else if (str.search(/\\\\S/) >= 0) {\\n      str = showdown.subParser('spanGamut')(str, options, globals);\\n      str = str.replace(/^([ \\\\t]*)/g, '<p>');\\n      str += '</p>';\\n      grafsOut.push(str);\\n    }\\n  }\\n\\n  /** Unhashify HTML blocks */\\n  end = grafsOut.length;\\n  for (i = 0; i < end; i++) {\\n    var blockText = '',\\n        grafsOutIt = grafsOut[i],\\n        codeFlag = false;\\n    // if this is a marker for an html block...\\n    // use RegExp.test instead of string.search because of QML bug\\n    while (/\\u00a8(K|G)(\\\\d+)\\\\1/.test(grafsOutIt)) {\\n      var delim = RegExp.$1,\\n          num   = RegExp.$2;\\n\\n      if (delim === 'K') {\\n        blockText = globals.gHtmlBlocks[num];\\n      } else {\\n        // we need to check if ghBlock is a false positive\\n        if (codeFlag) {\\n          // use encoded version of all text\\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text, options, globals);\\n        } else {\\n          blockText = globals.ghCodeBlocks[num].codeblock;\\n        }\\n      }\\n      blockText = blockText.replace(/\\\\$/g, '$$$$'); // Escape any dollar signs\\n\\n      grafsOutIt = grafsOutIt.replace(/(\\\\n\\\\n)?\\u00a8(K|G)\\\\d+\\\\2(\\\\n\\\\n)?/, blockText);\\n      // Check if grafsOutIt is a pre->code\\n      if (/^<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>/.test(grafsOutIt)) {\\n        codeFlag = true;\\n      }\\n    }\\n    grafsOut[i] = grafsOutIt;\\n  }\\n  text = grafsOut.join('\\\\n');\\n  // Strip leading and trailing lines:\\n  text = text.replace(/^\\\\n+/g, '');\\n  text = text.replace(/\\\\n+$/g, '');\\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\\n});\\n\\r\\n/**\\n * Run extension\\n */\\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\\n  'use strict';\\n\\n  if (ext.filter) {\\n    text = ext.filter(text, globals.converter, options);\\n\\n  } else if (ext.regex) {\\n    // TODO remove this when old extension loading mechanism is deprecated\\n    var re = ext.regex;\\n    if (!(re instanceof RegExp)) {\\n      re = new RegExp(re, 'g');\\n    }\\n    text = text.replace(re, ext.replace);\\n  }\\n\\n  return text;\\n});\\n\\r\\n/**\\n * These are all the transformations that occur *within* block-level\\n * tags like paragraphs, headers, and list items.\\n */\\nshowdown.subParser('spanGamut', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\\n  text = showdown.subParser('codeSpans')(text, options, globals);\\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\\n\\n  // Process anchor and image tags. Images must come first,\\n  // because ![foo][f] looks like an anchor.\\n  text = showdown.subParser('images')(text, options, globals);\\n  text = showdown.subParser('anchors')(text, options, globals);\\n\\n  // Make links out of things like `<http://example.com/>`\\n  // Must come after anchors, because you can use < and >\\n  // delimiters in inline links like [this](<url>).\\n  text = showdown.subParser('autoLinks')(text, options, globals);\\n  text = showdown.subParser('simplifiedAutoLinks')(text, options, globals);\\n  text = showdown.subParser('emoji')(text, options, globals);\\n  text = showdown.subParser('underline')(text, options, globals);\\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\\n  text = showdown.subParser('strikethrough')(text, options, globals);\\n  text = showdown.subParser('ellipsis')(text, options, globals);\\n\\n  // we need to hash HTML tags inside spans\\n  text = showdown.subParser('hashHTMLSpans')(text, options, globals);\\n\\n  // now we encode amps and angles\\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\\n\\n  // Do hard breaks\\n  if (options.simpleLineBreaks) {\\n    // GFM style hard breaks\\n    // only add line breaks if the text does not contain a block (special case for lists)\\n    if (!/\\\\n\\\\n\\u00a8K/.test(text)) {\\n      text = text.replace(/\\\\n+/g, '<br />\\\\n');\\n    }\\n  } else {\\n    // Vanilla hard breaks\\n    text = text.replace(/  +\\\\n/g, '<br />\\\\n');\\n  }\\n\\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nshowdown.subParser('strikethrough', function (text, options, globals) {\\n  'use strict';\\n\\n  function parseInside (txt) {\\n    if (options.simplifiedAutoLink) {\\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\\n    }\\n    return '<del>' + txt + '</del>';\\n  }\\n\\n  if (options.strikethrough) {\\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\\n    text = text.replace(/(?:~){2}([\\\\s\\\\S]+?)(?:~){2}/g, function (wm, txt) { return parseInside(txt); });\\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\\n  }\\n\\n  return text;\\n});\\n\\r\\n/**\\n * Strips link definitions from text, stores the URLs and titles in\\n * hash references.\\n * Link defs are in the form: ^[id]: url \\\"optional title\\\"\\n */\\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\\n  'use strict';\\n\\n  var regex       = /^ {0,3}\\\\[([^\\\\]]+)]:[ \\\\t]*\\\\n?[ \\\\t]*<?([^>\\\\s]+)>?(?: =([*\\\\d]+[A-Za-z%]{0,4})x([*\\\\d]+[A-Za-z%]{0,4}))?[ \\\\t]*\\\\n?[ \\\\t]*(?:(\\\\n*)[\\\"|'(](.+?)[\\\"|')][ \\\\t]*)?(?:\\\\n+|(?=\\u00a80))/gm,\\n      base64Regex = /^ {0,3}\\\\[([^\\\\]]+)]:[ \\\\t]*\\\\n?[ \\\\t]*<?(data:.+?\\\\/.+?;base64,[A-Za-z0-9+/=\\\\n]+?)>?(?: =([*\\\\d]+[A-Za-z%]{0,4})x([*\\\\d]+[A-Za-z%]{0,4}))?[ \\\\t]*\\\\n?[ \\\\t]*(?:(\\\\n*)[\\\"|'(](.+?)[\\\"|')][ \\\\t]*)?(?:\\\\n\\\\n|(?=\\u00a80)|(?=\\\\n\\\\[))/gm;\\n\\n  // attacklab: sentinel workarounds for lack of \\\\A and \\\\Z, safari\\\\khtml bug\\n  text += '\\u00a80';\\n\\n  var replaceFunc = function (wholeMatch, linkId, url, width, height, blankLines, title) {\\n\\n    // if there aren't two instances of linkId it must not be a reference link so back out\\n    linkId = linkId.toLowerCase();\\n    if (text.toLowerCase().split(linkId).length - 1 < 2) {\\n      return wholeMatch;\\n    }\\n    if (url.match(/^data:.+?\\\\/.+?;base64,/)) {\\n      // remove newlines\\n      globals.gUrls[linkId] = url.replace(/\\\\s/g, '');\\n    } else {\\n      globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url, options, globals);  // Link IDs are case-insensitive\\n    }\\n\\n    if (blankLines) {\\n      // Oops, found blank lines, so it's not a title.\\n      // Put back the parenthetical statement we stole.\\n      return blankLines + title;\\n\\n    } else {\\n      if (title) {\\n        globals.gTitles[linkId] = title.replace(/\\\"|'/g, '&quot;');\\n      }\\n      if (options.parseImgDimensions && width && height) {\\n        globals.gDimensions[linkId] = {\\n          width:  width,\\n          height: height\\n        };\\n      }\\n    }\\n    // Completely remove the definition from the text\\n    return '';\\n  };\\n\\n  // first we try to find base64 link references\\n  text = text.replace(base64Regex, replaceFunc);\\n\\n  text = text.replace(regex, replaceFunc);\\n\\n  // attacklab: strip sentinel\\n  text = text.replace(/\\u00a80/, '');\\n\\n  return text;\\n});\\n\\r\\nshowdown.subParser('tables', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.tables) {\\n    return text;\\n  }\\n\\n  var tableRgx       = /^ {0,3}\\\\|?.+\\\\|.+\\\\n {0,3}\\\\|?[ \\\\t]*:?[ \\\\t]*(?:[-=]){2,}[ \\\\t]*:?[ \\\\t]*\\\\|[ \\\\t]*:?[ \\\\t]*(?:[-=]){2,}[\\\\s\\\\S]+?(?:\\\\n\\\\n|\\u00a80)/gm,\\n      //singeColTblRgx = /^ {0,3}\\\\|.+\\\\|\\\\n {0,3}\\\\|[ \\\\t]*:?[ \\\\t]*(?:[-=]){2,}[ \\\\t]*:?[ \\\\t]*\\\\|[ \\\\t]*\\\\n(?: {0,3}\\\\|.+\\\\|\\\\n)+(?:\\\\n\\\\n|\\u00a80)/gm;\\n      singeColTblRgx = /^ {0,3}\\\\|.+\\\\|[ \\\\t]*\\\\n {0,3}\\\\|[ \\\\t]*:?[ \\\\t]*(?:[-=]){2,}[ \\\\t]*:?[ \\\\t]*\\\\|[ \\\\t]*\\\\n( {0,3}\\\\|.+\\\\|[ \\\\t]*\\\\n)*(?:\\\\n|\\u00a80)/gm;\\n\\n  function parseStyles (sLine) {\\n    if (/^:[ \\\\t]*--*$/.test(sLine)) {\\n      return ' style=\\\"text-align:left;\\\"';\\n    } else if (/^--*[ \\\\t]*:[ \\\\t]*$/.test(sLine)) {\\n      return ' style=\\\"text-align:right;\\\"';\\n    } else if (/^:[ \\\\t]*--*[ \\\\t]*:$/.test(sLine)) {\\n      return ' style=\\\"text-align:center;\\\"';\\n    } else {\\n      return '';\\n    }\\n  }\\n\\n  function parseHeaders (header, style) {\\n    var id = '';\\n    header = header.trim();\\n    // support both tablesHeaderId and tableHeaderId due to error in documentation so we don't break backwards compatibility\\n    if (options.tablesHeaderId || options.tableHeaderId) {\\n      id = ' id=\\\"' + header.replace(/ /g, '_').toLowerCase() + '\\\"';\\n    }\\n    header = showdown.subParser('spanGamut')(header, options, globals);\\n\\n    return '<th' + id + style + '>' + header + '</th>\\\\n';\\n  }\\n\\n  function parseCells (cell, style) {\\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\\n    return '<td' + style + '>' + subText + '</td>\\\\n';\\n  }\\n\\n  function buildTable (headers, cells) {\\n    var tb = '<table>\\\\n<thead>\\\\n<tr>\\\\n',\\n        tblLgn = headers.length;\\n\\n    for (var i = 0; i < tblLgn; ++i) {\\n      tb += headers[i];\\n    }\\n    tb += '</tr>\\\\n</thead>\\\\n<tbody>\\\\n';\\n\\n    for (i = 0; i < cells.length; ++i) {\\n      tb += '<tr>\\\\n';\\n      for (var ii = 0; ii < tblLgn; ++ii) {\\n        tb += cells[i][ii];\\n      }\\n      tb += '</tr>\\\\n';\\n    }\\n    tb += '</tbody>\\\\n</table>\\\\n';\\n    return tb;\\n  }\\n\\n  function parseTable (rawTable) {\\n    var i, tableLines = rawTable.split('\\\\n');\\n\\n    for (i = 0; i < tableLines.length; ++i) {\\n      // strip wrong first and last column if wrapped tables are used\\n      if (/^ {0,3}\\\\|/.test(tableLines[i])) {\\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\\\|/, '');\\n      }\\n      if (/\\\\|[ \\\\t]*$/.test(tableLines[i])) {\\n        tableLines[i] = tableLines[i].replace(/\\\\|[ \\\\t]*$/, '');\\n      }\\n      // parse code spans first, but we only support one line code spans\\n      tableLines[i] = showdown.subParser('codeSpans')(tableLines[i], options, globals);\\n    }\\n\\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\\n        rawCells = [],\\n        headers = [],\\n        styles = [],\\n        cells = [];\\n\\n    tableLines.shift();\\n    tableLines.shift();\\n\\n    for (i = 0; i < tableLines.length; ++i) {\\n      if (tableLines[i].trim() === '') {\\n        continue;\\n      }\\n      rawCells.push(\\n        tableLines[i]\\n          .split('|')\\n          .map(function (s) {\\n            return s.trim();\\n          })\\n      );\\n    }\\n\\n    if (rawHeaders.length < rawStyles.length) {\\n      return rawTable;\\n    }\\n\\n    for (i = 0; i < rawStyles.length; ++i) {\\n      styles.push(parseStyles(rawStyles[i]));\\n    }\\n\\n    for (i = 0; i < rawHeaders.length; ++i) {\\n      if (showdown.helper.isUndefined(styles[i])) {\\n        styles[i] = '';\\n      }\\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\\n    }\\n\\n    for (i = 0; i < rawCells.length; ++i) {\\n      var row = [];\\n      for (var ii = 0; ii < headers.length; ++ii) {\\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\\n\\n        }\\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\\n      }\\n      cells.push(row);\\n    }\\n\\n    return buildTable(headers, cells);\\n  }\\n\\n  text = globals.converter._dispatch('tables.before', text, options, globals);\\n\\n  // find escaped pipe characters\\n  text = text.replace(/\\\\\\\\(\\\\|)/g, showdown.helper.escapeCharactersCallback);\\n\\n  // parse multi column tables\\n  text = text.replace(tableRgx, parseTable);\\n\\n  // parse one column tables\\n  text = text.replace(singeColTblRgx, parseTable);\\n\\n  text = globals.converter._dispatch('tables.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\nshowdown.subParser('underline', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.underline) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('underline.before', text, options, globals);\\n\\n  if (options.literalMidWordUnderscores) {\\n    text = text.replace(/\\\\b___(\\\\S[\\\\s\\\\S]*?)___\\\\b/g, function (wm, txt) {\\n      return '<u>' + txt + '</u>';\\n    });\\n    text = text.replace(/\\\\b__(\\\\S[\\\\s\\\\S]*?)__\\\\b/g, function (wm, txt) {\\n      return '<u>' + txt + '</u>';\\n    });\\n  } else {\\n    text = text.replace(/___(\\\\S[\\\\s\\\\S]*?)___/g, function (wm, m) {\\n      return (/\\\\S$/.test(m)) ? '<u>' + m + '</u>' : wm;\\n    });\\n    text = text.replace(/__(\\\\S[\\\\s\\\\S]*?)__/g, function (wm, m) {\\n      return (/\\\\S$/.test(m)) ? '<u>' + m + '</u>' : wm;\\n    });\\n  }\\n\\n  // escape remaining underscores to prevent them being parsed by italic and bold\\n  text = text.replace(/(_)/g, showdown.helper.escapeCharactersCallback);\\n\\n  text = globals.converter._dispatch('underline.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\n/**\\n * Swap back in all the special characters we've hidden.\\n */\\nshowdown.subParser('unescapeSpecialChars', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('unescapeSpecialChars.before', text, options, globals);\\n\\n  text = text.replace(/\\u00a8E(\\\\d+)E/g, function (wholeMatch, m1) {\\n    var charCodeToReplace = parseInt(m1);\\n    return String.fromCharCode(charCodeToReplace);\\n  });\\n\\n  text = globals.converter._dispatch('unescapeSpecialChars.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.blockquote', function (node, globals) {\\n  'use strict';\\n\\n  var txt = '';\\n  if (node.hasChildNodes()) {\\n    var children = node.childNodes,\\n        childrenLength = children.length;\\n\\n    for (var i = 0; i < childrenLength; ++i) {\\n      var innerTxt = showdown.subParser('makeMarkdown.node')(children[i], globals);\\n\\n      if (innerTxt === '') {\\n        continue;\\n      }\\n      txt += innerTxt;\\n    }\\n  }\\n  // cleanup\\n  txt = txt.trim();\\n  txt = '> ' + txt.split('\\\\n').join('\\\\n> ');\\n  return txt;\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.codeBlock', function (node, globals) {\\n  'use strict';\\n\\n  var lang = node.getAttribute('language'),\\n      num  = node.getAttribute('precodenum');\\n  return '```' + lang + '\\\\n' + globals.preList[num] + '\\\\n```';\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.codeSpan', function (node) {\\n  'use strict';\\n\\n  return '`' + node.innerHTML + '`';\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.emphasis', function (node, globals) {\\n  'use strict';\\n\\n  var txt = '';\\n  if (node.hasChildNodes()) {\\n    txt += '*';\\n    var children = node.childNodes,\\n        childrenLength = children.length;\\n    for (var i = 0; i < childrenLength; ++i) {\\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\\n    }\\n    txt += '*';\\n  }\\n  return txt;\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.header', function (node, globals, headerLevel) {\\n  'use strict';\\n\\n  var headerMark = new Array(headerLevel + 1).join('#'),\\n      txt = '';\\n\\n  if (node.hasChildNodes()) {\\n    txt = headerMark + ' ';\\n    var children = node.childNodes,\\n        childrenLength = children.length;\\n\\n    for (var i = 0; i < childrenLength; ++i) {\\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\\n    }\\n  }\\n  return txt;\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.hr', function () {\\n  'use strict';\\n\\n  return '---';\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.image', function (node) {\\n  'use strict';\\n\\n  var txt = '';\\n  if (node.hasAttribute('src')) {\\n    txt += '![' + node.getAttribute('alt') + '](';\\n    txt += '<' + node.getAttribute('src') + '>';\\n    if (node.hasAttribute('width') && node.hasAttribute('height')) {\\n      txt += ' =' + node.getAttribute('width') + 'x' + node.getAttribute('height');\\n    }\\n\\n    if (node.hasAttribute('title')) {\\n      txt += ' \\\"' + node.getAttribute('title') + '\\\"';\\n    }\\n    txt += ')';\\n  }\\n  return txt;\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.links', function (node, globals) {\\n  'use strict';\\n\\n  var txt = '';\\n  if (node.hasChildNodes() && node.hasAttribute('href')) {\\n    var children = node.childNodes,\\n        childrenLength = children.length;\\n    txt = '[';\\n    for (var i = 0; i < childrenLength; ++i) {\\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\\n    }\\n    txt += '](';\\n    txt += '<' + node.getAttribute('href') + '>';\\n    if (node.hasAttribute('title')) {\\n      txt += ' \\\"' + node.getAttribute('title') + '\\\"';\\n    }\\n    txt += ')';\\n  }\\n  return txt;\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.list', function (node, globals, type) {\\n  'use strict';\\n\\n  var txt = '';\\n  if (!node.hasChildNodes()) {\\n    return '';\\n  }\\n  var listItems       = node.childNodes,\\n      listItemsLenght = listItems.length,\\n      listNum = node.getAttribute('start') || 1;\\n\\n  for (var i = 0; i < listItemsLenght; ++i) {\\n    if (typeof listItems[i].tagName === 'undefined' || listItems[i].tagName.toLowerCase() !== 'li') {\\n      continue;\\n    }\\n\\n    // define the bullet to use in list\\n    var bullet = '';\\n    if (type === 'ol') {\\n      bullet = listNum.toString() + '. ';\\n    } else {\\n      bullet = '- ';\\n    }\\n\\n    // parse list item\\n    txt += bullet + showdown.subParser('makeMarkdown.listItem')(listItems[i], globals);\\n    ++listNum;\\n  }\\n\\n  // add comment at the end to prevent consecutive lists to be parsed as one\\n  txt += '\\\\n\\u003c!-- --\\u003e\\\\n';\\n  return txt.trim();\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.listItem', function (node, globals) {\\n  'use strict';\\n\\n  var listItemTxt = '';\\n\\n  var children = node.childNodes,\\n      childrenLenght = children.length;\\n\\n  for (var i = 0; i < childrenLenght; ++i) {\\n    listItemTxt += showdown.subParser('makeMarkdown.node')(children[i], globals);\\n  }\\n  // if it's only one liner, we need to add a newline at the end\\n  if (!/\\\\n$/.test(listItemTxt)) {\\n    listItemTxt += '\\\\n';\\n  } else {\\n    // it's multiparagraph, so we need to indent\\n    listItemTxt = listItemTxt\\n      .split('\\\\n')\\n      .join('\\\\n    ')\\n      .replace(/^ {4}$/gm, '')\\n      .replace(/\\\\n\\\\n+/g, '\\\\n\\\\n');\\n  }\\n\\n  return listItemTxt;\\n});\\n\\r\\n\\n\\nshowdown.subParser('makeMarkdown.node', function (node, globals, spansOnly) {\\n  'use strict';\\n\\n  spansOnly = spansOnly || false;\\n\\n  var txt = '';\\n\\n  // edge case of text without wrapper paragraph\\n  if (node.nodeType === 3) {\\n    return showdown.subParser('makeMarkdown.txt')(node, globals);\\n  }\\n\\n  // HTML comment\\n  if (node.nodeType === 8) {\\n    return '\\u003c!--' + node.data + '--\\u003e\\\\n\\\\n';\\n  }\\n\\n  // process only node elements\\n  if (node.nodeType !== 1) {\\n    return '';\\n  }\\n\\n  var tagName = node.tagName.toLowerCase();\\n\\n  switch (tagName) {\\n\\n    //\\n    // BLOCKS\\n    //\\n    case 'h1':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 1) + '\\\\n\\\\n'; }\\n      break;\\n    case 'h2':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 2) + '\\\\n\\\\n'; }\\n      break;\\n    case 'h3':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 3) + '\\\\n\\\\n'; }\\n      break;\\n    case 'h4':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 4) + '\\\\n\\\\n'; }\\n      break;\\n    case 'h5':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 5) + '\\\\n\\\\n'; }\\n      break;\\n    case 'h6':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.header')(node, globals, 6) + '\\\\n\\\\n'; }\\n      break;\\n\\n    case 'p':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.paragraph')(node, globals) + '\\\\n\\\\n'; }\\n      break;\\n\\n    case 'blockquote':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.blockquote')(node, globals) + '\\\\n\\\\n'; }\\n      break;\\n\\n    case 'hr':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.hr')(node, globals) + '\\\\n\\\\n'; }\\n      break;\\n\\n    case 'ol':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ol') + '\\\\n\\\\n'; }\\n      break;\\n\\n    case 'ul':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ul') + '\\\\n\\\\n'; }\\n      break;\\n\\n    case 'precode':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.codeBlock')(node, globals) + '\\\\n\\\\n'; }\\n      break;\\n\\n    case 'pre':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.pre')(node, globals) + '\\\\n\\\\n'; }\\n      break;\\n\\n    case 'table':\\n      if (!spansOnly) { txt = showdown.subParser('makeMarkdown.table')(node, globals) + '\\\\n\\\\n'; }\\n      break;\\n\\n    //\\n    // SPANS\\n    //\\n    case 'code':\\n      txt = showdown.subParser('makeMarkdown.codeSpan')(node, globals);\\n      break;\\n\\n    case 'em':\\n    case 'i':\\n      txt = showdown.subParser('makeMarkdown.emphasis')(node, globals);\\n      break;\\n\\n    case 'strong':\\n    case 'b':\\n      txt = showdown.subParser('makeMarkdown.strong')(node, globals);\\n      break;\\n\\n    case 'del':\\n      txt = showdown.subParser('makeMarkdown.strikethrough')(node, globals);\\n      break;\\n\\n    case 'a':\\n      txt = showdown.subParser('makeMarkdown.links')(node, globals);\\n      break;\\n\\n    case 'img':\\n      txt = showdown.subParser('makeMarkdown.image')(node, globals);\\n      break;\\n\\n    default:\\n      txt = node.outerHTML + '\\\\n\\\\n';\\n  }\\n\\n  // common normalization\\n  // TODO eventually\\n\\n  return txt;\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.paragraph', function (node, globals) {\\n  'use strict';\\n\\n  var txt = '';\\n  if (node.hasChildNodes()) {\\n    var children = node.childNodes,\\n        childrenLength = children.length;\\n    for (var i = 0; i < childrenLength; ++i) {\\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\\n    }\\n  }\\n\\n  // some text normalization\\n  txt = txt.trim();\\n\\n  return txt;\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.pre', function (node, globals) {\\n  'use strict';\\n\\n  var num  = node.getAttribute('prenum');\\n  return '<pre>' + globals.preList[num] + '</pre>';\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.strikethrough', function (node, globals) {\\n  'use strict';\\n\\n  var txt = '';\\n  if (node.hasChildNodes()) {\\n    txt += '~~';\\n    var children = node.childNodes,\\n        childrenLength = children.length;\\n    for (var i = 0; i < childrenLength; ++i) {\\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\\n    }\\n    txt += '~~';\\n  }\\n  return txt;\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.strong', function (node, globals) {\\n  'use strict';\\n\\n  var txt = '';\\n  if (node.hasChildNodes()) {\\n    txt += '**';\\n    var children = node.childNodes,\\n        childrenLength = children.length;\\n    for (var i = 0; i < childrenLength; ++i) {\\n      txt += showdown.subParser('makeMarkdown.node')(children[i], globals);\\n    }\\n    txt += '**';\\n  }\\n  return txt;\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.table', function (node, globals) {\\n  'use strict';\\n\\n  var txt = '',\\n      tableArray = [[], []],\\n      headings   = node.querySelectorAll('thead>tr>th'),\\n      rows       = node.querySelectorAll('tbody>tr'),\\n      i, ii;\\n  for (i = 0; i < headings.length; ++i) {\\n    var headContent = showdown.subParser('makeMarkdown.tableCell')(headings[i], globals),\\n        allign = '---';\\n\\n    if (headings[i].hasAttribute('style')) {\\n      var style = headings[i].getAttribute('style').toLowerCase().replace(/\\\\s/g, '');\\n      switch (style) {\\n        case 'text-align:left;':\\n          allign = ':---';\\n          break;\\n        case 'text-align:right;':\\n          allign = '---:';\\n          break;\\n        case 'text-align:center;':\\n          allign = ':---:';\\n          break;\\n      }\\n    }\\n    tableArray[0][i] = headContent.trim();\\n    tableArray[1][i] = allign;\\n  }\\n\\n  for (i = 0; i < rows.length; ++i) {\\n    var r = tableArray.push([]) - 1,\\n        cols = rows[i].getElementsByTagName('td');\\n\\n    for (ii = 0; ii < headings.length; ++ii) {\\n      var cellContent = ' ';\\n      if (typeof cols[ii] !== 'undefined') {\\n        cellContent = showdown.subParser('makeMarkdown.tableCell')(cols[ii], globals);\\n      }\\n      tableArray[r].push(cellContent);\\n    }\\n  }\\n\\n  var cellSpacesCount = 3;\\n  for (i = 0; i < tableArray.length; ++i) {\\n    for (ii = 0; ii < tableArray[i].length; ++ii) {\\n      var strLen = tableArray[i][ii].length;\\n      if (strLen > cellSpacesCount) {\\n        cellSpacesCount = strLen;\\n      }\\n    }\\n  }\\n\\n  for (i = 0; i < tableArray.length; ++i) {\\n    for (ii = 0; ii < tableArray[i].length; ++ii) {\\n      if (i === 1) {\\n        if (tableArray[i][ii].slice(-1) === ':') {\\n          tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii].slice(-1), cellSpacesCount - 1, '-') + ':';\\n        } else {\\n          tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount, '-');\\n        }\\n      } else {\\n        tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount);\\n      }\\n    }\\n    txt += '| ' + tableArray[i].join(' | ') + ' |\\\\n';\\n  }\\n\\n  return txt.trim();\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.tableCell', function (node, globals) {\\n  'use strict';\\n\\n  var txt = '';\\n  if (!node.hasChildNodes()) {\\n    return '';\\n  }\\n  var children = node.childNodes,\\n      childrenLength = children.length;\\n\\n  for (var i = 0; i < childrenLength; ++i) {\\n    txt += showdown.subParser('makeMarkdown.node')(children[i], globals, true);\\n  }\\n  return txt.trim();\\n});\\n\\r\\nshowdown.subParser('makeMarkdown.txt', function (node) {\\n  'use strict';\\n\\n  var txt = node.nodeValue;\\n\\n  // multiple spaces are collapsed\\n  txt = txt.replace(/ +/g, ' ');\\n\\n  // replace the custom \\u00a8NBSP; with a space\\n  txt = txt.replace(/\\u00a8NBSP;/g, ' ');\\n\\n  // \\\", <, > and & should replace escaped html entities\\n  txt = showdown.helper.unescapeHTMLEntities(txt);\\n\\n  // escape markdown magic characters\\n  // emphasis, strong and strikethrough - can appear everywhere\\n  // we also escape pipe (|) because of tables\\n  // and escape ` because of code blocks and spans\\n  txt = txt.replace(/([*_~|`])/g, '\\\\\\\\$1');\\n\\n  // escape > because of blockquotes\\n  txt = txt.replace(/^(\\\\s*)>/g, '\\\\\\\\$1>');\\n\\n  // hash character, only troublesome at the beginning of a line because of headers\\n  txt = txt.replace(/^#/gm, '\\\\\\\\#');\\n\\n  // horizontal rules\\n  txt = txt.replace(/^(\\\\s*)([-=]{3,})(\\\\s*)$/, '$1\\\\\\\\$2$3');\\n\\n  // dot, because of ordered lists, only troublesome at the beginning of a line when preceded by an integer\\n  txt = txt.replace(/^( {0,3}\\\\d+)\\\\./gm, '$1\\\\\\\\.');\\n\\n  // +, * and -, at the beginning of a line becomes a list, so we need to escape them also (asterisk was already escaped)\\n  txt = txt.replace(/^( {0,3})([+-])/gm, '$1\\\\\\\\$2');\\n\\n  // images and links, ] followed by ( is problematic, so we escape it\\n  txt = txt.replace(/]([\\\\s]*)\\\\(/g, '\\\\\\\\]$1\\\\\\\\(');\\n\\n  // reference URIs must also be escaped\\n  txt = txt.replace(/^ {0,3}\\\\[([\\\\S \\\\t]*?)]:/gm, '\\\\\\\\[$1]:');\\n\\n  return txt;\\n});\\n\\r\\nvar root = this;\\n\\n// AMD Loader\\nif (typeof define === 'function' && define.amd) {\\n  define(function () {\\n    'use strict';\\n    return showdown;\\n  });\\n\\n// CommonJS/nodeJS Loader\\n} else if (typeof module !== 'undefined' && module.exports) {\\n  module.exports = showdown;\\n\\n// Regular Browser loader\\n} else {\\n  root.showdown = showdown;\\n}\\n}).call(this);\\r\\n\\n//# sourceMappingURL=showdown.js.map\\r\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"getDefaultOpts\",\"simple\",\"defaultOptions\",\"omitExtraWLInCodeBlocks\",\"defaultValue\",\"describe\",\"type\",\"noHeaderId\",\"prefixHeaderId\",\"rawPrefixHeaderId\",\"ghCompatibleHeaderId\",\"rawHeaderId\",\"headerLevelStart\",\"parseImgDimensions\",\"simplifiedAutoLink\",\"excludeTrailingPunctuationFromURLs\",\"literalMidWordUnderscores\",\"literalMidWordAsterisks\",\"strikethrough\",\"tables\",\"tablesHeaderId\",\"ghCodeBlocks\",\"tasklists\",\"smoothLivePreview\",\"smartIndentationFix\",\"disableForced4SpacesIndentedSublists\",\"simpleLineBreaks\",\"requireSpaceBeforeHeadingText\",\"ghMentions\",\"ghMentionsLink\",\"encodeEmails\",\"openLinksInNewWindow\",\"backslashEscapesHTMLTags\",\"emoji\",\"underline\",\"ellipsis\",\"completeHTMLDocument\",\"metadata\",\"splitAdjacentBlockquotes\",\"JSON\",\"parse\",\"stringify\",\"ret\",\"opt\",\"hasOwnProperty\",\"validate\",\"extension\",\"name\",\"errMsg\",\"valid\",\"error\",\"showdown\",\"helper\",\"isArray\",\"i\",\"length\",\"baseMsg\",\"ext\",\"isString\",\"toLowerCase\",\"isUndefined\",\"listeners\",\"filter\",\"regex\",\"ln\",\"RegExp\",\"replace\",\"escapeCharactersCallback\",\"wholeMatch\",\"m1\",\"charCodeAt\",\"charCodeToEscape\",\"parsers\",\"extensions\",\"globalOptions\",\"setFlavor\",\"flavor\",\"github\",\"original\",\"ghost\",\"vanilla\",\"allOn\",\"allOptionsOn\",\"options\",\"setOption\",\"showdown.setOption\",\"key\",\"value\",\"getOption\",\"showdown.getOption\",\"getOptions\",\"showdown.getOptions\",\"resetOptions\",\"showdown.resetOptions\",\"showdown.setFlavor\",\"Error\",\"preset\",\"option\",\"getFlavor\",\"showdown.getFlavor\",\"getFlavorOptions\",\"showdown.getFlavorOptions\",\"getDefaultOptions\",\"showdown.getDefaultOptions\",\"subParser\",\"showdown.subParser\",\"func\",\"showdown.extension\",\"stdExtName\",\"validExtension\",\"getAllExtensions\",\"showdown.getAllExtensions\",\"removeExtension\",\"showdown.removeExtension\",\"resetExtensions\",\"showdown.resetExtensions\",\"validateExtension\",\"showdown.validateExtension\",\"console\",\"warn\",\"showdown.helper.isString\",\"a\",\"String\",\"isFunction\",\"showdown.helper.isFunction\",\"getType\",\"toString\",\"call\",\"showdown.helper.isArray\",\"Array\",\"showdown.helper.isUndefined\",\"forEach\",\"showdown.helper.forEach\",\"obj\",\"callback\",\"prop\",\"showdown.helper.stdExtName\",\"s\",\"escapeCharacters\",\"showdown.helper.escapeCharacters\",\"text\",\"charsToEscape\",\"afterBackslash\",\"regexString\",\"unescapeHTMLEntities\",\"showdown.helper.unescapeHTMLEntities\",\"txt\",\"rgxFindMatchPos\",\"str\",\"left\",\"right\",\"flags\",\"f\",\"g\",\"indexOf\",\"x\",\"l\",\"pos\",\"t\",\"m\",\"exec\",\"test\",\"lastIndex\",\"start\",\"end\",\"index\",\"push\",\"match\",\"matchRecursiveRegExp\",\"showdown.helper.matchRecursiveRegExp\",\"matchPos\",\"results\",\"slice\",\"replaceRecursiveRegExp\",\"showdown.helper.replaceRecursiveRegExp\",\"replacement\",\"repStr\",\"finalStr\",\"lng\",\"bits\",\"join\",\"regexIndexOf\",\"showdown.helper.regexIndexOf\",\"fromIndex\",\"substring\",\"search\",\"splitAtIndex\",\"showdown.helper.splitAtIndex\",\"encodeEmailAddress\",\"showdown.helper.encodeEmailAddress\",\"mail\",\"encode\",\"ch\",\"Math\",\"floor\",\"random\",\"r\",\"padEnd\",\"showdown.helper.padEnd\",\"targetLength\",\"padString\",\"repeat\",\"msg\",\"alert\",\"log\",\"regexes\",\"asteriskDashAndColon\",\"emojis\",\"Converter\",\"showdown.Converter\",\"converterOptions\",\"_parseExtension\",\"langExtensions\",\"outputModifiers\",\"validExt\",\"listen\",\"rTrimInputText\",\"rsp\",\"rgx\",\"setConvFlavor\",\"parsed\",\"raw\",\"format\",\"_constructor\",\"gOpt\",\"_dispatch\",\"this._dispatch\",\"evtName\",\"globals\",\"ei\",\"nText\",\"this.listen\",\"makeHtml\",\"this.makeHtml\",\"gHtmlBlocks\",\"gHtmlMdBlocks\",\"gHtmlSpans\",\"gUrls\",\"gTitles\",\"gDimensions\",\"gListLevel\",\"hashLinkCounts\",\"converter\",\"makeMarkdown\",\"makeMd\",\"this.makeMd\",\"src\",\"HTMLParser\",\"clean\",\"node\",\"n\",\"childNodes\",\"child\",\"nodeType\",\"nodeValue\",\"split\",\"removeChild\",\"window\",\"document\",\"doc\",\"createElement\",\"innerHTML\",\"preList\",\"substitutePreCodeTags\",\"pres\",\"querySelectorAll\",\"presPH\",\"childElementCount\",\"firstChild\",\"tagName\",\"content\",\"trim\",\"language\",\"getAttribute\",\"classes\",\"className\",\"c\",\"matches\",\"outerHTML\",\"setAttribute\",\"nodes\",\"mdDoc\",\"this.setOption\",\"this.getOption\",\"this.getOptions\",\"addExtension\",\"this.addExtension\",\"useExtension\",\"this.useExtension\",\"extensionName\",\"this.setFlavor\",\"this.getFlavor\",\"this.removeExtension\",\"splice\",\"ii\",\"this.getAllExtensions\",\"output\",\"getMetadata\",\"this.getMetadata\",\"getMetadataFormat\",\"this.getMetadataFormat\",\"_setMetadataPair\",\"this._setMetadataPair\",\"_setMetadataFormat\",\"this._setMetadataFormat\",\"_setMetadataRaw\",\"this._setMetadataRaw\",\"writeAnchorTag\",\"linkText\",\"linkId\",\"url\",\"m5\",\"m6\",\"title\",\"result\",\"wm\",\"st\",\"escape\",\"mentions\",\"username\",\"lnk\",\"target\",\"simpleURLRegex\",\"simpleURLRegex2\",\"delimUrlRegex\",\"simpleMailRegex\",\"delimMailRegex\",\"replaceLink\",\"leadingMagicChars\",\"link\",\"m2\",\"m3\",\"trailingPunctuation\",\"trailingMagicChars\",\"lnkTxt\",\"append\",\"lmc\",\"tmc\",\"replaceMail\",\"b\",\"href\",\"bq\",\"pre\",\"pattern\",\"codeblock\",\"doctype\",\"doctypeParsed\",\"charset\",\"lang\",\"meta\",\"leadingText\",\"numSpaces\",\"emojiRgx\",\"emojiCode\",\"tags\",\"comments\",\"delim\",\"repFunc\",\"blockText\",\"blockTags\",\"inside\",\"opTagPos\",\"rgx1\",\"patLeft\",\"patRight\",\"subTexts\",\"newSubText1\",\"concat\",\"hashHTMLSpan\",\"html\",\"repText\",\"limit\",\"num\",\"$1\",\"headerId\",\"prefix\",\"customizedHeaderId\",\"isNaN\",\"parseInt\",\"setextRegexH2\",\"setextRegexH1\",\"spanGamut\",\"hID\",\"hashBlock\",\"matchFound\",\"hLevel\",\"atxStyle\",\"hText\",\"span\",\"header\",\"writeImageTag\",\"altText\",\"width\",\"height\",\"gDims\",\"referenceRegExp\",\"base64RegExp\",\"writeImageTagBase64\",\"crazyRegExp\",\"inlineRegExp\",\"refShortcutRegExp\",\"lead\",\"processListItems\",\"listStr\",\"trimTrailing\",\"isParagraphed\",\"m4\",\"taskbtn\",\"checked\",\"item\",\"bulletStyle\",\"otp\",\"wm2\",\"styleStartNumber\",\"list\",\"listType\",\"res\",\"parseConsecutiveLists\",\"olRgx\",\"ulRgx\",\"counterRxg\",\"parseCL\",\"style\",\"parseMetadataContents\",\"wholematch\",\"grafs\",\"grafsOut\",\"grafsOutIt\",\"codeFlag\",\"$2\",\"re\",\"replaceFunc\",\"blankLines\",\"base64Regex\",\"parseStyles\",\"sLine\",\"parseHeaders\",\"id\",\"tableHeaderId\",\"parseCells\",\"cell\",\"subText\",\"buildTable\",\"headers\",\"cells\",\"tb\",\"tblLgn\",\"parseTable\",\"rawTable\",\"tableLines\",\"rawHeaders\",\"map\",\"rawStyles\",\"rawCells\",\"styles\",\"shift\",\"row\",\"tableRgx\",\"singeColTblRgx\",\"charCodeToReplace\",\"fromCharCode\",\"hasChildNodes\",\"children\",\"childrenLength\",\"innerTxt\",\"headerLevel\",\"headerMark\",\"hasAttribute\",\"listItems\",\"listItemsLenght\",\"listNum\",\"bullet\",\"listItemTxt\",\"childrenLenght\",\"spansOnly\",\"data\",\"tableArray\",\"headings\",\"rows\",\"headContent\",\"allign\",\"cols\",\"getElementsByTagName\",\"cellContent\",\"cellSpacesCount\",\"strLen\",\"define\",\"amd\",\"root\"]\n}\n"]