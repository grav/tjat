["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@instantdb/core/dist/utils/object.js"],"~:js","shadow$provide.module$node_modules$$instantdb$core$dist$utils$object = function(global, require, module, exports) {\n  function areObjectKeysEqual(a, b) {\n    const ak = Object.keys(a), bk = Object.keys(b);\n    return ak.length === bk.length && Object.keys(a).every(k => b.hasOwnProperty(k));\n  }\n  function areObjectsDeepEqual(obj1, obj2) {\n    return \"object\" !== typeof obj1 || \"object\" !== typeof obj2 || null === obj1 || null === obj2 ? obj1 === obj2 : areObjectKeysEqual(obj1, obj2) ? Object.keys(obj1).every(key => areObjectsDeepEqual(obj1[key], obj2[key])) : !1;\n  }\n  function immutableDeepMerge(target, source) {\n    if (!isObject(target) || !isObject(source)) {\n      return source;\n    }\n    const result = {};\n    for (var key$jscomp$0 of Object.keys(target)) {\n      null !== source[key$jscomp$0] && (result[key$jscomp$0] = target[key$jscomp$0]);\n    }\n    for (const key of Object.keys(source)) {\n      null !== source[key] && (key$jscomp$0 = isObject(target[key]) && isObject(source[key]), result[key] = key$jscomp$0 ? immutableDeepMerge(target[key], source[key]) : source[key]);\n    }\n    return result;\n  }\n  function immutableDeepReplace(target, replaceValue, replacementValue) {\n    if (!isObject(target)) {\n      return target;\n    }\n    const result = {};\n    for (const [key, value] of Object.entries(target)) {\n      result[key] = isObject(value) ? immutableDeepReplace(value, replaceValue, replacementValue) : value === replaceValue ? replacementValue : value;\n    }\n    return result;\n  }\n  function isObject(val) {\n    return \"object\" === typeof val && null !== val && !Array.isArray(val);\n  }\n  function dissocIn(obj, path) {\n    if (0 !== path.length) {\n      var [key, ...restPath] = path;\n      return key in obj ? 0 === restPath.length || void 0 === dissocIn(obj[key], restPath) ? (delete obj[key], obj && 0 === Object.keys(obj).length ? void 0 : obj) : obj : obj;\n    }\n  }\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.areObjectKeysEqual = areObjectKeysEqual;\n  exports.areObjectsShallowEqual = function(obj1, obj2) {\n    return Object.keys(obj1).length === Object.keys(obj2).length && Object.keys(obj1).every(key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]);\n  };\n  exports.areObjectsDeepEqual = areObjectsDeepEqual;\n  exports.immutableDeepMerge = immutableDeepMerge;\n  exports.immutableDeepReplace = immutableDeepReplace;\n  exports.isObject = isObject;\n  exports.assocIn = function(obj, path, value) {\n    if (0 === path.length) {\n      return value;\n    }\n    let current = obj || {};\n    for (let i = 0; i < path.length - 1; i++) {\n      const key = path[i];\n      key in current && \"object\" === typeof current[key] || (current[key] = \"number\" === typeof path[i + 1] ? [] : {});\n      current = current[key];\n    }\n    current[path[path.length - 1]] = value;\n    return obj;\n  };\n  exports.dissocIn = dissocIn;\n};\n","~:source","shadow$provide[\"module$node_modules$$instantdb$core$dist$utils$object\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.areObjectKeysEqual = areObjectKeysEqual;\nexports.areObjectsShallowEqual = areObjectsShallowEqual;\nexports.areObjectsDeepEqual = areObjectsDeepEqual;\nexports.immutableDeepMerge = immutableDeepMerge;\nexports.immutableDeepReplace = immutableDeepReplace;\nexports.isObject = isObject;\nexports.assocIn = assocIn;\nexports.dissocIn = dissocIn;\nfunction areObjectKeysEqual(a, b) {\n    const ak = Object.keys(a);\n    const bk = Object.keys(b);\n    return (ak.length === bk.length && Object.keys(a).every((k) => b.hasOwnProperty(k)));\n}\nfunction areObjectsShallowEqual(obj1, obj2) {\n    return (Object.keys(obj1).length === Object.keys(obj2).length &&\n        Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]));\n}\nfunction areObjectsDeepEqual(obj1, obj2) {\n    if (typeof obj1 !== 'object' ||\n        typeof obj2 !== 'object' ||\n        obj1 === null ||\n        obj2 === null) {\n        return obj1 === obj2;\n    }\n    if (!areObjectKeysEqual(obj1, obj2)) {\n        return false;\n    }\n    return Object.keys(obj1).every((key) => areObjectsDeepEqual(obj1[key], obj2[key]));\n}\nfunction immutableDeepMerge(target, source) {\n    if (!isObject(target) || !isObject(source)) {\n        return source;\n    }\n    const result = {};\n    for (const key of Object.keys(target)) {\n        if (source[key] === null)\n            continue;\n        result[key] = target[key];\n    }\n    for (const key of Object.keys(source)) {\n        if (source[key] === null)\n            continue;\n        const areBothObjects = isObject(target[key]) && isObject(source[key]);\n        result[key] = areBothObjects\n            ? immutableDeepMerge(target[key], source[key])\n            : source[key];\n    }\n    return result;\n}\nfunction immutableDeepReplace(target, replaceValue, replacementValue) {\n    if (!isObject(target)) {\n        return target;\n    }\n    const result = {};\n    for (const [key, value] of Object.entries(target)) {\n        result[key] = isObject(value)\n            ? immutableDeepReplace(value, replaceValue, replacementValue)\n            : value === replaceValue\n                ? replacementValue\n                : value;\n    }\n    return result;\n}\nfunction isObject(val) {\n    return typeof val === 'object' && val !== null && !Array.isArray(val);\n}\nfunction assocIn(obj, path, value) {\n    if (path.length === 0) {\n        return value;\n    }\n    let current = obj || {};\n    for (let i = 0; i < path.length - 1; i++) {\n        const key = path[i];\n        if (!(key in current) || typeof current[key] !== 'object') {\n            current[key] = typeof path[i + 1] === 'number' ? [] : {};\n        }\n        current = current[key];\n    }\n    current[path[path.length - 1]] = value;\n    return obj;\n}\nfunction dissocIn(obj, path) {\n    if (path.length === 0) {\n        return undefined;\n    }\n    const [key, ...restPath] = path;\n    if (!(key in obj)) {\n        return obj;\n    }\n    if (restPath.length === 0) {\n        delete obj[key];\n        return isEmpty(obj) ? undefined : obj;\n    }\n    const child = dissocIn(obj[key], restPath);\n    if (child === undefined) {\n        delete obj[key];\n        return isEmpty(obj) ? undefined : obj;\n    }\n    return obj;\n}\nfunction isEmpty(obj) {\n    return obj && Object.keys(obj).length === 0;\n}\n//# sourceMappingURL=object.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","immutableDeepReplace","dissocIn","isObject","value","areObjectsShallowEqual","areObjectsDeepEqual","immutableDeepMerge","areObjectKeysEqual","assocIn"]],"~:compiled-at",1756239699941,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$instantdb$core$dist$utils$object.js\",\n\"lineCount\":65,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@instantdb/core/dist/utils/object.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$instantdb$core$dist$utils$object\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.areObjectKeysEqual = areObjectKeysEqual;\\nexports.areObjectsShallowEqual = areObjectsShallowEqual;\\nexports.areObjectsDeepEqual = areObjectsDeepEqual;\\nexports.immutableDeepMerge = immutableDeepMerge;\\nexports.immutableDeepReplace = immutableDeepReplace;\\nexports.isObject = isObject;\\nexports.assocIn = assocIn;\\nexports.dissocIn = dissocIn;\\nfunction areObjectKeysEqual(a, b) {\\n    const ak = Object.keys(a);\\n    const bk = Object.keys(b);\\n    return (ak.length === bk.length && Object.keys(a).every((k) => b.hasOwnProperty(k)));\\n}\\nfunction areObjectsShallowEqual(obj1, obj2) {\\n    return (Object.keys(obj1).length === Object.keys(obj2).length &&\\n        Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]));\\n}\\nfunction areObjectsDeepEqual(obj1, obj2) {\\n    if (typeof obj1 !== 'object' ||\\n        typeof obj2 !== 'object' ||\\n        obj1 === null ||\\n        obj2 === null) {\\n        return obj1 === obj2;\\n    }\\n    if (!areObjectKeysEqual(obj1, obj2)) {\\n        return false;\\n    }\\n    return Object.keys(obj1).every((key) => areObjectsDeepEqual(obj1[key], obj2[key]));\\n}\\nfunction immutableDeepMerge(target, source) {\\n    if (!isObject(target) || !isObject(source)) {\\n        return source;\\n    }\\n    const result = {};\\n    for (const key of Object.keys(target)) {\\n        if (source[key] === null)\\n            continue;\\n        result[key] = target[key];\\n    }\\n    for (const key of Object.keys(source)) {\\n        if (source[key] === null)\\n            continue;\\n        const areBothObjects = isObject(target[key]) && isObject(source[key]);\\n        result[key] = areBothObjects\\n            ? immutableDeepMerge(target[key], source[key])\\n            : source[key];\\n    }\\n    return result;\\n}\\nfunction immutableDeepReplace(target, replaceValue, replacementValue) {\\n    if (!isObject(target)) {\\n        return target;\\n    }\\n    const result = {};\\n    for (const [key, value] of Object.entries(target)) {\\n        result[key] = isObject(value)\\n            ? immutableDeepReplace(value, replaceValue, replacementValue)\\n            : value === replaceValue\\n                ? replacementValue\\n                : value;\\n    }\\n    return result;\\n}\\nfunction isObject(val) {\\n    return typeof val === 'object' && val !== null && !Array.isArray(val);\\n}\\nfunction assocIn(obj, path, value) {\\n    if (path.length === 0) {\\n        return value;\\n    }\\n    let current = obj || {};\\n    for (let i = 0; i < path.length - 1; i++) {\\n        const key = path[i];\\n        if (!(key in current) || typeof current[key] !== 'object') {\\n            current[key] = typeof path[i + 1] === 'number' ? [] : {};\\n        }\\n        current = current[key];\\n    }\\n    current[path[path.length - 1]] = value;\\n    return obj;\\n}\\nfunction dissocIn(obj, path) {\\n    if (path.length === 0) {\\n        return undefined;\\n    }\\n    const [key, ...restPath] = path;\\n    if (!(key in obj)) {\\n        return obj;\\n    }\\n    if (restPath.length === 0) {\\n        delete obj[key];\\n        return isEmpty(obj) ? undefined : obj;\\n    }\\n    const child = dissocIn(obj[key], restPath);\\n    if (child === undefined) {\\n        delete obj[key];\\n        return isEmpty(obj) ? undefined : obj;\\n    }\\n    return obj;\\n}\\nfunction isEmpty(obj) {\\n    return obj && Object.keys(obj).length === 0;\\n}\\n//# sourceMappingURL=object.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"areObjectKeysEqual\",\"a\",\"b\",\"ak\",\"Object\",\"keys\",\"bk\",\"length\",\"every\",\"k\",\"hasOwnProperty\",\"areObjectsDeepEqual\",\"obj1\",\"obj2\",\"key\",\"immutableDeepMerge\",\"target\",\"source\",\"isObject\",\"result\",\"areBothObjects\",\"immutableDeepReplace\",\"replaceValue\",\"replacementValue\",\"value\",\"entries\",\"val\",\"Array\",\"isArray\",\"dissocIn\",\"obj\",\"path\",\"restPath\",\"undefined\",\"child\",\"defineProperty\",\"areObjectsShallowEqual\",\"assocIn\",\"current\",\"i\"]\n}\n"]