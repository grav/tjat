["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@instantdb/core/dist/schemaTypes.js"],"~:js","shadow$provide.module$node_modules$$instantdb$core$dist$schemaTypes = function(global, require, module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.InstantGraph = exports.InstantSchemaDef = exports.EntityDef = exports.LinkAttrDef = exports.DataAttrDef = void 0;\n  class DataAttrDef {\n    constructor(valueType, required, config = {indexed:!1, unique:!1}) {\n      this.valueType = valueType;\n      this.required = required;\n      this.config = config;\n    }\n    optional() {\n      return new DataAttrDef(this.valueType, !1);\n    }\n    unique() {\n      return new DataAttrDef(this.valueType, this.required, Object.assign(Object.assign({}, this.config), {unique:!0}));\n    }\n    indexed() {\n      return new DataAttrDef(this.valueType, this.required, Object.assign(Object.assign({}, this.config), {indexed:!0}));\n    }\n  }\n  exports.DataAttrDef = DataAttrDef;\n  class LinkAttrDef {\n    constructor(cardinality, entityName) {\n      this.cardinality = cardinality;\n      this.entityName = entityName;\n    }\n  }\n  exports.LinkAttrDef = LinkAttrDef;\n  class EntityDef {\n    constructor(attrs, links) {\n      this.attrs = attrs;\n      this.links = links;\n    }\n    asType() {\n      return new EntityDef(this.attrs, this.links);\n    }\n  }\n  exports.EntityDef = EntityDef;\n  class InstantSchemaDef {\n    constructor(entities, links, rooms) {\n      this.entities = entities;\n      this.links = links;\n      this.rooms = rooms;\n    }\n    withRoomSchema() {\n      return new InstantSchemaDef(this.entities, this.links, {});\n    }\n  }\n  exports.InstantSchemaDef = InstantSchemaDef;\n  class InstantGraph {\n    constructor(entities, links) {\n      this.entities = entities;\n      this.links = links;\n    }\n    withRoomSchema() {\n      return new InstantGraph(this.entities, this.links);\n    }\n  }\n  exports.InstantGraph = InstantGraph;\n};\n","~:source","shadow$provide[\"module$node_modules$$instantdb$core$dist$schemaTypes\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstantGraph = exports.InstantSchemaDef = exports.EntityDef = exports.LinkAttrDef = exports.DataAttrDef = void 0;\nclass DataAttrDef {\n    constructor(valueType, required, config = { indexed: false, unique: false }) {\n        this.valueType = valueType;\n        this.required = required;\n        this.config = config;\n    }\n    optional() {\n        return new DataAttrDef(this.valueType, false);\n    }\n    unique() {\n        return new DataAttrDef(this.valueType, this.required, Object.assign(Object.assign({}, this.config), { unique: true }));\n    }\n    indexed() {\n        return new DataAttrDef(this.valueType, this.required, Object.assign(Object.assign({}, this.config), { indexed: true }));\n    }\n}\nexports.DataAttrDef = DataAttrDef;\nclass LinkAttrDef {\n    constructor(cardinality, entityName) {\n        this.cardinality = cardinality;\n        this.entityName = entityName;\n    }\n}\nexports.LinkAttrDef = LinkAttrDef;\nclass EntityDef {\n    constructor(attrs, links) {\n        this.attrs = attrs;\n        this.links = links;\n    }\n    asType() {\n        return new EntityDef(this.attrs, this.links);\n    }\n}\nexports.EntityDef = EntityDef;\nclass InstantSchemaDef {\n    constructor(entities, links, rooms) {\n        this.entities = entities;\n        this.links = links;\n        this.rooms = rooms;\n    }\n    /**\n     * @deprecated\n     * `withRoomSchema` is deprecated. Define your schema in `rooms` directly:\n     *\n     * @example\n     * // Before:\n     * const schema = i.schema({\n     *   // ...\n     * }).withRoomSchema<RoomSchema>()\n     *\n     * // After\n     * const schema = i.schema({\n     *  rooms: {\n     *    // ...\n     *  }\n     * })\n     *\n     * @see https://instantdb.com/docs/presence-and-topics#typesafety\n     */\n    withRoomSchema() {\n        return new InstantSchemaDef(this.entities, this.links, {});\n    }\n}\nexports.InstantSchemaDef = InstantSchemaDef;\n/**\n * @deprecated\n * `i.graph` is deprecated. Use `i.schema` instead.\n *\n * @see https://instantdb.com/docs/modeling-data\n */\nclass InstantGraph {\n    constructor(entities, links) {\n        this.entities = entities;\n        this.links = links;\n    }\n    withRoomSchema() {\n        return new InstantGraph(this.entities, this.links);\n    }\n}\nexports.InstantGraph = InstantGraph;\n//# sourceMappingURL=schemaTypes.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["entityName","attrs","unique","config","indexed","EntityDef","__esModule","value","InstantSchemaDef","LinkAttrDef","links","required","cardinality","valueType","DataAttrDef","rooms","InstantGraph","entities"]],"~:compiled-at",1756239699996,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$instantdb$core$dist$schemaTypes.js\",\n\"lineCount\":60,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@instantdb/core/dist/schemaTypes.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$instantdb$core$dist$schemaTypes\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.InstantGraph = exports.InstantSchemaDef = exports.EntityDef = exports.LinkAttrDef = exports.DataAttrDef = void 0;\\nclass DataAttrDef {\\n    constructor(valueType, required, config = { indexed: false, unique: false }) {\\n        this.valueType = valueType;\\n        this.required = required;\\n        this.config = config;\\n    }\\n    optional() {\\n        return new DataAttrDef(this.valueType, false);\\n    }\\n    unique() {\\n        return new DataAttrDef(this.valueType, this.required, Object.assign(Object.assign({}, this.config), { unique: true }));\\n    }\\n    indexed() {\\n        return new DataAttrDef(this.valueType, this.required, Object.assign(Object.assign({}, this.config), { indexed: true }));\\n    }\\n}\\nexports.DataAttrDef = DataAttrDef;\\nclass LinkAttrDef {\\n    constructor(cardinality, entityName) {\\n        this.cardinality = cardinality;\\n        this.entityName = entityName;\\n    }\\n}\\nexports.LinkAttrDef = LinkAttrDef;\\nclass EntityDef {\\n    constructor(attrs, links) {\\n        this.attrs = attrs;\\n        this.links = links;\\n    }\\n    asType() {\\n        return new EntityDef(this.attrs, this.links);\\n    }\\n}\\nexports.EntityDef = EntityDef;\\nclass InstantSchemaDef {\\n    constructor(entities, links, rooms) {\\n        this.entities = entities;\\n        this.links = links;\\n        this.rooms = rooms;\\n    }\\n    /**\\n     * @deprecated\\n     * `withRoomSchema` is deprecated. Define your schema in `rooms` directly:\\n     *\\n     * @example\\n     * // Before:\\n     * const schema = i.schema({\\n     *   // ...\\n     * }).withRoomSchema<RoomSchema>()\\n     *\\n     * // After\\n     * const schema = i.schema({\\n     *  rooms: {\\n     *    // ...\\n     *  }\\n     * })\\n     *\\n     * @see https://instantdb.com/docs/presence-and-topics#typesafety\\n     */\\n    withRoomSchema() {\\n        return new InstantSchemaDef(this.entities, this.links, {});\\n    }\\n}\\nexports.InstantSchemaDef = InstantSchemaDef;\\n/**\\n * @deprecated\\n * `i.graph` is deprecated. Use `i.schema` instead.\\n *\\n * @see https://instantdb.com/docs/modeling-data\\n */\\nclass InstantGraph {\\n    constructor(entities, links) {\\n        this.entities = entities;\\n        this.links = links;\\n    }\\n    withRoomSchema() {\\n        return new InstantGraph(this.entities, this.links);\\n    }\\n}\\nexports.InstantGraph = InstantGraph;\\n//# sourceMappingURL=schemaTypes.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"InstantGraph\",\"InstantSchemaDef\",\"EntityDef\",\"LinkAttrDef\",\"DataAttrDef\",\"constructor\",\"valueType\",\"required\",\"config\",\"indexed\",\"unique\",\"optional\",\"assign\",\"cardinality\",\"entityName\",\"attrs\",\"links\",\"asType\",\"entities\",\"rooms\",\"withRoomSchema\"]\n}\n"]